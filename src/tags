!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A0	phreeqcpp/Phreeqc.h	/^	LDBLE A0;$/;"	m	class:Phreeqc
AA	phreeqcpp/Phreeqc.h	/^	LDBLE GASCON, TZ, AA;$/;"	m	class:Phreeqc
ABS	phreeqcpp/sundialsmath.h	/^#define ABS(/;"	d
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/config\/missing aclocal-1.14$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACTION	phreeqcpp/global_structures.h	/^{ FIND, ENTER } ACTION;$/;"	t	typeref:enum:__anon17
ADAMS	phreeqcpp/cvode.h	/^	{ ADAMS, BDF };				\/* lmm *\/$/;"	e	enum:__anon4
ADAMS_Q_MAX	phreeqcpp/cvode.h	/^#define ADAMS_Q_MAX /;"	d
ADDON	phreeqcpp/cvode.cpp	/^#define ADDON /;"	d	file:
ADVECTION	phreeqcpp/global_structures.h	/^#define ADVECTION	/;"	d
AH2O	phreeqcpp/global_structures.h	/^#define AH2O /;"	d
AH2O_FACTOR	phreeqcpp/global_structures.h	/^#define AH2O_FACTOR /;"	d
ALK	phreeqcpp/global_structures.h	/^#define ALK /;"	d
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/src -I$(top_srcdir)\/src\/phreeqcpp -I$(top_srcdir)\/src\/phreeqcpp\/common -I$(top_srcdir)\/src\/phreeqcpp\/PhreeqcKeywords$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LDFLAGS	Makefile	/^AM_LDFLAGS = -release 3.3.7$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_F77	Makefile	/^AM_V_F77 = $(am__v_F77_$(V))$/;"	m
AM_V_F77LD	Makefile	/^AM_V_F77LD = $(am__v_F77LD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
APR_STRINGIFY	Version.h	/^#define APR_STRINGIFY(/;"	d
APR_STRINGIFY_HELPER	Version.h	/^#define APR_STRINGIFY_HELPER(/;"	d
AQ	phreeqcpp/global_structures.h	/^#define AQ /;"	d
AR	Makefile	/^AR = ar$/;"	m
ASSERT	Debug.h	/^#define ASSERT /;"	d
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/config\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/config\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/config\/missing automake-1.14$/;"	m
AVOGADRO	phreeqcpp/global_structures.h	/^#define AVOGADRO /;"	d
AW	phreeqcpp/Phreeqc.h	/^	LDBLE AW;$/;"	m	class:Phreeqc
AWK	Makefile	/^AWK = awk$/;"	m
AccumulateLine	IPhreeqc.cpp	/^VRESULT IPhreeqc::AccumulateLine(const char *line)$/;"	f	class:IPhreeqc
AccumulateLine	IPhreeqcF.f	/^      FUNCTION AccumulateLine(/;"	f
AccumulateLine	IPhreeqcLib.cpp	/^AccumulateLine(int id, const char *line)$/;"	f
AccumulateLine	IPhreeqc_interface.F90	/^INTEGER FUNCTION AccumulateLine(/;"	f	module:IPhreeqc
AccumulateLineF	IPhreeqc_interface_F.cpp	/^AccumulateLineF(int *id, char *line)$/;"	f
AccumulateLineF	IPhreeqc_interface_F.h	/^#define AccumulateLineF /;"	d
AccumulateLineF	fwrap.cpp	/^AccumulateLineF(int *id, char *line, size_t line_length)$/;"	f
AccumulateLineF	fwrap.h	/^#define AccumulateLineF /;"	d
Add	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Add(cxxStorageBin &src, int n)$/;"	f	class:cxxStorageBin
Add	phreeqcpp/cxxMix.h	/^	void Add(int n, LDBLE f)$/;"	f	class:cxxMix
AddError	ErrorReporter.hxx	/^size_t CErrorReporter<OS>::AddError(const char* error_msg)$/;"	f	class:CErrorReporter
AddError	IPhreeqc.cpp	/^size_t IPhreeqc::AddError(const char* str)$/;"	f	class:IPhreeqc
AddError	IPhreeqcF.f	/^      FUNCTION AddError(/;"	f
AddError	IPhreeqcLib.cpp	/^AddError(int id, const char* error_msg)$/;"	f
AddError	IPhreeqc_interface.F90	/^INTEGER FUNCTION AddError(/;"	f	module:IPhreeqc
AddErrorF	IPhreeqc_interface_F.cpp	/^AddErrorF(int *id, char *error_msg)$/;"	f
AddErrorF	IPhreeqc_interface_F.h	/^#define AddErrorF /;"	d
AddErrorF	fwrap.cpp	/^AddErrorF(int *id, char *error_msg, size_t len)$/;"	f
AddErrorF	fwrap.h	/^#define AddErrorF /;"	d
AddSeries	phreeqcpp/ChartObject.h	/^	bool AddSeries;$/;"	m	class:ChartObject
AddSeries	phreeqcpp/Phreeqc.h	/^	int AddSeries;$/;"	m	class:Phreeqc
AddWarning	IPhreeqc.cpp	/^size_t IPhreeqc::AddWarning(const char* str)$/;"	f	class:IPhreeqc
AddWarning	IPhreeqcF.f	/^      FUNCTION AddWarning(/;"	f
AddWarning	IPhreeqcLib.cpp	/^AddWarning(int id, const char* warn_msg)$/;"	f
AddWarning	IPhreeqc_interface.F90	/^INTEGER FUNCTION AddWarning(/;"	f	module:IPhreeqc
AddWarningF	IPhreeqc_interface_F.cpp	/^AddWarningF(int *id, char *warn_msg)$/;"	f
AddWarningF	IPhreeqc_interface_F.h	/^#define AddWarningF /;"	d
AddWarningF	fwrap.cpp	/^AddWarningF(int *id, char *warn_msg, size_t len)$/;"	f
AddWarningF	fwrap.h	/^#define AddWarningF /;"	d
Add_curve	phreeqcpp/ChartObject.cpp	/^ChartObject::Add_curve(bool plotxy, std::string id, $/;"	f	class:ChartObject
Add_isotopes	phreeqcpp/Solution.cxx	/^cxxSolution::Add_isotopes(const std::map < std::string, cxxSolutionIsotope > & old, LDBLE intensive, LDBLE extensive)$/;"	f	class:cxxSolution
Add_new_series	phreeqcpp/ChartObject.cpp	/^ChartObject::Add_new_series(void)$/;"	f	class:ChartObject
Address	phreeqcpp/global_structures.h	/^typedef unsigned long Address;$/;"	t
AssertValid	CSelectedOutput.cpp	/^void CSelectedOutput::AssertValid(void)const$/;"	f	class:CSelectedOutput
Augment	phreeqcpp/StorageBinList.cpp	/^void StorageBinListItem::Augment(int i)$/;"	f	class:StorageBinListItem
Augment	phreeqcpp/StorageBinList.cpp	/^void StorageBinListItem::Augment(std::string token)$/;"	f	class:StorageBinListItem
AutoLoadOutputFile	phreeqcpp/Phreeqc.h	/^	int AutoLoadOutputFile, CreateToC;$/;"	m	class:Phreeqc
B1	phreeqcpp/Phreeqc.h	/^	LDBLE B1, B2, B1T, B2T, B1TT, B2TT;$/;"	m	class:Phreeqc
B1T	phreeqcpp/Phreeqc.h	/^	LDBLE B1, B2, B1T, B2T, B1TT, B2TT;$/;"	m	class:Phreeqc
B1TT	phreeqcpp/Phreeqc.h	/^	LDBLE B1, B2, B1T, B2T, B1TT, B2TT;$/;"	m	class:Phreeqc
B2	phreeqcpp/Phreeqc.h	/^	LDBLE B1, B2, B1T, B2T, B1TT, B2TT;$/;"	m	class:Phreeqc
B2T	phreeqcpp/Phreeqc.h	/^	LDBLE B1, B2, B1T, B2T, B1TT, B2TT;$/;"	m	class:Phreeqc
B2TT	phreeqcpp/Phreeqc.h	/^	LDBLE B1, B2, B1T, B2T, B1TT, B2TT;$/;"	m	class:Phreeqc
BAD_DKY	phreeqcpp/cvode.h	/^	{ OKAY = 0, BAD_K = -1, BAD_T = -2, BAD_DKY = -3, DKY_NO_MEM = -4 };$/;"	e	enum:__anon10
BAD_K	phreeqcpp/cvode.h	/^	{ OKAY = 0, BAD_K = -1, BAD_T = -2, BAD_DKY = -3, DKY_NO_MEM = -4 };$/;"	e	enum:__anon10
BAD_T	phreeqcpp/cvode.h	/^	{ OKAY = 0, BAD_K = -1, BAD_T = -2, BAD_DKY = -3, DKY_NO_MEM = -4 };$/;"	e	enum:__anon10
BASE	phreeqcpp/dw.cpp	/^BASE(LDBLE D)$/;"	f	class:Phreeqc
BASIC_TOKEN	phreeqcpp/PBasic.h	/^	enum BASIC_TOKEN$/;"	g	class:PBasic
BB	phreeqcpp/dw.cpp	/^BB(LDBLE T)$/;"	f	class:Phreeqc
BDF	phreeqcpp/cvode.h	/^	{ ADAMS, BDF };				\/* lmm *\/$/;"	e	enum:__anon4
BDF_Q_MAX	phreeqcpp/cvode.h	/^#define BDF_Q_MAX /;"	d
BIAS1	phreeqcpp/cvode.cpp	/^#define BIAS1 /;"	d	file:
BIAS2	phreeqcpp/cvode.cpp	/^#define BIAS2 /;"	d	file:
BIAS3	phreeqcpp/cvode.cpp	/^#define BIAS3 /;"	d	file:
BK	phreeqcpp/Phreeqc.h	/^	LDBLE BK[23], DK[23];$/;"	m	class:Phreeqc
BORKOVEK_DL	phreeqcpp/Surface.h	/^	{ NO_DL, BORKOVEK_DL, DONNAN_DL };$/;"	e	enum:cxxSurface::DIFFUSE_LAYER_TYPE
BadInputFormat	phreeqcpp/PBasic.h	/^#define BadInputFormat /;"	d
BatchSaveImage	phreeqcpp/Form1.h	/^			void BatchSaveImage( )$/;"	f	class:zdg_ui2::Form1
CB	phreeqcpp/global_structures.h	/^#define CB /;"	d
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CCM	phreeqcpp/Surface.h	/^	{ UNKNOWN_DL, NO_EDL, DDL, CD_MUSIC, CCM };$/;"	e	enum:cxxSurface::SURFACE_TYPE
CD_MUSIC	phreeqcpp/Surface.h	/^	{ UNKNOWN_DL, NO_EDL, DDL, CD_MUSIC, CCM };$/;"	e	enum:cxxSurface::SURFACE_TYPE
CErrorReporter	ErrorReporter.hxx	/^CErrorReporter<OS>::CErrorReporter(void)$/;"	f	class:CErrorReporter
CErrorReporter	ErrorReporter.hxx	/^class CErrorReporter : public IErrorReporter$/;"	c
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CHARTHANDLER_H_INCLUDED	phreeqcpp/ChartHandler.h	/^#define CHARTHANDLER_H_INCLUDED$/;"	d
CHARTOBJECT_H_INCLUDED	phreeqcpp/ChartObject.h	/^#define CHARTOBJECT_H_INCLUDED$/;"	d
COMBINE	phreeqcpp/gases.cpp	/^#define COMBINE$/;"	d	file:
COMBINE	phreeqcpp/model.cpp	/^#define COMBINE$/;"	d	file:
COMBINE	phreeqcpp/prep.cpp	/^#define COMBINE$/;"	d	file:
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONTINUE	phreeqcpp/PBasic.cpp	/^#define CONTINUE /;"	d	file:
CONTINUE	phreeqcpp/global_structures.h	/^#define CONTINUE /;"	d
CONVERGED	phreeqcpp/global_structures.h	/^#define CONVERGED /;"	d
CONV_FAIL	phreeqcpp/cvode.cpp	/^#define CONV_FAIL /;"	d	file:
CONV_FAILURE	phreeqcpp/cvode.h	/^		TOO_MUCH_ACC = -4, ERR_FAILURE = -5, CONV_FAILURE = -6,$/;"	e	enum:__anon9
CORTES	phreeqcpp/cvode.cpp	/^#define CORTES /;"	d	file:
COSMOT	phreeqcpp/Phreeqc.h	/^	LDBLE COSMOT;$/;"	m	class:Phreeqc
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CParser	phreeqcpp/common/Parser.cxx	/^CParser::CParser(PHRQ_io *io):$/;"	f	class:CParser
CParser	phreeqcpp/common/Parser.cxx	/^CParser::CParser(std::istream & input, PHRQ_io *io):$/;"	f	class:CParser
CParser	phreeqcpp/common/Parser.h	/^class CParser: public PHRQ_base$/;"	c
CRDOWN	phreeqcpp/cvode.cpp	/^#define CRDOWN /;"	d	file:
CSelectedOutput	CSelectedOutput.cpp	/^CSelectedOutput::CSelectedOutput()$/;"	f	class:CSelectedOutput
CSelectedOutput	CSelectedOutput.hxx	/^class CSelectedOutput$/;"	c
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CURVEOBJECT_H_INCLUDED	phreeqcpp/CurveObject.h	/^#define CURVEOBJECT_H_INCLUDED$/;"	d
CVAdamsFinish	phreeqcpp/cvode.cpp	/^CVAdamsFinish(CVodeMem cv_mem, realtype m[], realtype M[], realtype hsum)$/;"	f	file:
CVAdamsStart	phreeqcpp/cvode.cpp	/^CVAdamsStart(CVodeMem cv_mem, realtype m[])$/;"	f	file:
CVAdjustAdams	phreeqcpp/cvode.cpp	/^CVAdjustAdams(CVodeMem cv_mem, int deltaq)$/;"	f	file:
CVAdjustBDF	phreeqcpp/cvode.cpp	/^CVAdjustBDF(CVodeMem cv_mem, int deltaq)$/;"	f	file:
CVAdjustOrder	phreeqcpp/cvode.cpp	/^CVAdjustOrder(CVodeMem cv_mem, int deltaq)$/;"	f	file:
CVAdjustParams	phreeqcpp/cvode.cpp	/^CVAdjustParams(CVodeMem cv_mem)$/;"	f	file:
CVAllocVectors	phreeqcpp/cvode.cpp	/^CVAllocVectors(CVodeMem cv_mem, integertype neq, int maxord, M_Env machEnv)$/;"	f	file:
CVAltSum	phreeqcpp/cvode.cpp	/^CVAltSum(int iend, realtype a[], int k)$/;"	f	file:
CVBDFStab	phreeqcpp/cvode.cpp	/^CVBDFStab(CVodeMem cv_mem)$/;"	f
CVChooseEta	phreeqcpp/cvode.cpp	/^CVChooseEta(CVodeMem cv_mem)$/;"	f	file:
CVCompleteStep	phreeqcpp/cvode.cpp	/^CVCompleteStep(CVodeMem cv_mem)$/;"	f	file:
CVComputeEtaqm1	phreeqcpp/cvode.cpp	/^CVComputeEtaqm1(CVodeMem cv_mem)$/;"	f	file:
CVComputeEtaqp1	phreeqcpp/cvode.cpp	/^CVComputeEtaqp1(CVodeMem cv_mem)$/;"	f	file:
CVDENSE	phreeqcpp/cvdense.cpp	/^#define CVDENSE /;"	d	file:
CVD_DGMAX	phreeqcpp/cvdense.h	/^#define CVD_DGMAX /;"	d
CVD_MSBJ	phreeqcpp/cvdense.h	/^#define CVD_MSBJ /;"	d
CVDecreaseBDF	phreeqcpp/cvode.cpp	/^CVDecreaseBDF(CVodeMem cv_mem)$/;"	f	file:
CVDense	phreeqcpp/cvdense.cpp	/^CVDense(void *cvode_mem, CVDenseJacFn djac, void *jac_data)$/;"	f
CVDenseDQJac	phreeqcpp/cvdense.cpp	/^CVDenseDQJac(integertype N, DenseMat J, RhsFn f, void *f_data,$/;"	f	file:
CVDenseFree	phreeqcpp/cvdense.cpp	/^CVDenseFree(CVodeMem cv_mem)$/;"	f	file:
CVDenseInit	phreeqcpp/cvdense.cpp	/^CVDenseInit(CVodeMem cv_mem)$/;"	f	file:
CVDenseJacFn	phreeqcpp/cvdense.h	/^	typedef void (*CVDenseJacFn) (integertype N, DenseMat J, RhsFn f,$/;"	t
CVDenseMem	phreeqcpp/cvdense.cpp	/^} CVDenseMemRec, *CVDenseMem;$/;"	t	typeref:struct:__anon2	file:
CVDenseMemRec	phreeqcpp/cvdense.cpp	/^} CVDenseMemRec, *CVDenseMem;$/;"	t	typeref:struct:__anon2	file:
CVDenseSetup	phreeqcpp/cvdense.cpp	/^CVDenseSetup(CVodeMem cv_mem, int convfail, N_Vector ypred,$/;"	f	file:
CVDenseSolve	phreeqcpp/cvdense.cpp	/^CVDenseSolve(CVodeMem cv_mem, N_Vector b, N_Vector ycur, N_Vector fcur)$/;"	f	file:
CVDoErrorTest	phreeqcpp/cvode.cpp	/^CVDoErrorTest(CVodeMem cv_mem, int *nflagPtr, int *kflagPtr,$/;"	f	file:
CVEwtSet	phreeqcpp/cvode.cpp	/^CVEwtSet(CVodeMem cv_mem, N_Vector ycur)$/;"	f	file:
CVEwtSetSS	phreeqcpp/cvode.cpp	/^CVEwtSetSS(CVodeMem cv_mem, N_Vector ycur)$/;"	f	file:
CVEwtSetSV	phreeqcpp/cvode.cpp	/^CVEwtSetSV(CVodeMem cv_mem, N_Vector ycur)$/;"	f	file:
CVFreeVectors	phreeqcpp/cvode.cpp	/^CVFreeVectors(CVodeMem cv_mem, int maxord)$/;"	f	file:
CVHandleFailure	phreeqcpp/cvode.cpp	/^CVHandleFailure(CVodeMem cv_mem, int kflag)$/;"	f	file:
CVHandleNFlag	phreeqcpp/cvode.cpp	/^CVHandleNFlag(CVodeMem cv_mem, int *nflagPtr, realtype saved_t, int *ncfPtr)$/;"	f	file:
CVHin	phreeqcpp/cvode.cpp	/^CVHin(CVodeMem cv_mem, realtype tout)$/;"	f	file:
CVIncreaseBDF	phreeqcpp/cvode.cpp	/^CVIncreaseBDF(CVodeMem cv_mem)$/;"	f	file:
CVM	phreeqcpp/cvode.cpp	/^#define CVM /;"	d	file:
CVMEM	phreeqcpp/cvdense.cpp	/^#define CVMEM /;"	d	file:
CVMEM	phreeqcpp/cvode.cpp	/^#define CVMEM /;"	d	file:
CVMEM_MALLOC	phreeqcpp/cvdense.cpp	/^#define CVMEM_MALLOC /;"	d	file:
CVMEM_MALLOC	phreeqcpp/cvode.cpp	/^#define CVMEM_MALLOC /;"	d	file:
CVNewtonIteration	phreeqcpp/cvode.cpp	/^CVNewtonIteration(CVodeMem cv_mem)$/;"	f	file:
CVODE	phreeqcpp/cvode.cpp	/^#define CVODE /;"	d	file:
CVODE_IOPT_SIZE	phreeqcpp/cvode.h	/^#define CVODE_IOPT_SIZE /;"	d
CVODE_NO_MEM	phreeqcpp/cvode.h	/^	{ SUCCESS = 0, CVODE_NO_MEM = -1, ILL_INPUT = -2, TOO_MUCH_WORK = -3,$/;"	e	enum:__anon9
CVODE_ROPT_SIZE	phreeqcpp/cvode.h	/^#define CVODE_ROPT_SIZE /;"	d
CVPredict	phreeqcpp/cvode.cpp	/^CVPredict(CVodeMem cv_mem)$/;"	f	file:
CVPrepareNextStep	phreeqcpp/cvode.cpp	/^CVPrepareNextStep(CVodeMem cv_mem, realtype dsm)$/;"	f	file:
CVREI_ILL_INPUT	phreeqcpp/cvode.h	/^	{ CVREI_NO_MEM = -1, CVREI_ILL_INPUT = -2 };$/;"	e	enum:__anon8
CVREI_NO_MEM	phreeqcpp/cvode.h	/^	{ CVREI_NO_MEM = -1, CVREI_ILL_INPUT = -2 };$/;"	e	enum:__anon8
CVReInit	phreeqcpp/cvode.cpp	/^CVReInit(void *cvode_mem, RhsFn f, realtype t0, N_Vector y0,$/;"	f
CVReInitDense	phreeqcpp/cvdense.cpp	/^CVReInitDense(void *cvode_mem, CVDenseJacFn djac, void *jac_data)$/;"	f
CVRescale	phreeqcpp/cvode.cpp	/^CVRescale(CVodeMem cv_mem)$/;"	f	file:
CVRestore	phreeqcpp/cvode.cpp	/^CVRestore(CVodeMem cv_mem, realtype saved_t)$/;"	f	file:
CVSet	phreeqcpp/cvode.cpp	/^CVSet(CVodeMem cv_mem)$/;"	f	file:
CVSetAdams	phreeqcpp/cvode.cpp	/^CVSetAdams(CVodeMem cv_mem)$/;"	f	file:
CVSetBDF	phreeqcpp/cvode.cpp	/^CVSetBDF(CVodeMem cv_mem)$/;"	f	file:
CVSetEta	phreeqcpp/cvode.cpp	/^CVSetEta(CVodeMem cv_mem)$/;"	f	file:
CVSetTqBDF	phreeqcpp/cvode.cpp	/^CVSetTqBDF(CVodeMem cv_mem, realtype hsum, realtype alpha0,$/;"	f	file:
CVStep	phreeqcpp/cvode.cpp	/^CVStep(CVodeMem cv_mem)$/;"	f	file:
CVUpperBoundH0	phreeqcpp/cvode.cpp	/^CVUpperBoundH0(CVodeMem cv_mem, realtype tdist)$/;"	f	file:
CVYddNorm	phreeqcpp/cvode.cpp	/^CVYddNorm(CVodeMem cv_mem, realtype hg)$/;"	f	file:
CVar	CVar.hxx	/^	CVar(const CVar& varSrc)$/;"	f	class:CVar
CVar	CVar.hxx	/^	CVar(const VAR& varSrc)$/;"	f	class:CVar
CVar	CVar.hxx	/^	CVar(const char* pszSrc)$/;"	f	class:CVar
CVar	CVar.hxx	/^	CVar(double dblSrc) throw()$/;"	f	class:CVar
CVar	CVar.hxx	/^	CVar(long nSrc) throw()$/;"	f	class:CVar
CVar	CVar.hxx	/^	CVar(void) throw()$/;"	f	class:CVar
CVar	CVar.hxx	/^class CVar : public VAR$/;"	c
CVnls	phreeqcpp/cvode.cpp	/^CVnls(CVodeMem cv_mem, int nflag)$/;"	f	file:
CVnlsFunctional	phreeqcpp/cvode.cpp	/^CVnlsFunctional(CVodeMem cv_mem)$/;"	f	file:
CVnlsNewton	phreeqcpp/cvode.cpp	/^CVnlsNewton(CVodeMem cv_mem, int nflag)$/;"	f	file:
CVode	phreeqcpp/cvode.cpp	/^CVode(void *cvode_mem, realtype tout, N_Vector yout, realtype * t, int itask)$/;"	f
CVodeDky	phreeqcpp/cvode.cpp	/^CVodeDky(void *cvode_mem, realtype t, int k, N_Vector dky)$/;"	f
CVodeFree	phreeqcpp/cvode.cpp	/^CVodeFree(void *cvode_mem)$/;"	f
CVodeMalloc	phreeqcpp/cvode.cpp	/^CVodeMalloc(integertype N, RhsFn f, realtype t0, N_Vector y0,$/;"	f
CVodeMem	phreeqcpp/cvode.h	/^	} *CVodeMem;$/;"	t	typeref:struct:CVodeMemRec
CVodeMemRec	phreeqcpp/cvode.h	/^	typedef struct CVodeMemRec$/;"	s
CVsldet	phreeqcpp/cvode.cpp	/^CVsldet(CVodeMem cv_mem)$/;"	f	file:
CXX	Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXKINETICS_H_INCLUDED	phreeqcpp/cxxKinetics.h	/^#define CXXKINETICS_H_INCLUDED$/;"	d
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXMIX_H_INCLUDED	phreeqcpp/cxxMix.h	/^#define CXXMIX_H_INCLUDED$/;"	d
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
Calc_total_moles	phreeqcpp/GasPhase.cxx	/^LDBLE cxxGasPhase::Calc_total_moles(void)const$/;"	f	class:cxxGasPhase
ChO_BATCH_ONLY	phreeqcpp/ChartObject.h	/^	  ChO_BATCH_ONLY = 0,$/;"	e	enum:ChartObject::chart_batch_type
ChO_BMP	phreeqcpp/ChartObject.h	/^	  ChO_BMP        = 6$/;"	e	enum:ChartObject::chart_batch_type
ChO_EMF	phreeqcpp/ChartObject.h	/^	  ChO_EMF        = 1,$/;"	e	enum:ChartObject::chart_batch_type
ChO_GIF	phreeqcpp/ChartObject.h	/^	  ChO_GIF        = 4,$/;"	e	enum:ChartObject::chart_batch_type
ChO_JPG	phreeqcpp/ChartObject.h	/^	  ChO_JPG        = 3,$/;"	e	enum:ChartObject::chart_batch_type
ChO_NO_BATCH	phreeqcpp/ChartObject.h	/^	{ ChO_NO_BATCH   = -1, $/;"	e	enum:ChartObject::chart_batch_type
ChO_PNG	phreeqcpp/ChartObject.h	/^	  ChO_PNG        = 2, $/;"	e	enum:ChartObject::chart_batch_type
ChO_TIFF	phreeqcpp/ChartObject.h	/^	  ChO_TIFF       = 5, $/;"	e	enum:ChartObject::chart_batch_type
Change_Surf	phreeqcpp/global_structures.h	/^struct Change_Surf$/;"	s
Charge_Group	phreeqcpp/global_structures.h	/^struct Charge_Group$/;"	s
ChartHandler	phreeqcpp/ChartHandler.cpp	/^ChartHandler::ChartHandler(PHRQ_io *io)$/;"	f	class:ChartHandler
ChartHandler	phreeqcpp/ChartHandler.h	/^class ChartHandler: public PHRQ_base$/;"	c
ChartObj	phreeqcpp/Form1.h	/^	public ref class ChartObj : public System::Object$/;"	c	namespace:zdg_ui2
ChartObj	phreeqcpp/Form1.h	/^	public:	ChartObj(ChartObject* ptr)$/;"	f	class:zdg_ui2::ChartObj
ChartObject	phreeqcpp/ChartObject.cpp	/^ChartObject::ChartObject(PHRQ_io *io)$/;"	f	class:ChartObject
ChartObject	phreeqcpp/ChartObject.h	/^class ChartObject:public cxxNumKeyword$/;"	c
Clear	CSelectedOutput.cpp	/^void CSelectedOutput::Clear(void)$/;"	f	class:CSelectedOutput
Clear	CVar.hxx	/^	VRESULT Clear(void) { return ::VarClear(this); }$/;"	f	class:CVar
Clear	ErrorReporter.hxx	/^void CErrorReporter<OS>::Clear(void)$/;"	f	class:CErrorReporter
Clear	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Clear(void) $/;"	f	class:cxxStorageBin
Clear	phreeqcpp/StorageBinList.h	/^	void Clear(void) { this->numbers.clear(); };$/;"	f	class:StorageBinListItem
ClearAccumulated	IPhreeqc.hpp	/^	bool                       ClearAccumulated;$/;"	m	class:IPhreeqc
ClearAccumulatedLines	IPhreeqc.cpp	/^void IPhreeqc::ClearAccumulatedLines(void)$/;"	f	class:IPhreeqc
ClearAccumulatedLines	IPhreeqcF.f	/^      FUNCTION ClearAccumulatedLines(/;"	f
ClearAccumulatedLines	IPhreeqcLib.cpp	/^ClearAccumulatedLines(int id)$/;"	f
ClearAccumulatedLines	IPhreeqc_interface.F90	/^INTEGER FUNCTION ClearAccumulatedLines(/;"	f	module:IPhreeqc
ClearAccumulatedLinesF	IPhreeqc_interface_F.cpp	/^ClearAccumulatedLinesF(int *id)$/;"	f
ClearAccumulatedLinesF	IPhreeqc_interface_F.h	/^#define ClearAccumulatedLinesF /;"	d
ClearAccumulatedLinesF	fwrap.cpp	/^ClearAccumulatedLinesF(int *id)$/;"	f
ClearAccumulatedLinesF	fwrap.h	/^#define ClearAccumulatedLinesF /;"	d
ColorList	phreeqcpp/Form1.h	/^			 static cli::array<String^> ^ColorList = {"Red", "Green", "Blue", "Orange", "Magenta", "Black", "Cyan", "Brown", "Lime", "Gray" };$/;"	m	class:zdg_ui2::Form1
Color_vector	phreeqcpp/ChartObject.h	/^	std::vector<std::string> Color_vector; $/;"	m	class:ChartObject
ColumnOffset	phreeqcpp/ChartObject.h	/^	int ColumnOffset;$/;"	m	class:ChartObject
ColumnOffset	phreeqcpp/Phreeqc.h	/^	int RowOffset, ColumnOffset;$/;"	m	class:Phreeqc
Components	IPhreeqc.hpp	/^	std::list< std::string >   Components;$/;"	m	class:IPhreeqc
Const	phreeqcpp/PBasic.h	/^#define Const$/;"	d
ConvertUnits	phreeqcpp/ISolution.cxx	/^cxxISolution::ConvertUnits(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxISolution
Copy	CVar.hxx	/^	VRESULT Copy(const VAR* pSrc) { return ::VarCopy(this, const_cast<VAR*>(pSrc)); }$/;"	f	class:CVar
Copy	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Copy(int destination, int source)$/;"	f	class:cxxStorageBin
CreateIPhreeqc	IPhreeqcF.f	/^      FUNCTION CreateIPhreeqc(/;"	f
CreateIPhreeqc	IPhreeqcLib.cpp	/^CreateIPhreeqc(void)$/;"	f
CreateIPhreeqc	IPhreeqcLib.cpp	/^IPhreeqcLib::CreateIPhreeqc(void)$/;"	f	class:IPhreeqcLib
CreateIPhreeqc	IPhreeqc_interface.F90	/^INTEGER FUNCTION CreateIPhreeqc(/;"	f	module:IPhreeqc
CreateIPhreeqcF	IPhreeqc_interface_F.cpp	/^CreateIPhreeqcF(void)$/;"	f
CreateIPhreeqcF	IPhreeqc_interface_F.h	/^#define CreateIPhreeqcF /;"	d
CreateIPhreeqcF	fwrap.cpp	/^CreateIPhreeqcF(void)$/;"	f
CreateIPhreeqcF	fwrap.h	/^#define CreateIPhreeqcF /;"	d
CreateToC	phreeqcpp/Phreeqc.h	/^	int AutoLoadOutputFile, CreateToC;$/;"	m	class:Phreeqc
Create_initial_data	phreeqcpp/Solution.h	/^	void Create_initial_data()$/;"	f	class:cxxSolution
CurrentSelectedOutputUserNumber	IPhreeqc.hpp	/^	int                                           CurrentSelectedOutputUserNumber;$/;"	m	class:IPhreeqc
Current_step	phreeqcpp/cxxKinetics.cxx	/^Current_step(bool incremental_reactions, int reaction_step) const$/;"	f	class:cxxKinetics
CurveObject	phreeqcpp/CurveObject.cpp	/^CurveObject::CurveObject()$/;"	f	class:CurveObject
CurveObject	phreeqcpp/CurveObject.h	/^class CurveObject$/;"	c
Curves	phreeqcpp/ChartObject.h	/^	std::vector<CurveObject *> Curves;$/;"	m	class:ChartObject
CurvesCSV	phreeqcpp/ChartObject.h	/^	std::vector<CurveObject *> CurvesCSV;$/;"	m	class:ChartObject
DATA	Makefile	/^DATA = $(dist_source_DATA)$/;"	m
DC	phreeqcpp/dw.cpp	/^DC(LDBLE T)$/;"	f	class:Phreeqc
DDL	phreeqcpp/Surface.h	/^	{ UNKNOWN_DL, NO_EDL, DDL, CD_MUSIC, CCM };$/;"	e	enum:cxxSurface::SURFACE_TYPE
DDL_limit	phreeqcpp/Surface.h	/^	LDBLE DDL_limit;$/;"	m	class:cxxSurface
DDL_viscosity	phreeqcpp/Surface.h	/^	LDBLE DDL_viscosity;$/;"	m	class:cxxSurface
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	Makefile	/^DEFS = -DPACKAGE_NAME=\\"IPhreeqc\\" -DPACKAGE_TARNAME=\\"iphreeqc\\" -DPACKAGE_VERSION=\\"3.3.7-11094\\" -DPACKAGE_STRING=\\"IPhreeqc\\ 3.3.7-11094\\" -DPACKAGE_BUGREPORT=\\"charlton@usgs.gov\\" -DPACKAGE_URL=\\"\\" -DPACKAGE=\\"iphreeqc\\" -DVERSION=\\"3.3.7-11094\\" -DSWIG_SHARED_OBJ=1 -DUSE_PHRQ_ALLOC=1 -DNDEBUG=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_FLOAT_H=1 -DHAVE_LIMITS_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STDDEF_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_STDLIB_H=1 -DHAVE_REALLOC=1 -DHAVE_MEMMOVE=1 -DHAVE_MEMSET=1 -DHAVE_STRCHR=1 -DHAVE_STRCSPN=1 -DHAVE_STRTOL=1 -DHAVE_FLOOR=1 -DHAVE_POW=1 -DHAVE_SQRT=1 -DHAVE_ISFINITE=\/\\*\\*\/ -DHAVE_FINITE=\/\\*\\*\/ -DHAVE_ISNAN=1$/;"	m
DELTA_H_UNIT	phreeqcpp/global_structures.h	/^typedef enum { kcal, cal, kjoules, joules } DELTA_H_UNIT;$/;"	t	typeref:enum:__anon14
DELTA_V_UNIT	phreeqcpp/global_structures.h	/^typedef enum { cm3_per_mol, dm3_per_mol, m3_per_mol } DELTA_V_UNIT;$/;"	t	typeref:enum:__anon15
DENSE_COL	phreeqcpp/dense.h	/^#define DENSE_COL(/;"	d
DENSE_ELEM	phreeqcpp/dense.h	/^#define DENSE_ELEM(/;"	d
DENSE_LIW	phreeqcpp/cvdense.h	/^	{ DENSE_NJE = CVODE_IOPT_SIZE, DENSE_LRW, DENSE_LIW };$/;"	e	enum:__anon3
DENSE_LRW	phreeqcpp/cvdense.h	/^	{ DENSE_NJE = CVODE_IOPT_SIZE, DENSE_LRW, DENSE_LIW };$/;"	e	enum:__anon3
DENSE_NJE	phreeqcpp/cvdense.h	/^	{ DENSE_NJE = CVODE_IOPT_SIZE, DENSE_LRW, DENSE_LIW };$/;"	e	enum:__anon3
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DFIND	phreeqcpp/dw.cpp	/^DFIND(LDBLE * DOUT, LDBLE P, LDBLE D, LDBLE T)$/;"	f	class:Phreeqc
DGMAX	phreeqcpp/cvode.cpp	/^#define DGMAX /;"	d	file:
DH_A	phreeqcpp/Phreeqc.h	/^	LDBLE DH_A, DH_B, DH_Av; \/\/ Debye-Hueckel A, B and Av$/;"	m	class:Phreeqc
DH_Av	phreeqcpp/Phreeqc.h	/^	LDBLE DH_A, DH_B, DH_Av; \/\/ Debye-Hueckel A, B and Av$/;"	m	class:Phreeqc
DH_B	phreeqcpp/Phreeqc.h	/^	LDBLE DH_A, DH_B, DH_Av; \/\/ Debye-Hueckel A, B and Av$/;"	m	class:Phreeqc
DICTIONARY_H_INCLUDED	phreeqcpp/Dictionary.h	/^#define DICTIONARY_H_INCLUDED$/;"	d
DIFFUSE_LAYER_TYPE	phreeqcpp/Surface.h	/^	enum DIFFUSE_LAYER_TYPE$/;"	g	class:cxxSurface
DIGIT	phreeqcpp/global_structures.h	/^#define DIGIT /;"	d
DISP	phreeqcpp/global_structures.h	/^#define DISP /;"	d
DISSOLVE	phreeqcpp/global_structures.h	/^#define DISSOLVE /;"	d
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libiphreeqc_la_SOURCES_DIST)$/;"	m
DK	phreeqcpp/Phreeqc.h	/^	LDBLE BK[23], DK[23];$/;"	m	class:Phreeqc
DKY	phreeqcpp/cvode.cpp	/^#define DKY /;"	d	file:
DKY_NO_MEM	phreeqcpp/cvode.h	/^	{ OKAY = 0, BAD_K = -1, BAD_T = -2, BAD_DKY = -3, DKY_NO_MEM = -4 };$/;"	e	enum:__anon10
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DONNAN_DL	phreeqcpp/Surface.h	/^	{ NO_DL, BORKOVEK_DL, DONNAN_DL };$/;"	e	enum:cxxSurface::DIFFUSE_LAYER_TYPE
DO_ERROR_TEST	phreeqcpp/cvode.cpp	/^#define DO_ERROR_TEST /;"	d	file:
DSYMUTIL	Makefile	/^DSYMUTIL = dsymutil$/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPER_H_INCLUDED	phreeqcpp/dumper.h	/^#define DUMPER_H_INCLUDED$/;"	d
DW	phreeqcpp/dw.cpp	/^DW(LDBLE T)$/;"	f	class:Phreeqc
DW0	phreeqcpp/Phreeqc.h	/^	LDBLE VP, DW0;$/;"	m	class:Phreeqc
DZ	phreeqcpp/Phreeqc.h	/^	LDBLE Z, DZ, Y;$/;"	m	class:Phreeqc
Data	phreeqcpp/global_structures.h	/^	char *Data;$/;"	m	struct:Element
DatabaseLoaded	IPhreeqc.hpp	/^	bool                       DatabaseLoaded;$/;"	m	class:IPhreeqc
DblCmp	phreeqcpp/NameDouble.cxx	/^struct DblCmp {     $/;"	s	file:
DeSerialize	CSelectedOutput.cpp	/^void CSelectedOutput::DeSerialize($/;"	f	class:CSelectedOutput
Decrement_active_charts	phreeqcpp/ChartHandler.h	/^	void Decrement_active_charts()$/;"	f	class:ChartHandler
DefaultMaxLoadFactor	phreeqcpp/global_structures.h	/^# define DefaultMaxLoadFactor /;"	d
DenseAddI	phreeqcpp/dense.cpp	/^DenseAddI(DenseMat A)$/;"	f
DenseAllocMat	phreeqcpp/dense.cpp	/^DenseAllocMat(integertype N)$/;"	f
DenseAllocPiv	phreeqcpp/dense.cpp	/^DenseAllocPiv(integertype N)$/;"	f
DenseBacksolve	phreeqcpp/dense.cpp	/^DenseBacksolve(DenseMat A, integertype * p, realtype * b)$/;"	f
DenseCopy	phreeqcpp/dense.cpp	/^DenseCopy(DenseMat A, DenseMat B)$/;"	f
DenseFactor	phreeqcpp/dense.cpp	/^DenseFactor(DenseMat A, integertype * p)$/;"	f
DenseFreeMat	phreeqcpp/dense.cpp	/^DenseFreeMat(DenseMat A)$/;"	f
DenseFreePiv	phreeqcpp/dense.cpp	/^DenseFreePiv(integertype * p)$/;"	f
DenseMat	phreeqcpp/dense.h	/^	} *DenseMat;$/;"	t	typeref:struct:_DenseMat
DensePrint	phreeqcpp/dense.cpp	/^DensePrint(DenseMat A)$/;"	f
DenseScale	phreeqcpp/dense.cpp	/^DenseScale(realtype c, DenseMat A)$/;"	f
DenseZero	phreeqcpp/dense.cpp	/^DenseZero(DenseMat A)$/;"	f
Deserialize	phreeqcpp/ExchComp.cxx	/^cxxExchComp::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxExchComp
Deserialize	phreeqcpp/Exchange.cxx	/^cxxExchange::Deserialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles, int &ii, int &dd)$/;"	f	class:cxxExchange
Deserialize	phreeqcpp/GasComp.cxx	/^cxxGasComp::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxGasComp
Deserialize	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxGasPhase
Deserialize	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::Deserialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles, int &ii, int &dd)$/;"	f	class:cxxKineticsComp
Deserialize	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::Deserialize(Dictionary &dictionary, std::vector<int> &ints, std::vector<double> &doubles, int &ii, int &dd)$/;"	f	class:cxxNameDouble
Deserialize	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxPPassemblage
Deserialize	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::Deserialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles, int &ii, int &dd)$/;"	f	class:cxxPPassemblageComp
Deserialize	phreeqcpp/Pressure.cxx	/^cxxPressure::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxPressure
Deserialize	phreeqcpp/SS.cxx	/^cxxSS::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSS
Deserialize	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSSassemblage
Deserialize	phreeqcpp/SScomp.cxx	/^cxxSScomp::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSScomp
Deserialize	phreeqcpp/Serializer.cxx	/^Serializer::Deserialize(Phreeqc &phreeqc_ref, Dictionary &dictionary, std::vector<int> &ints, std::vector<double> &doubles)$/;"	f	class:Serializer
Deserialize	phreeqcpp/Solution.cxx	/^cxxSolution::Deserialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles, int &ii, int &dd)$/;"	f	class:cxxSolution
Deserialize	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::Deserialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles, int &ii, int &dd)$/;"	f	class:cxxSolutionIsotope
Deserialize	phreeqcpp/Surface.cxx	/^cxxSurface::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSurface
Deserialize	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfDL::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSurfDL
Deserialize	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSurfaceCharge
Deserialize	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::Deserialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles, int &ii, int &dd)$/;"	f	class:cxxSurfaceComp
Deserialize	phreeqcpp/Temperature.cxx	/^cxxTemperature::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxTemperature
Deserialize	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::Deserialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxKinetics
DestroyIPhreeqc	IPhreeqcF.f	/^      FUNCTION DestroyIPhreeqc(/;"	f
DestroyIPhreeqc	IPhreeqcLib.cpp	/^DestroyIPhreeqc(int id)$/;"	f
DestroyIPhreeqc	IPhreeqcLib.cpp	/^IPhreeqcLib::DestroyIPhreeqc(int id)$/;"	f	class:IPhreeqcLib
DestroyIPhreeqc	IPhreeqc_interface.F90	/^INTEGER FUNCTION DestroyIPhreeqc(/;"	f	module:IPhreeqc
DestroyIPhreeqcF	IPhreeqc_interface_F.cpp	/^DestroyIPhreeqcF(int *id)$/;"	f
DestroyIPhreeqcF	IPhreeqc_interface_F.h	/^#define DestroyIPhreeqcF /;"	d
DestroyIPhreeqcF	fwrap.cpp	/^DestroyIPhreeqcF(int *id)$/;"	f
DestroyIPhreeqcF	fwrap.h	/^#define DestroyIPhreeqcF /;"	d
Destroy_initial_data	phreeqcpp/Solution.h	/^	void Destroy_initial_data()$/;"	f	class:cxxSolution
Dictionary	phreeqcpp/Dictionary.cpp	/^Dictionary::Dictionary(std::string & words_string)$/;"	f	class:Dictionary
Dictionary	phreeqcpp/Dictionary.cpp	/^Dictionary::Dictionary(void)$/;"	f	class:Dictionary
Dictionary	phreeqcpp/Dictionary.h	/^class Dictionary$/;"	c
Directory	phreeqcpp/global_structures.h	/^	Segment *Directory[DirectorySize];$/;"	m	struct:__anon19
DirectorySize	phreeqcpp/global_structures.h	/^# define DirectorySize	/;"	d
DirectorySizeShift	phreeqcpp/global_structures.h	/^# define DirectorySizeShift /;"	d
Dispersion_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Dispersion_mix_map;$/;"	m	class:Phreeqc
Doublize	CSelectedOutput.cpp	/^void CSelectedOutput::Doublize($/;"	f	class:CSelectedOutput
Dump	CSelectedOutput.cpp	/^void CSelectedOutput::Dump(const char* heading)$/;"	f	class:CSelectedOutput
DumpFileName	IPhreeqc.hpp	/^	std::string                DumpFileName;$/;"	m	class:IPhreeqc
DumpLines	IPhreeqc.hpp	/^	std::vector< std::string > DumpLines;$/;"	m	class:IPhreeqc
DumpOn	IPhreeqc.hpp	/^	bool                       DumpOn;$/;"	m	class:IPhreeqc
DumpString	IPhreeqc.hpp	/^	std::string                DumpString;$/;"	m	class:IPhreeqc
DumpStringOn	IPhreeqc.hpp	/^	bool                       DumpStringOn;$/;"	m	class:IPhreeqc
Dw	phreeqcpp/SurfaceComp.h	/^	LDBLE Dw;$/;"	m	class:cxxSurfaceComp
Dwt	phreeqcpp/global_structures.h	/^	LDBLE Dwt;					\/* temperature corrected free water diffusion coefficient, m2\/s *\/$/;"	m	struct:spec
ECHO_C	Makefile	/^ECHO_C = \\c$/;"	m
ECHO_LOG	phreeqcpp/common/PHRQ_io.h	/^		ECHO_LOG,$/;"	e	enum:PHRQ_io::ECHO_OPTION
ECHO_N	Makefile	/^ECHO_N = $/;"	m
ECHO_OPTION	phreeqcpp/common/PHRQ_io.h	/^	enum ECHO_OPTION$/;"	g	class:PHRQ_io
ECHO_OPTION	phreeqcpp/common/Parser.h	/^	enum ECHO_OPTION$/;"	g	class:CParser
ECHO_OUTPUT	phreeqcpp/common/PHRQ_io.h	/^		ECHO_OUTPUT$/;"	e	enum:PHRQ_io::ECHO_OPTION
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EITHER	phreeqcpp/global_structures.h	/^#define EITHER /;"	d
EMINUS	phreeqcpp/global_structures.h	/^#define EMINUS /;"	d
EMPTY	phreeqcpp/global_structures.h	/^#define EMPTY /;"	d
ENTER	phreeqcpp/global_structures.h	/^{ FIND, ENTER } ACTION;$/;"	e	enum:__anon17
ENTRY	phreeqcpp/global_structures.h	/^} ENTRY;$/;"	t	typeref:struct:entry
EOL	phreeqcpp/spread.cpp	/^#define EOL /;"	d	file:
EO_ALL	phreeqcpp/common/Parser.h	/^		EO_ALL = 1,$/;"	e	enum:CParser::ECHO_OPTION
EO_KEYWORDS	phreeqcpp/common/Parser.h	/^		EO_KEYWORDS = 2,$/;"	e	enum:CParser::ECHO_OPTION
EO_NOKEYWORDS	phreeqcpp/common/Parser.h	/^		EO_NOKEYWORDS = 3$/;"	e	enum:CParser::ECHO_OPTION
EO_NONE	phreeqcpp/common/Parser.h	/^		EO_NONE = 0,$/;"	e	enum:CParser::ECHO_OPTION
EPSILON	phreeqcpp/global_structures.h	/^#define EPSILON /;"	d
EPSILON_ZERO	phreeqcpp/global_structures.h	/^#define EPSILON_ZERO /;"	d
ERROR	phreeqcpp/global_structures.h	/^#define ERROR /;"	d
ERROR_OSTREAM	phreeqcpp/common/PHRQ_io.h	/^#define ERROR_OSTREAM$/;"	d
ERR_FAILURE	phreeqcpp/cvode.h	/^		TOO_MUCH_ACC = -4, ERR_FAILURE = -5, CONV_FAILURE = -6,$/;"	e	enum:__anon9
ETACF	phreeqcpp/cvode.cpp	/^#define ETACF /;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAMIN	phreeqcpp/cvode.cpp	/^#define ETAMIN /;"	d	file:
ETAMX1	phreeqcpp/cvode.cpp	/^#define ETAMX1 /;"	d	file:
ETAMX2	phreeqcpp/cvode.cpp	/^#define ETAMX2 /;"	d	file:
ETAMX3	phreeqcpp/cvode.cpp	/^#define ETAMX3 /;"	d	file:
ETAMXF	phreeqcpp/cvode.cpp	/^#define ETAMXF /;"	d	file:
ETHETAS	phreeqcpp/pitzer.cpp	/^ETHETAS(LDBLE ZJ, LDBLE ZK, LDBLE I, LDBLE * etheta, LDBLE * ethetap)$/;"	f	class:Phreeqc
ETHETA_PARAMS	phreeqcpp/pitzer.cpp	/^ETHETA_PARAMS(LDBLE X, LDBLE& JAY, LDBLE& JPRIME )$/;"	f	class:Phreeqc
EX	phreeqcpp/global_structures.h	/^#define EX /;"	d
EXCH	phreeqcpp/global_structures.h	/^#define EXCH /;"	d
EXCHANGE_H_INCLUDED	phreeqcpp/Exchange.h	/^#define EXCHANGE_H_INCLUDED$/;"	d
EXCHCOMP_H_INCLUDED	phreeqcpp/ExchComp.h	/^#define EXCHCOMP_H_INCLUDED$/;"	d
EXCP_LINE	phreeqcpp/PBasic.h	/^	long EXCP_LINE;$/;"	m	class:PBasic
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = \\$/;"	m
Element	phreeqcpp/global_structures.h	/^typedef struct Element$/;"	s
Element	phreeqcpp/global_structures.h	/^} Element, *Segment;$/;"	t	typeref:struct:Element
EndOfFile	phreeqcpp/PBasic.h	/^#define EndOfFile /;"	d
EndRow	CSelectedOutput.cpp	/^int CSelectedOutput::EndRow(void)$/;"	f	class:CSelectedOutput
EndRow	IPhreeqc.cpp	/^int IPhreeqc::EndRow(void)$/;"	f	class:IPhreeqc
End_timer	phreeqcpp/ChartHandler.cpp	/^ChartHandler::End_timer()$/;"	f	class:ChartHandler
ErrorFileName	IPhreeqc.hpp	/^	std::string                ErrorFileName;$/;"	m	class:IPhreeqc
ErrorFileOn	IPhreeqc.hpp	/^	bool                       ErrorFileOn;$/;"	m	class:IPhreeqc
ErrorLines	IPhreeqc.hpp	/^	std::vector< std::string > ErrorLines;$/;"	m	class:IPhreeqc
ErrorReporter	IPhreeqc.hpp	/^	IErrorReporter            *ErrorReporter;$/;"	m	class:IPhreeqc
ErrorString	IPhreeqc.hpp	/^	std::string                ErrorString;$/;"	m	class:IPhreeqc
ErrorStringOn	IPhreeqc.hpp	/^	bool                       ErrorStringOn;$/;"	m	class:IPhreeqc
Exchange	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
Exchangers	phreeqcpp/StorageBin.h	/^	std::map < int, cxxExchange > Exchangers;$/;"	m	class:cxxStorageBin
ExpandTable_multi	phreeqcpp/utilities.cpp	/^ExpandTable_multi(HashTable * Table)$/;"	f	class:Phreeqc
ExtractCurveInfo	phreeqcpp/ChartObject.cpp	/^ChartObject::ExtractCurveInfo(std::string & cmd_line)$/;"	f	class:ChartObject
F77	Makefile	/^F77 = $/;"	m
F77COMPILE	Makefile	/^F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)$/;"	m
F77LD	Makefile	/^F77LD = $(F77)$/;"	m
F77LINK	Makefile	/^F77LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
FAIL_BAD_J	phreeqcpp/cvode.h	/^#define FAIL_BAD_J /;"	d
FAIL_OTHER	phreeqcpp/cvode.h	/^#define FAIL_OTHER /;"	d
FALSE	phreeqcpp/global_structures.h	/^#define FALSE /;"	d
FALSE	phreeqcpp/sundialstypes.h	/^#define FALSE /;"	d
FC	Makefile	/^FC = $/;"	m
FCFLAGS	Makefile	/^FCFLAGS = $/;"	m
FCLIBS	Makefile	/^FCLIBS = $/;"	m
FC_MODEXT	Makefile	/^FC_MODEXT = $/;"	m
FFLAGS	Makefile	/^FFLAGS = $/;"	m
FGREP	Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FIND	phreeqcpp/global_structures.h	/^{ FIND, ENTER } ACTION;$/;"	e	enum:__anon17
FIND_TYPE	phreeqcpp/common/Parser.h	/^	enum FIND_TYPE$/;"	g	class:CParser
FIRSTANION	phreeqcpp/Phreeqc.h	/^	int MAXCATIONS, FIRSTANION, MAXNEUTRAL;$/;"	m	class:Phreeqc
FIRST_CALL	phreeqcpp/cvode.cpp	/^#define FIRST_CALL /;"	d	file:
FOUR	phreeqcpp/cvode.cpp	/^#define FOUR /;"	d	file:
FOURTH	phreeqcpp/cvode.cpp	/^#define FOURTH /;"	d	file:
FT_ERROR	phreeqcpp/common/Parser.h	/^		FT_ERROR = 1$/;"	e	enum:CParser::FIND_TYPE
FT_OK	phreeqcpp/common/Parser.h	/^		FT_OK = 0,$/;"	e	enum:CParser::FIND_TYPE
FUNCTIONAL	phreeqcpp/cvode.h	/^	{ FUNCTIONAL, NEWTON };		\/* iter *\/$/;"	e	enum:__anon5
FUNC_MAXCOR	phreeqcpp/cvode.cpp	/^#define FUNC_MAXCOR /;"	d	file:
FUZZ_FACTOR	phreeqcpp/cvode.cpp	/^#define FUZZ_FACTOR /;"	d	file:
F_C_MOL	phreeqcpp/global_structures.h	/^#define F_C_MOL /;"	d
F_KCAL_V_EQ	phreeqcpp/global_structures.h	/^#define F_KCAL_V_EQ /;"	d
F_KJ_V_EQ	phreeqcpp/global_structures.h	/^#define F_KJ_V_EQ /;"	d
FileNotFound	phreeqcpp/PBasic.h	/^#define FileNotFound /;"	d
FileNotOpen	phreeqcpp/PBasic.h	/^#define FileNotOpen /;"	d
FileWriteError	phreeqcpp/PBasic.h	/^#define FileWriteError /;"	d
Finalize_graph_pts	phreeqcpp/ChartObject.cpp	/^ChartObject::Finalize_graph_pts(void)$/;"	f	class:ChartObject
Find	phreeqcpp/Dictionary.cpp	/^Dictionary::Find(std::string str)$/;"	f	class:Dictionary
Find	phreeqcpp/PPassemblage.cxx	/^Find(const std::string name_in)$/;"	f	class:cxxPPassemblage
Find	phreeqcpp/SS.cxx	/^cxxSS::Find(const char * comp_name)$/;"	f	class:cxxSS
Find	phreeqcpp/SSassemblage.cxx	/^Find(const std::string &s)$/;"	f	class:cxxSSassemblage
Find	phreeqcpp/cxxKinetics.cxx	/^Find(const std::string &s)$/;"	f	class:cxxKinetics
Find_charge	phreeqcpp/Surface.cxx	/^Find_charge(std::string str)$/;"	f	class:cxxSurface
Find_charge	phreeqcpp/Surface.cxx	/^Find_charge(std::string str)const$/;"	f	class:cxxSurface
Find_comp	phreeqcpp/Exchange.cxx	/^cxxExchComp *cxxExchange::Find_comp(std::string s)$/;"	f	class:cxxExchange
Find_comp	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::Find_comp(const char * comp_name)$/;"	f	class:cxxGasPhase
Find_comp	phreeqcpp/Surface.cxx	/^Find_comp(std::string str)$/;"	f	class:cxxSurface
FirstCallToUSER_GRAPH	phreeqcpp/ChartObject.h	/^	bool FirstCallToUSER_GRAPH;$/;"	m	class:ChartObject
FirstCallToUSER_GRAPH	phreeqcpp/Phreeqc.h	/^	int FirstCallToUSER_GRAPH;$/;"	m	class:Phreeqc
Form1	phreeqcpp/Form1.h	/^	public ref class Form1  : public System::Windows::Forms::Form$/;"	c	namespace:zdg_ui2
Form1	phreeqcpp/Form1.h	/^	public:	Form1(ChartObject *ptr)$/;"	f	class:zdg_ui2::Form1
G	phreeqcpp/pitzer.cpp	/^G(LDBLE L_Y)$/;"	f	class:Phreeqc
G1	phreeqcpp/Phreeqc.h	/^	LDBLE G1, G2, GF;$/;"	m	class:Phreeqc
G2	phreeqcpp/Phreeqc.h	/^	LDBLE G1, G2, GF;$/;"	m	class:Phreeqc
GASCOMP_H_INCLUDED	phreeqcpp/GasComp.h	/^#define GASCOMP_H_INCLUDED$/;"	d
GASCON	phreeqcpp/Phreeqc.h	/^	LDBLE GASCON, TZ, AA;$/;"	m	class:Phreeqc
GASPHASE_H_INCLUDED	phreeqcpp/GasPhase.h	/^#define GASPHASE_H_INCLUDED$/;"	d
GAS_MOLES	phreeqcpp/global_structures.h	/^#define GAS_MOLES /;"	d
GF	phreeqcpp/Phreeqc.h	/^	LDBLE G1, G2, GF;$/;"	m	class:Phreeqc
GOL_hints	phreeqcpp/Form1.h	/^			 ZedGraph::GraphObjList ^GOL_hints;$/;"	m	class:zdg_ui2::Form1
GOL_no_hints	phreeqcpp/Form1.h	/^			 ZedGraph::GraphObjList ^GOL_no_hints;$/;"	m	class:zdg_ui2::Form1
GP	phreeqcpp/pitzer.cpp	/^GP(LDBLE L_Y)$/;"	f	class:Phreeqc
GP_PRESSURE	phreeqcpp/GasPhase.h	/^		GP_PRESSURE = 0,$/;"	e	enum:cxxGasPhase::GP_TYPE
GP_TYPE	phreeqcpp/GasPhase.h	/^	enum GP_TYPE$/;"	g	class:cxxGasPhase
GP_VOLUME	phreeqcpp/GasPhase.h	/^		GP_VOLUME = 1$/;"	e	enum:cxxGasPhase::GP_TYPE
GREP	Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
G_TOL	phreeqcpp/Phreeqc.h	/^	LDBLE G_TOL;$/;"	m	class:Phreeqc
GasPhases	phreeqcpp/StorageBin.h	/^	std::map < int, cxxGasPhase > GasPhases;$/;"	m	class:cxxStorageBin
Gas_phase	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
Get	CSelectedOutput.cpp	/^CVar CSelectedOutput::Get(int nRow, int nCol)const$/;"	f	class:CSelectedOutput
Get	CSelectedOutput.cpp	/^VRESULT CSelectedOutput::Get(int nRow, int nCol, VAR* pVAR)const$/;"	f	class:CSelectedOutput
GetAccumulatedLines	IPhreeqc.cpp	/^const std::string& IPhreeqc::GetAccumulatedLines(void)$/;"	f	class:IPhreeqc
GetAllItems	phreeqcpp/StorageBinList.cpp	/^std::set<StorageBinListItem *> StorageBinList::GetAllItems(void)$/;"	f	class:StorageBinList
GetColCount	CSelectedOutput.cpp	/^size_t CSelectedOutput::GetColCount(void)const$/;"	f	class:CSelectedOutput
GetComponent	IPhreeqc.cpp	/^const char* IPhreeqc::GetComponent(int n)$/;"	f	class:IPhreeqc
GetComponent	IPhreeqcF.f	/^      FUNCTION GetComponent(/;"	f
GetComponent	IPhreeqcLib.cpp	/^GetComponent(int id, int n)$/;"	f
GetComponent	IPhreeqc_interface.F90	/^SUBROUTINE GetComponent(/;"	s	module:IPhreeqc
GetComponentCount	IPhreeqc.cpp	/^size_t IPhreeqc::GetComponentCount(void)$/;"	f	class:IPhreeqc
GetComponentCount	IPhreeqcF.f	/^      FUNCTION GetComponentCount(/;"	f
GetComponentCount	IPhreeqcLib.cpp	/^GetComponentCount(int id)$/;"	f
GetComponentCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetComponentCount(/;"	f	module:IPhreeqc
GetComponentCountF	IPhreeqc_interface_F.cpp	/^GetComponentCountF(int *id)$/;"	f
GetComponentCountF	IPhreeqc_interface_F.h	/^#define GetComponentCountF /;"	d
GetComponentCountF	fwrap.cpp	/^GetComponentCountF(int *id)$/;"	f
GetComponentCountF	fwrap.h	/^#define GetComponentCountF /;"	d
GetComponentF	IPhreeqc_interface_F.cpp	/^GetComponentF(int *id, int *n, char* comp, int* line_length)$/;"	f
GetComponentF	IPhreeqc_interface_F.h	/^#define GetComponentF /;"	d
GetComponentF	fwrap.cpp	/^GetComponentF(int *id, int *n, char* comp, size_t line_length)$/;"	f
GetComponentF	fwrap.h	/^#define GetComponentF /;"	d
GetCurrentSelectedOutputUserNumber	IPhreeqc.cpp	/^int IPhreeqc::GetCurrentSelectedOutputUserNumber(void)const$/;"	f	class:IPhreeqc
GetCurrentSelectedOutputUserNumber	IPhreeqcF.f	/^      FUNCTION GetCurrentSelectedOutputUserNumber(/;"	f
GetCurrentSelectedOutputUserNumber	IPhreeqcLib.cpp	/^GetCurrentSelectedOutputUserNumber(int id)$/;"	f
GetCurrentSelectedOutputUserNumber	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetCurrentSelectedOutputUserNumber(/;"	f	module:IPhreeqc
GetCurrentSelectedOutputUserNumberF	IPhreeqc_interface_F.cpp	/^GetCurrentSelectedOutputUserNumberF(int *id)$/;"	f
GetCurrentSelectedOutputUserNumberF	IPhreeqc_interface_F.h	/^#define GetCurrentSelectedOutputUserNumberF /;"	d
GetCurrentSelectedOutputUserNumberF	fwrap.cpp	/^GetCurrentSelectedOutputUserNumberF(int *id)$/;"	f
GetCurrentSelectedOutputUserNumberF	fwrap.h	/^#define GetCurrentSelectedOutputUserNumberF /;"	d
GetDictionary	phreeqcpp/Serializer.h	/^	Dictionary &GetDictionary(void) {return this->dictionary;}$/;"	f	class:Serializer
GetDictionaryOss	phreeqcpp/Dictionary.h	/^	std::ostringstream &GetDictionaryOss() {return this->dictionary_oss;}$/;"	f	class:Dictionary
GetDoubles	phreeqcpp/Serializer.h	/^	std::vector<double> &GetDoubles(void) {return this->doubles;}$/;"	f	class:Serializer
GetDumpFileName	IPhreeqc.cpp	/^const char* IPhreeqc::GetDumpFileName(void)const$/;"	f	class:IPhreeqc
GetDumpFileName	IPhreeqcF.f	/^      SUBROUTINE GetDumpFileName(/;"	s
GetDumpFileName	IPhreeqcLib.cpp	/^GetDumpFileName(int id)$/;"	f
GetDumpFileName	IPhreeqc_interface.F90	/^SUBROUTINE GetDumpFileName(/;"	s	module:IPhreeqc
GetDumpFileNameF	IPhreeqc_interface_F.cpp	/^GetDumpFileNameF(int *id, char* fname, int* fname_length)$/;"	f
GetDumpFileNameF	IPhreeqc_interface_F.h	/^#define GetDumpFileNameF /;"	d
GetDumpFileNameF	fwrap.cpp	/^GetDumpFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
GetDumpFileNameF	fwrap.h	/^#define GetDumpFileNameF /;"	d
GetDumpFileOn	IPhreeqc.cpp	/^bool IPhreeqc::GetDumpFileOn(void)const$/;"	f	class:IPhreeqc
GetDumpFileOn	IPhreeqcF.f	/^      FUNCTION GetDumpFileOn(/;"	f
GetDumpFileOn	IPhreeqcLib.cpp	/^GetDumpFileOn(int id)$/;"	f
GetDumpFileOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetDumpFileOn(/;"	f	module:IPhreeqc
GetDumpFileOnF	IPhreeqc_interface_F.cpp	/^GetDumpFileOnF(int *id)$/;"	f
GetDumpFileOnF	IPhreeqc_interface_F.h	/^#define GetDumpFileOnF /;"	d
GetDumpFileOnF	fwrap.cpp	/^GetDumpFileOnF(int *id)$/;"	f
GetDumpFileOnF	fwrap.h	/^#define GetDumpFileOnF /;"	d
GetDumpString	IPhreeqc.cpp	/^const char* IPhreeqc::GetDumpString(void)const$/;"	f	class:IPhreeqc
GetDumpString	IPhreeqcLib.cpp	/^GetDumpString(int id)$/;"	f
GetDumpStringLine	IPhreeqc.cpp	/^const char* IPhreeqc::GetDumpStringLine(int n)$/;"	f	class:IPhreeqc
GetDumpStringLine	IPhreeqcF.f	/^      FUNCTION GetDumpStringLine(/;"	f
GetDumpStringLine	IPhreeqcLib.cpp	/^GetDumpStringLine(int id, int n)$/;"	f
GetDumpStringLine	IPhreeqc_interface.F90	/^SUBROUTINE GetDumpStringLine(/;"	s	module:IPhreeqc
GetDumpStringLineCount	IPhreeqc.cpp	/^int IPhreeqc::GetDumpStringLineCount(void)const$/;"	f	class:IPhreeqc
GetDumpStringLineCount	IPhreeqcF.f	/^      FUNCTION GetDumpStringLineCount(/;"	f
GetDumpStringLineCount	IPhreeqcLib.cpp	/^GetDumpStringLineCount(int id)$/;"	f
GetDumpStringLineCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetDumpStringLineCount(/;"	f	module:IPhreeqc
GetDumpStringLineCountF	IPhreeqc_interface_F.cpp	/^GetDumpStringLineCountF(int *id)$/;"	f
GetDumpStringLineCountF	IPhreeqc_interface_F.h	/^#define GetDumpStringLineCountF /;"	d
GetDumpStringLineCountF	fwrap.cpp	/^GetDumpStringLineCountF(int *id)$/;"	f
GetDumpStringLineCountF	fwrap.h	/^#define GetDumpStringLineCountF /;"	d
GetDumpStringLineF	IPhreeqc_interface_F.cpp	/^GetDumpStringLineF(int *id, int* n, char* line, int* line_length)$/;"	f
GetDumpStringLineF	IPhreeqc_interface_F.h	/^#define GetDumpStringLineF /;"	d
GetDumpStringLineF	fwrap.cpp	/^GetDumpStringLineF(int *id, int* n, char* line, size_t line_length)$/;"	f
GetDumpStringLineF	fwrap.h	/^#define GetDumpStringLineF /;"	d
GetDumpStringOn	IPhreeqc.cpp	/^bool IPhreeqc::GetDumpStringOn(void)const$/;"	f	class:IPhreeqc
GetDumpStringOn	IPhreeqcF.f	/^      FUNCTION GetDumpStringOn(/;"	f
GetDumpStringOn	IPhreeqcLib.cpp	/^GetDumpStringOn(int id)$/;"	f
GetDumpStringOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetDumpStringOn(/;"	f	module:IPhreeqc
GetDumpStringOnF	IPhreeqc_interface_F.cpp	/^GetDumpStringOnF(int *id)$/;"	f
GetDumpStringOnF	IPhreeqc_interface_F.h	/^#define GetDumpStringOnF /;"	d
GetDumpStringOnF	fwrap.cpp	/^GetDumpStringOnF(int *id)$/;"	f
GetDumpStringOnF	fwrap.h	/^#define GetDumpStringOnF /;"	d
GetErrorFileName	IPhreeqc.cpp	/^const char* IPhreeqc::GetErrorFileName(void)const$/;"	f	class:IPhreeqc
GetErrorFileName	IPhreeqcF.f	/^      SUBROUTINE GetErrorFileName(/;"	s
GetErrorFileName	IPhreeqcLib.cpp	/^GetErrorFileName(int id)$/;"	f
GetErrorFileName	IPhreeqc_interface.F90	/^SUBROUTINE GetErrorFileName(/;"	s	module:IPhreeqc
GetErrorFileNameF	IPhreeqc_interface_F.cpp	/^GetErrorFileNameF(int *id, char* fname, int* fname_length)$/;"	f
GetErrorFileNameF	IPhreeqc_interface_F.h	/^#define GetErrorFileNameF /;"	d
GetErrorFileNameF	fwrap.cpp	/^GetErrorFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
GetErrorFileNameF	fwrap.h	/^#define GetErrorFileNameF /;"	d
GetErrorFileOn	IPhreeqc.cpp	/^bool IPhreeqc::GetErrorFileOn(void)const$/;"	f	class:IPhreeqc
GetErrorFileOn	IPhreeqcF.f	/^      FUNCTION GetErrorFileOn(/;"	f
GetErrorFileOn	IPhreeqcLib.cpp	/^GetErrorFileOn(int id)$/;"	f
GetErrorFileOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetErrorFileOn(/;"	f	module:IPhreeqc
GetErrorFileOnF	IPhreeqc_interface_F.cpp	/^GetErrorFileOnF(int *id)$/;"	f
GetErrorFileOnF	IPhreeqc_interface_F.h	/^#define GetErrorFileOnF /;"	d
GetErrorFileOnF	fwrap.cpp	/^GetErrorFileOnF(int *id)$/;"	f
GetErrorFileOnF	fwrap.h	/^#define GetErrorFileOnF /;"	d
GetErrorString	IPhreeqc.cpp	/^const char* IPhreeqc::GetErrorString(void)$/;"	f	class:IPhreeqc
GetErrorString	IPhreeqcLib.cpp	/^GetErrorString(int id)$/;"	f
GetErrorStringLine	IPhreeqc.cpp	/^const char* IPhreeqc::GetErrorStringLine(int n)$/;"	f	class:IPhreeqc
GetErrorStringLine	IPhreeqcF.f	/^      FUNCTION GetErrorStringLine(/;"	f
GetErrorStringLine	IPhreeqcLib.cpp	/^GetErrorStringLine(int id, int n)$/;"	f
GetErrorStringLine	IPhreeqc_interface.F90	/^SUBROUTINE GetErrorStringLine(/;"	s	module:IPhreeqc
GetErrorStringLineCount	IPhreeqc.cpp	/^int IPhreeqc::GetErrorStringLineCount(void)const$/;"	f	class:IPhreeqc
GetErrorStringLineCount	IPhreeqcF.f	/^      FUNCTION GetErrorStringLineCount(/;"	f
GetErrorStringLineCount	IPhreeqcLib.cpp	/^GetErrorStringLineCount(int id)$/;"	f
GetErrorStringLineCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetErrorStringLineCount(/;"	f	module:IPhreeqc
GetErrorStringLineCountF	IPhreeqc_interface_F.cpp	/^GetErrorStringLineCountF(int *id)$/;"	f
GetErrorStringLineCountF	IPhreeqc_interface_F.h	/^#define GetErrorStringLineCountF /;"	d
GetErrorStringLineCountF	fwrap.cpp	/^GetErrorStringLineCountF(int *id)$/;"	f
GetErrorStringLineCountF	fwrap.h	/^#define GetErrorStringLineCountF /;"	d
GetErrorStringLineF	IPhreeqc_interface_F.cpp	/^GetErrorStringLineF(int *id, int* n, char* line, int* line_length)$/;"	f
GetErrorStringLineF	IPhreeqc_interface_F.h	/^#define GetErrorStringLineF /;"	d
GetErrorStringLineF	fwrap.cpp	/^GetErrorStringLineF(int *id, int* n, char* line, size_t line_length)$/;"	f
GetErrorStringLineF	fwrap.h	/^#define GetErrorStringLineF /;"	d
GetErrorStringOn	IPhreeqc.cpp	/^bool IPhreeqc::GetErrorStringOn(void)const$/;"	f	class:IPhreeqc
GetErrorStringOn	IPhreeqcF.f	/^      FUNCTION GetErrorStringOn(/;"	f
GetErrorStringOn	IPhreeqcLib.cpp	/^GetErrorStringOn(int id)$/;"	f
GetErrorStringOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetErrorStringOn(/;"	f	module:IPhreeqc
GetErrorStringOnF	IPhreeqc_interface_F.cpp	/^GetErrorStringOnF(int *id)$/;"	f
GetErrorStringOnF	IPhreeqc_interface_F.h	/^#define GetErrorStringOnF /;"	d
GetErrorStringOnF	fwrap.cpp	/^GetErrorStringOnF(int *id)$/;"	f
GetErrorStringOnF	fwrap.h	/^#define GetErrorStringOnF /;"	d
GetId	IPhreeqc.cpp	/^int IPhreeqc::GetId(void)const$/;"	f	class:IPhreeqc
GetInstance	IPhreeqcLib.cpp	/^IPhreeqcLib::GetInstance(int id)$/;"	f	class:IPhreeqcLib
GetInts	phreeqcpp/Serializer.h	/^	std::vector<int> &GetInts(void) {return this->ints;}$/;"	f	class:Serializer
GetLogFileName	IPhreeqc.cpp	/^const char* IPhreeqc::GetLogFileName(void)const$/;"	f	class:IPhreeqc
GetLogFileName	IPhreeqcF.f	/^      SUBROUTINE GetLogFileName(/;"	s
GetLogFileName	IPhreeqcLib.cpp	/^GetLogFileName(int id)$/;"	f
GetLogFileName	IPhreeqc_interface.F90	/^SUBROUTINE GetLogFileName(/;"	s	module:IPhreeqc
GetLogFileNameF	IPhreeqc_interface_F.cpp	/^GetLogFileNameF(int *id, char* fname, int* fname_length)$/;"	f
GetLogFileNameF	IPhreeqc_interface_F.h	/^#define GetLogFileNameF /;"	d
GetLogFileNameF	fwrap.cpp	/^GetLogFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
GetLogFileNameF	fwrap.h	/^#define GetLogFileNameF /;"	d
GetLogFileOn	IPhreeqc.cpp	/^bool IPhreeqc::GetLogFileOn(void)const$/;"	f	class:IPhreeqc
GetLogFileOn	IPhreeqcF.f	/^      FUNCTION GetLogFileOn(/;"	f
GetLogFileOn	IPhreeqcLib.cpp	/^GetLogFileOn(int id)$/;"	f
GetLogFileOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetLogFileOn(/;"	f	module:IPhreeqc
GetLogFileOnF	IPhreeqc_interface_F.cpp	/^GetLogFileOnF(int *id)$/;"	f
GetLogFileOnF	IPhreeqc_interface_F.h	/^#define GetLogFileOnF /;"	d
GetLogFileOnF	fwrap.cpp	/^GetLogFileOnF(int *id)$/;"	f
GetLogFileOnF	fwrap.h	/^#define GetLogFileOnF /;"	d
GetLogString	IPhreeqc.cpp	/^const char* IPhreeqc::GetLogString(void)const$/;"	f	class:IPhreeqc
GetLogString	IPhreeqcLib.cpp	/^GetLogString(int id)$/;"	f
GetLogStringLine	IPhreeqc.cpp	/^const char* IPhreeqc::GetLogStringLine(int n)const$/;"	f	class:IPhreeqc
GetLogStringLine	IPhreeqcF.f	/^      FUNCTION GetLogStringLine(/;"	f
GetLogStringLine	IPhreeqcLib.cpp	/^GetLogStringLine(int id, int n)$/;"	f
GetLogStringLine	IPhreeqc_interface.F90	/^SUBROUTINE GetLogStringLine(/;"	s	module:IPhreeqc
GetLogStringLineCount	IPhreeqc.cpp	/^int IPhreeqc::GetLogStringLineCount(void)const$/;"	f	class:IPhreeqc
GetLogStringLineCount	IPhreeqcF.f	/^      FUNCTION GetLogStringLineCount(/;"	f
GetLogStringLineCount	IPhreeqcLib.cpp	/^GetLogStringLineCount(int id)$/;"	f
GetLogStringLineCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetLogStringLineCount(/;"	f	module:IPhreeqc
GetLogStringLineCountF	IPhreeqc_interface_F.cpp	/^GetLogStringLineCountF(int *id)$/;"	f
GetLogStringLineCountF	IPhreeqc_interface_F.h	/^#define GetLogStringLineCountF /;"	d
GetLogStringLineCountF	fwrap.cpp	/^GetLogStringLineCountF(int *id)$/;"	f
GetLogStringLineCountF	fwrap.h	/^#define GetLogStringLineCountF /;"	d
GetLogStringLineF	IPhreeqc_interface_F.cpp	/^GetLogStringLineF(int *id, int* n, char* line, int* line_length)$/;"	f
GetLogStringLineF	IPhreeqc_interface_F.h	/^#define GetLogStringLineF /;"	d
GetLogStringLineF	fwrap.cpp	/^GetLogStringLineF(int *id, int* n, char* line, size_t line_length)$/;"	f
GetLogStringLineF	fwrap.h	/^#define GetLogStringLineF /;"	d
GetLogStringOn	IPhreeqc.cpp	/^bool IPhreeqc::GetLogStringOn(void)const$/;"	f	class:IPhreeqc
GetLogStringOn	IPhreeqcF.f	/^      FUNCTION GetLogStringOn(/;"	f
GetLogStringOn	IPhreeqcLib.cpp	/^GetLogStringOn(int id)$/;"	f
GetLogStringOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetLogStringOn(/;"	f	module:IPhreeqc
GetLogStringOnF	IPhreeqc_interface_F.cpp	/^GetLogStringOnF(int *id)$/;"	f
GetLogStringOnF	IPhreeqc_interface_F.h	/^#define GetLogStringOnF /;"	d
GetLogStringOnF	fwrap.cpp	/^GetLogStringOnF(int *id)$/;"	f
GetLogStringOnF	fwrap.h	/^#define GetLogStringOnF /;"	d
GetNthSelectedOutputUserNumber	IPhreeqc.cpp	/^int IPhreeqc::GetNthSelectedOutputUserNumber(int n)const$/;"	f	class:IPhreeqc
GetNthSelectedOutputUserNumber	IPhreeqcF.f	/^      FUNCTION GetNthSelectedOutputUserNumber(/;"	f
GetNthSelectedOutputUserNumber	IPhreeqcLib.cpp	/^GetNthSelectedOutputUserNumber(int id, int n)$/;"	f
GetNthSelectedOutputUserNumber	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetNthSelectedOutputUserNumber(/;"	f	module:IPhreeqc
GetNthSelectedOutputUserNumberF	IPhreeqc_interface_F.cpp	/^GetNthSelectedOutputUserNumberF(int *id, int* n)$/;"	f
GetNthSelectedOutputUserNumberF	IPhreeqc_interface_F.h	/^#define GetNthSelectedOutputUserNumberF /;"	d
GetNthSelectedOutputUserNumberF	fwrap.cpp	/^GetNthSelectedOutputUserNumberF(int *id, int* n)$/;"	f
GetNthSelectedOutputUserNumberF	fwrap.h	/^#define GetNthSelectedOutputUserNumberF /;"	d
GetOS	ErrorReporter.hxx	/^	OS* GetOS(void) { return m_pOS; }$/;"	f	class:CErrorReporter
GetOutputFileName	IPhreeqc.cpp	/^const char* IPhreeqc::GetOutputFileName(void)const$/;"	f	class:IPhreeqc
GetOutputFileName	IPhreeqcF.f	/^      SUBROUTINE GetOutputFileName(/;"	s
GetOutputFileName	IPhreeqcLib.cpp	/^GetOutputFileName(int id)$/;"	f
GetOutputFileName	IPhreeqc_interface.F90	/^SUBROUTINE GetOutputFileName(/;"	s	module:IPhreeqc
GetOutputFileNameF	IPhreeqc_interface_F.cpp	/^GetOutputFileNameF(int *id, char* fname, int* fname_length)$/;"	f
GetOutputFileNameF	IPhreeqc_interface_F.h	/^#define GetOutputFileNameF /;"	d
GetOutputFileNameF	fwrap.cpp	/^GetOutputFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
GetOutputFileNameF	fwrap.h	/^#define GetOutputFileNameF /;"	d
GetOutputFileOn	IPhreeqc.cpp	/^bool IPhreeqc::GetOutputFileOn(void)const$/;"	f	class:IPhreeqc
GetOutputFileOn	IPhreeqcF.f	/^      FUNCTION GetOutputFileOn(/;"	f
GetOutputFileOn	IPhreeqcLib.cpp	/^GetOutputFileOn(int id)$/;"	f
GetOutputFileOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetOutputFileOn(/;"	f	module:IPhreeqc
GetOutputFileOnF	IPhreeqc_interface_F.cpp	/^GetOutputFileOnF(int *id)$/;"	f
GetOutputFileOnF	IPhreeqc_interface_F.h	/^#define GetOutputFileOnF /;"	d
GetOutputFileOnF	fwrap.cpp	/^GetOutputFileOnF(int *id)$/;"	f
GetOutputFileOnF	fwrap.h	/^#define GetOutputFileOnF /;"	d
GetOutputString	IPhreeqc.cpp	/^const char* IPhreeqc::GetOutputString(void)const$/;"	f	class:IPhreeqc
GetOutputString	IPhreeqcLib.cpp	/^GetOutputString(int id)$/;"	f
GetOutputStringLine	IPhreeqc.cpp	/^const char* IPhreeqc::GetOutputStringLine(int n)const$/;"	f	class:IPhreeqc
GetOutputStringLine	IPhreeqcF.f	/^      FUNCTION GetOutputStringLine(/;"	f
GetOutputStringLine	IPhreeqcLib.cpp	/^GetOutputStringLine(int id, int n)$/;"	f
GetOutputStringLine	IPhreeqc_interface.F90	/^SUBROUTINE GetOutputStringLine(/;"	s	module:IPhreeqc
GetOutputStringLineCount	IPhreeqc.cpp	/^int IPhreeqc::GetOutputStringLineCount(void)const$/;"	f	class:IPhreeqc
GetOutputStringLineCount	IPhreeqcF.f	/^      FUNCTION GetOutputStringLineCount(/;"	f
GetOutputStringLineCount	IPhreeqcLib.cpp	/^GetOutputStringLineCount(int id)$/;"	f
GetOutputStringLineCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetOutputStringLineCount(/;"	f	module:IPhreeqc
GetOutputStringLineCountF	IPhreeqc_interface_F.cpp	/^GetOutputStringLineCountF(int *id)$/;"	f
GetOutputStringLineCountF	IPhreeqc_interface_F.h	/^#define GetOutputStringLineCountF /;"	d
GetOutputStringLineCountF	fwrap.cpp	/^GetOutputStringLineCountF(int *id)$/;"	f
GetOutputStringLineCountF	fwrap.h	/^#define GetOutputStringLineCountF /;"	d
GetOutputStringLineF	IPhreeqc_interface_F.cpp	/^GetOutputStringLineF(int *id, int* n, char* line, int* line_length)$/;"	f
GetOutputStringLineF	IPhreeqc_interface_F.h	/^#define GetOutputStringLineF /;"	d
GetOutputStringLineF	fwrap.cpp	/^GetOutputStringLineF(int *id, int* n, char* line, size_t line_length)$/;"	f
GetOutputStringLineF	fwrap.h	/^#define GetOutputStringLineF /;"	d
GetOutputStringOn	IPhreeqc.cpp	/^bool IPhreeqc::GetOutputStringOn(void)const$/;"	f	class:IPhreeqc
GetOutputStringOn	IPhreeqcF.f	/^      FUNCTION GetOutputStringOn(/;"	f
GetOutputStringOn	IPhreeqcLib.cpp	/^GetOutputStringOn(int id)$/;"	f
GetOutputStringOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetOutputStringOn(/;"	f	module:IPhreeqc
GetOutputStringOnF	IPhreeqc_interface_F.cpp	/^GetOutputStringOnF(int *id)$/;"	f
GetOutputStringOnF	IPhreeqc_interface_F.h	/^#define GetOutputStringOnF /;"	d
GetOutputStringOnF	fwrap.cpp	/^GetOutputStringOnF(int *id)$/;"	f
GetOutputStringOnF	fwrap.h	/^#define GetOutputStringOnF /;"	d
GetPH	IPhreeqc.cpp	/^double IPhreeqc::GetPH(int solution)$/;"	f	class:IPhreeqc
GetPH	IPhreeqcLib.cpp	/^GetPH(int id, int solution)$/;"	f
GetPe	IPhreeqc.cpp	/^double IPhreeqc::GetPe(int solution)$/;"	f	class:IPhreeqc
GetPe	IPhreeqcLib.cpp	/^GetPe(int id, int solution)$/;"	f
GetRowCount	CSelectedOutput.cpp	/^size_t CSelectedOutput::GetRowCount(void)const$/;"	f	class:CSelectedOutput
GetSelectedOutputColumnCount	IPhreeqc.cpp	/^int IPhreeqc::GetSelectedOutputColumnCount(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputColumnCount	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputColumnCount(/;"	f
GetSelectedOutputColumnCount	IPhreeqcLib.cpp	/^GetSelectedOutputColumnCount(int id)$/;"	f
GetSelectedOutputColumnCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetSelectedOutputColumnCount(/;"	f	module:IPhreeqc
GetSelectedOutputColumnCountF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputColumnCountF(int *id)$/;"	f
GetSelectedOutputColumnCountF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputColumnCountF /;"	d
GetSelectedOutputColumnCountF	fwrap.cpp	/^GetSelectedOutputColumnCountF(int *id)$/;"	f
GetSelectedOutputColumnCountF	fwrap.h	/^#define GetSelectedOutputColumnCountF /;"	d
GetSelectedOutputCount	IPhreeqc.cpp	/^int IPhreeqc::GetSelectedOutputCount(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputCount	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputCount(/;"	f
GetSelectedOutputCount	IPhreeqcLib.cpp	/^GetSelectedOutputCount(int id)$/;"	f
GetSelectedOutputCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetSelectedOutputCount(/;"	f	module:IPhreeqc
GetSelectedOutputCountF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputCountF(int *id)$/;"	f
GetSelectedOutputCountF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputCountF /;"	d
GetSelectedOutputCountF	fwrap.cpp	/^GetSelectedOutputCountF(int *id)$/;"	f
GetSelectedOutputCountF	fwrap.h	/^#define GetSelectedOutputCountF /;"	d
GetSelectedOutputFileName	IPhreeqc.cpp	/^const char* IPhreeqc::GetSelectedOutputFileName(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputFileName	IPhreeqcF.f	/^      SUBROUTINE GetSelectedOutputFileName(/;"	s
GetSelectedOutputFileName	IPhreeqcLib.cpp	/^GetSelectedOutputFileName(int id)$/;"	f
GetSelectedOutputFileName	IPhreeqc_interface.F90	/^SUBROUTINE GetSelectedOutputFileName(/;"	s	module:IPhreeqc
GetSelectedOutputFileNameF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputFileNameF(int *id, char* fname, int* fname_length)$/;"	f
GetSelectedOutputFileNameF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputFileNameF /;"	d
GetSelectedOutputFileNameF	fwrap.cpp	/^GetSelectedOutputFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
GetSelectedOutputFileNameF	fwrap.h	/^#define GetSelectedOutputFileNameF /;"	d
GetSelectedOutputFileOn	IPhreeqc.cpp	/^bool IPhreeqc::GetSelectedOutputFileOn(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputFileOn	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputFileOn(/;"	f
GetSelectedOutputFileOn	IPhreeqcLib.cpp	/^GetSelectedOutputFileOn(int id)$/;"	f
GetSelectedOutputFileOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetSelectedOutputFileOn(/;"	f	module:IPhreeqc
GetSelectedOutputFileOnF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputFileOnF(int *id)$/;"	f
GetSelectedOutputFileOnF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputFileOnF /;"	d
GetSelectedOutputFileOnF	fwrap.cpp	/^GetSelectedOutputFileOnF(int *id)$/;"	f
GetSelectedOutputFileOnF	fwrap.h	/^#define GetSelectedOutputFileOnF /;"	d
GetSelectedOutputRowCount	IPhreeqc.cpp	/^int IPhreeqc::GetSelectedOutputRowCount(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputRowCount	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputRowCount(/;"	f
GetSelectedOutputRowCount	IPhreeqcLib.cpp	/^GetSelectedOutputRowCount(int id)$/;"	f
GetSelectedOutputRowCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetSelectedOutputRowCount(/;"	f	module:IPhreeqc
GetSelectedOutputRowCountF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputRowCountF(int *id)$/;"	f
GetSelectedOutputRowCountF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputRowCountF /;"	d
GetSelectedOutputRowCountF	fwrap.cpp	/^GetSelectedOutputRowCountF(int *id)$/;"	f
GetSelectedOutputRowCountF	fwrap.h	/^#define GetSelectedOutputRowCountF /;"	d
GetSelectedOutputString	IPhreeqc.cpp	/^const char* IPhreeqc::GetSelectedOutputString(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputString	IPhreeqcLib.cpp	/^GetSelectedOutputString(int id)$/;"	f
GetSelectedOutputStringLine	IPhreeqc.cpp	/^const char* IPhreeqc::GetSelectedOutputStringLine(int n)$/;"	f	class:IPhreeqc
GetSelectedOutputStringLine	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputStringLine(/;"	f
GetSelectedOutputStringLine	IPhreeqcLib.cpp	/^GetSelectedOutputStringLine(int id, int n)$/;"	f
GetSelectedOutputStringLine	IPhreeqc_interface.F90	/^SUBROUTINE GetSelectedOutputStringLine(/;"	s	module:IPhreeqc
GetSelectedOutputStringLineCount	IPhreeqc.cpp	/^int IPhreeqc::GetSelectedOutputStringLineCount(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputStringLineCount	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputStringLineCount(/;"	f
GetSelectedOutputStringLineCount	IPhreeqcLib.cpp	/^GetSelectedOutputStringLineCount(int id)$/;"	f
GetSelectedOutputStringLineCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetSelectedOutputStringLineCount(/;"	f	module:IPhreeqc
GetSelectedOutputStringLineCountF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputStringLineCountF(int *id)$/;"	f
GetSelectedOutputStringLineCountF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputStringLineCountF /;"	d
GetSelectedOutputStringLineCountF	fwrap.cpp	/^GetSelectedOutputStringLineCountF(int *id)$/;"	f
GetSelectedOutputStringLineCountF	fwrap.h	/^#define GetSelectedOutputStringLineCountF /;"	d
GetSelectedOutputStringLineF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputStringLineF(int *id, int* n, char* line, int* line_length)$/;"	f
GetSelectedOutputStringLineF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputStringLineF /;"	d
GetSelectedOutputStringLineF	fwrap.cpp	/^GetSelectedOutputStringLineF(int *id, int* n, char* line, size_t line_length)$/;"	f
GetSelectedOutputStringLineF	fwrap.h	/^#define GetSelectedOutputStringLineF /;"	d
GetSelectedOutputStringOn	IPhreeqc.cpp	/^bool IPhreeqc::GetSelectedOutputStringOn(void)const$/;"	f	class:IPhreeqc
GetSelectedOutputStringOn	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputStringOn(/;"	f
GetSelectedOutputStringOn	IPhreeqcLib.cpp	/^GetSelectedOutputStringOn(int id)$/;"	f
GetSelectedOutputStringOn	IPhreeqc_interface.F90	/^LOGICAL FUNCTION GetSelectedOutputStringOn(/;"	f	module:IPhreeqc
GetSelectedOutputStringOnF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputStringOnF(int *id)$/;"	f
GetSelectedOutputStringOnF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputStringOnF /;"	d
GetSelectedOutputStringOnF	fwrap.cpp	/^GetSelectedOutputStringOnF(int *id)$/;"	f
GetSelectedOutputStringOnF	fwrap.h	/^#define GetSelectedOutputStringOnF /;"	d
GetSelectedOutputValue	IPhreeqc.cpp	/^VRESULT IPhreeqc::GetSelectedOutputValue(int row, int col, VAR* pVAR)$/;"	f	class:IPhreeqc
GetSelectedOutputValue	IPhreeqcF.f	/^      FUNCTION GetSelectedOutputValue(/;"	f
GetSelectedOutputValue	IPhreeqcLib.cpp	/^GetSelectedOutputValue(int id, int row, int col, VAR* pVAR)$/;"	f
GetSelectedOutputValue	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetSelectedOutputValue(/;"	f	module:IPhreeqc
GetSelectedOutputValue2	IPhreeqc.cpp	/^VRESULT IPhreeqc::GetSelectedOutputValue2(int row, int col, int *vtype, double* dvalue, char* svalue, unsigned int svalue_length)$/;"	f	class:IPhreeqc
GetSelectedOutputValue2	IPhreeqcLib.cpp	/^GetSelectedOutputValue2(int id, int row, int col, int *vtype, double* dvalue, char* svalue, unsigned int svalue_length)$/;"	f
GetSelectedOutputValueF	IPhreeqc_interface_F.cpp	/^GetSelectedOutputValueF(int *id, int *row, int *col, int *vtype, double* dvalue, char* svalue, int* svalue_length)$/;"	f
GetSelectedOutputValueF	IPhreeqc_interface_F.h	/^#define GetSelectedOutputValueF /;"	d
GetSelectedOutputValueF	fwrap.cpp	/^GetSelectedOutputValueF(int *id, int *row, int *col, int *vtype, double* dvalue, char* svalue, size_t svalue_length)$/;"	f
GetSelectedOutputValueF	fwrap.h	/^#define GetSelectedOutputValueF /;"	d
GetTotal	IPhreeqc.cpp	/^double IPhreeqc::GetTotal(int solution, const char *string)$/;"	f	class:IPhreeqc
GetTotal	IPhreeqcLib.cpp	/^GetTotal(int id, int solution, const char *string)$/;"	f
GetVersionString	IPhreeqc.cpp	/^const char* IPhreeqc::GetVersionString(void)$/;"	f	class:IPhreeqc
GetVersionString	IPhreeqcF.f	/^      SUBROUTINE GetVersionString(/;"	s
GetVersionString	IPhreeqcLib.cpp	/^GetVersionString(void)$/;"	f
GetVersionString	IPhreeqc_interface.F90	/^SUBROUTINE GetVersionString(/;"	s	module:IPhreeqc
GetVersionStringF	IPhreeqc_interface_F.cpp	/^GetVersionStringF(char* version, int* version_length)$/;"	f
GetVersionStringF	IPhreeqc_interface_F.h	/^#define GetVersionStringF /;"	d
GetVersionStringF	fwrap.cpp	/^GetVersionStringF(char* version, size_t version_length)$/;"	f
GetVersionStringF	fwrap.h	/^#define GetVersionStringF /;"	d
GetWarningString	IPhreeqc.cpp	/^const char* IPhreeqc::GetWarningString(void)$/;"	f	class:IPhreeqc
GetWarningString	IPhreeqcLib.cpp	/^GetWarningString(int id)$/;"	f
GetWarningStringLine	IPhreeqc.cpp	/^const char* IPhreeqc::GetWarningStringLine(int n)$/;"	f	class:IPhreeqc
GetWarningStringLine	IPhreeqcF.f	/^      FUNCTION GetWarningStringLine(/;"	f
GetWarningStringLine	IPhreeqcLib.cpp	/^GetWarningStringLine(int id, int n)$/;"	f
GetWarningStringLine	IPhreeqc_interface.F90	/^SUBROUTINE GetWarningStringLine(/;"	s	module:IPhreeqc
GetWarningStringLineCount	IPhreeqc.cpp	/^int IPhreeqc::GetWarningStringLineCount(void)const$/;"	f	class:IPhreeqc
GetWarningStringLineCount	IPhreeqcF.f	/^      FUNCTION GetWarningStringLineCount(/;"	f
GetWarningStringLineCount	IPhreeqcLib.cpp	/^GetWarningStringLineCount(int id)$/;"	f
GetWarningStringLineCount	IPhreeqc_interface.F90	/^INTEGER FUNCTION GetWarningStringLineCount(/;"	f	module:IPhreeqc
GetWarningStringLineCountF	IPhreeqc_interface_F.cpp	/^GetWarningStringLineCountF(int *id)$/;"	f
GetWarningStringLineCountF	IPhreeqc_interface_F.h	/^#define GetWarningStringLineCountF /;"	d
GetWarningStringLineCountF	fwrap.cpp	/^GetWarningStringLineCountF(int *id)$/;"	f
GetWarningStringLineCountF	fwrap.h	/^#define GetWarningStringLineCountF /;"	d
GetWarningStringLineF	IPhreeqc_interface_F.cpp	/^GetWarningStringLineF(int *id, int* n, char* line, int* line_length)$/;"	f
GetWarningStringLineF	IPhreeqc_interface_F.h	/^#define GetWarningStringLineF /;"	d
GetWarningStringLineF	fwrap.cpp	/^GetWarningStringLineF(int *id, int* n, char* line, size_t line_length)$/;"	f
GetWarningStringLineF	fwrap.h	/^#define GetWarningStringLineF /;"	d
GetWords	phreeqcpp/Dictionary.h	/^	std::vector<std::string> &GetWords() {return this->words;}$/;"	f	class:Dictionary
Get_AddSeries	phreeqcpp/ChartObject.h	/^	bool Get_AddSeries()const$/;"	f	class:ChartObject
Get_ColumnOffset	phreeqcpp/ChartObject.h	/^	int Get_ColumnOffset()const$/;"	f	class:ChartObject
Get_Curves	phreeqcpp/ChartObject.h	/^	const std::vector<CurveObject *> &Get_Curves()const$/;"	f	class:ChartObject
Get_Curves	phreeqcpp/ChartObject.h	/^	std::vector<CurveObject *> &Get_Curves()$/;"	f	class:ChartObject
Get_CurvesCSV	phreeqcpp/ChartObject.h	/^	const std::vector<CurveObject *> &Get_CurvesCSV()const$/;"	f	class:ChartObject
Get_CurvesCSV	phreeqcpp/ChartObject.h	/^	std::vector<CurveObject *> &Get_CurvesCSV()$/;"	f	class:ChartObject
Get_DDL_limit	phreeqcpp/Surface.h	/^	LDBLE Get_DDL_limit(void) const {return DDL_limit;}$/;"	f	class:cxxSurface
Get_DDL_viscosity	phreeqcpp/Surface.h	/^	LDBLE Get_DDL_viscosity(void) const {return DDL_viscosity;}$/;"	f	class:cxxSurface
Get_Dw	phreeqcpp/SurfaceComp.h	/^	LDBLE Get_Dw(void) const {return Dw;}$/;"	f	class:cxxSurfaceComp
Get_Exchange	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Exchange(int n_user)$/;"	f	class:cxxStorageBin
Get_Exchangers	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Exchangers()$/;"	f	class:cxxStorageBin
Get_FirstCallToUSER_GRAPH	phreeqcpp/ChartObject.h	/^	bool Get_FirstCallToUSER_GRAPH()const$/;"	f	class:ChartObject
Get_GasPhase	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_GasPhase(int n_user)$/;"	f	class:cxxStorageBin
Get_GasPhases	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_GasPhases() $/;"	f	class:cxxStorageBin
Get_Kinetics	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Kinetics()$/;"	f	class:cxxStorageBin
Get_Kinetics	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Kinetics(int n_user)$/;"	f	class:cxxStorageBin
Get_Mix	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Mix(int n_user)$/;"	f	class:cxxStorageBin
Get_Mixes	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Mixes()$/;"	f	class:cxxStorageBin
Get_PPassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_PPassemblage(int n_user)$/;"	f	class:cxxStorageBin
Get_PPassemblages	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_PPassemblages()$/;"	f	class:cxxStorageBin
Get_P_escapecode	phreeqcpp/PBasic.h	/^	int Get_P_escapecode(void)const {return P_escapecode;};$/;"	f	class:PBasic
Get_PanelHeight	phreeqcpp/ChartObject.h	/^	int Get_PanelHeight()const$/;"	f	class:ChartObject
Get_PanelWidth	phreeqcpp/ChartObject.h	/^	int Get_PanelWidth()const$/;"	f	class:ChartObject
Get_PhreeqcPtr	phreeqcpp/UserPunch.h	/^	Phreeqc * Get_PhreeqcPtr() {return this->PhreeqcPtr;}$/;"	f	class:UserPunch
Get_PhreeqcPtr	phreeqcpp/UserPunch.h	/^	const Phreeqc * Get_PhreeqcPtr()const {return this->PhreeqcPtr;}$/;"	f	class:UserPunch
Get_Pressure	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Pressure(int n_user)$/;"	f	class:cxxStorageBin
Get_Pressures	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Pressures()$/;"	f	class:cxxStorageBin
Get_Reaction	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Reaction(int n_user)$/;"	f	class:cxxStorageBin
Get_Reactions	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Reactions()$/;"	f	class:cxxStorageBin
Get_Rxn_exchange_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxExchange> & Get_Rxn_exchange_map() {return this->Rxn_exchange_map;}$/;"	f	class:Phreeqc
Get_Rxn_gas_phase_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxGasPhase> & Get_Rxn_gas_phase_map() {return this->Rxn_gas_phase_map;}$/;"	f	class:Phreeqc
Get_Rxn_kinetics_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxKinetics> & Get_Rxn_kinetics_map() {return this->Rxn_kinetics_map;}$/;"	f	class:Phreeqc
Get_Rxn_pp_assemblage_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxPPassemblage> & Get_Rxn_pp_assemblage_map() {return this->Rxn_pp_assemblage_map;}$/;"	f	class:Phreeqc
Get_Rxn_pressure_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxPressure> & Get_Rxn_pressure_map() {return this->Rxn_pressure_map;}$/;"	f	class:Phreeqc
Get_Rxn_solution_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxSolution> & Get_Rxn_solution_map() {return this->Rxn_solution_map;}$/;"	f	class:Phreeqc
Get_Rxn_ss_assemblage_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxSSassemblage> & Get_Rxn_ss_assemblage_map() {return this->Rxn_ss_assemblage_map;}$/;"	f	class:Phreeqc
Get_Rxn_surface_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxSurface> & Get_Rxn_surface_map() {return this->Rxn_surface_map;}$/;"	f	class:Phreeqc
Get_Rxn_temperature_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxTemperature> & Get_Rxn_temperature_map() {return this->Rxn_temperature_map;}$/;"	f	class:Phreeqc
Get_SSassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_SSassemblage(int n_user)$/;"	f	class:cxxStorageBin
Get_SSassemblages	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_SSassemblages()$/;"	f	class:cxxStorageBin
Get_SSs	phreeqcpp/SSassemblage.h	/^	const std::map < std::string, cxxSS > & Get_SSs(void)const {return SSs;}$/;"	f	class:cxxSSassemblage
Get_SSs	phreeqcpp/SSassemblage.h	/^	std::map < std::string, cxxSS > & Get_SSs(void) {return SSs;}$/;"	f	class:cxxSSassemblage
Get_Solution	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Solution(int n_user)$/;"	f	class:cxxStorageBin
Get_Solutions	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Solutions()$/;"	f	class:cxxStorageBin
Get_StorageBinList	phreeqcpp/dumper.h	/^	StorageBinList & Get_StorageBinList(void)   { return this->binList; };$/;"	f	class:dumper
Get_StorageBinList	phreeqcpp/dumper.h	/^	const StorageBinList & Get_StorageBinList(void)const   { return this->binList; };$/;"	f	class:dumper
Get_Surface	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Surface(int n_user)$/;"	f	class:cxxStorageBin
Get_Surfaces	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Surfaces()$/;"	f	class:cxxStorageBin
Get_System	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_System(void)$/;"	f	class:cxxStorageBin
Get_Temperature	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Temperature(int n_user)$/;"	f	class:cxxStorageBin
Get_Temperatures	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Get_Temperatures()$/;"	f	class:cxxStorageBin
Get_Totals	phreeqcpp/System.h	/^	cxxNameDouble &Get_Totals(void)$/;"	f	class:cxxSystem
Get_a0	phreeqcpp/SS.h	/^	LDBLE Get_a0() const {return (this->a0);}$/;"	f	class:cxxSS
Get_a1	phreeqcpp/SS.h	/^	LDBLE Get_a1() const {return (this->a1);}$/;"	f	class:cxxSS
Get_accumulated	phreeqcpp/common/PHRQ_io.h	/^	std::string & Get_accumulated()	 {return accumulated;}$/;"	f	class:PHRQ_io
Get_active	phreeqcpp/ChartObject.h	/^	bool Get_active()const$/;"	f	class:ChartObject
Get_active	phreeqcpp/SelectedOutput.h	/^	inline bool Get_active(void)const                                 {return this->active;}$/;"	f	class:SelectedOutput
Get_active_charts	phreeqcpp/ChartHandler.h	/^	int Get_active_charts() {return this->active_charts;}$/;"	f	class:ChartHandler
Get_activities	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_activities(void)const       {return this->activities;}$/;"	f	class:SelectedOutput
Get_activities	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_activities(void)       {return this->activities;}$/;"	f	class:SelectedOutput
Get_add_formula	phreeqcpp/PPassemblageComp.h	/^	const std::string &Get_add_formula() const {return this->add_formula;}$/;"	f	class:cxxPPassemblageComp
Get_advect_in	phreeqcpp/Use.h	/^	bool Get_advect_in(void) const        {return this->advect_in;}$/;"	f	class:cxxUse
Get_ag0	phreeqcpp/SS.h	/^	LDBLE Get_ag0() const {return (this->ag0);}$/;"	f	class:cxxSS
Get_ag1	phreeqcpp/SS.h	/^	LDBLE Get_ag1() const {return (this->ag1);}$/;"	f	class:cxxSS
Get_ah2o	phreeqcpp/Solution.h	/^	LDBLE Get_ah2o() const                              {return this->ah2o;}$/;"	f	class:cxxSolution
Get_alk	phreeqcpp/SelectedOutput.h	/^	inline bool Get_alk(void)const                                    {return this->alk;}$/;"	f	class:SelectedOutput
Get_append	phreeqcpp/dumper.h	/^	bool Get_append(void)const			{ return(this->append); };$/;"	f	class:dumper
Get_as	phreeqcpp/ISolutionComp.h	/^	const std::string &Get_as() const$/;"	f	class:cxxISolutionComp
Get_assemblage_totals	phreeqcpp/PPassemblage.h	/^	const cxxNameDouble & Get_assemblage_totals() const$/;"	f	class:cxxPPassemblage
Get_axis_scale_x	phreeqcpp/ChartObject.h	/^	LDBLE *Get_axis_scale_x()$/;"	f	class:ChartObject
Get_axis_scale_x	phreeqcpp/ChartObject.h	/^	const LDBLE *Get_axis_scale_x()const$/;"	f	class:ChartObject
Get_axis_scale_y	phreeqcpp/ChartObject.h	/^	LDBLE *Get_axis_scale_y()$/;"	f	class:ChartObject
Get_axis_scale_y	phreeqcpp/ChartObject.h	/^	const LDBLE *Get_axis_scale_y()const$/;"	f	class:ChartObject
Get_axis_scale_y2	phreeqcpp/ChartObject.h	/^	LDBLE *Get_axis_scale_y2()$/;"	f	class:ChartObject
Get_axis_scale_y2	phreeqcpp/ChartObject.h	/^	const LDBLE *Get_axis_scale_y2()const$/;"	f	class:ChartObject
Get_axis_titles	phreeqcpp/ChartObject.h	/^	const std::vector<std::string> &Get_axis_titles()const$/;"	f	class:ChartObject
Get_axis_titles	phreeqcpp/ChartObject.h	/^	std::vector<std::string> &Get_axis_titles()$/;"	f	class:ChartObject
Get_bad_step_max	phreeqcpp/cxxKinetics.h	/^	int Get_bad_step_max(void) const {return bad_step_max;}$/;"	f	class:cxxKinetics
Get_base_error_count	phreeqcpp/common/PHRQ_base.h	/^	int Get_base_error_count(void)$/;"	f	class:PHRQ_base
Get_batch	phreeqcpp/ChartObject.h	/^	chart_batch_type Get_batch(void) {return this->batch;}$/;"	f	class:ChartObject
Get_batch_background	phreeqcpp/ChartObject.h	/^	bool Get_batch_background(void) {return this->batch_background;}$/;"	f	class:ChartObject
Get_batch_fn	phreeqcpp/ChartObject.h	/^	std::string Get_batch_fn()$/;"	f	class:ChartObject
Get_batch_grid	phreeqcpp/ChartObject.h	/^	bool Get_batch_grid(void) {return this->batch_grid;}$/;"	f	class:ChartObject
Get_bool_any	phreeqcpp/dumper.cpp	/^bool dumper::Get_bool_any(void)$/;"	f	class:dumper
Get_bool_exchange	phreeqcpp/dumper.h	/^	bool Get_bool_exchange(void)		{ return(this->binList.Get_exchange().Get_defined()); };$/;"	f	class:dumper
Get_bool_gas_phase	phreeqcpp/dumper.h	/^	bool Get_bool_gas_phase(void)		{ return(this->binList.Get_gas_phase().Get_defined()); };$/;"	f	class:dumper
Get_bool_kinetics	phreeqcpp/dumper.h	/^	bool Get_bool_kinetics(void)		{ return(this->binList.Get_kinetics().Get_defined()); };$/;"	f	class:dumper
Get_bool_mix	phreeqcpp/dumper.h	/^	bool Get_bool_mix(void)				{ return(this->binList.Get_mix().Get_defined()); };$/;"	f	class:dumper
Get_bool_pp_assemblage	phreeqcpp/dumper.h	/^	bool Get_bool_pp_assemblage(void)	{ return(this->binList.Get_pp_assemblage().Get_defined()); };$/;"	f	class:dumper
Get_bool_pressure	phreeqcpp/dumper.h	/^	bool Get_bool_pressure(void)		{ return(this->binList.Get_pressure().Get_defined()); };$/;"	f	class:dumper
Get_bool_reaction	phreeqcpp/dumper.h	/^	bool Get_bool_reaction(void)		{ return(this->binList.Get_reaction().Get_defined()); };$/;"	f	class:dumper
Get_bool_solution	phreeqcpp/dumper.h	/^	bool Get_bool_solution(void)		{ return(this->binList.Get_solution().Get_defined()); };$/;"	f	class:dumper
Get_bool_ss_assemblage	phreeqcpp/dumper.h	/^	bool Get_bool_ss_assemblage(void)	{ return(this->binList.Get_ss_assemblage().Get_defined()); };$/;"	f	class:dumper
Get_bool_surface	phreeqcpp/dumper.h	/^	bool Get_bool_surface(void)			{ return(this->binList.Get_surface().Get_defined()); };$/;"	f	class:dumper
Get_bool_temperature	phreeqcpp/dumper.h	/^	bool Get_bool_temperature(void)		{ return(this->binList.Get_temperature().Get_defined()); };$/;"	f	class:dumper
Get_c_params	phreeqcpp/KineticsComp.h	/^	std::vector < std::string > &Get_c_params(void) {return c_params;};$/;"	f	class:cxxKineticsComp
Get_calculate_values	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_calculate_values(void)const {return this->calculate_values;}$/;"	f	class:SelectedOutput
Get_calculate_values	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_calculate_values(void) {return this->calculate_values;}$/;"	f	class:SelectedOutput
Get_capacitance0	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_capacitance0() const {return this->capacitance[0];}$/;"	f	class:cxxSurfaceCharge
Get_capacitance1	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_capacitance1() const {return this->capacitance[1];}$/;"	f	class:cxxSurfaceCharge
Get_cb	phreeqcpp/Solution.h	/^	LDBLE Get_cb() const                                {return this->cb;}$/;"	f	class:cxxSolution
Get_cell	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_cell(void)          { return(this->cell); };$/;"	f	class:StorageBinList
Get_cell	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_cell(void)const          { return(this->cell); };$/;"	f	class:StorageBinList
Get_cells	phreeqcpp/runner.h	/^	StorageBinListItem & Get_cells(void) { return(this->cells); };$/;"	f	class:runner
Get_charge_balance	phreeqcpp/ExchComp.h	/^	LDBLE Get_charge_balance() const$/;"	f	class:cxxExchComp
Get_charge_balance	phreeqcpp/SelectedOutput.h	/^	inline bool Get_charge_balance(void)const                         {return this->charge_balance;}$/;"	f	class:SelectedOutput
Get_charge_balance	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_charge_balance() const {return this->charge_balance;}$/;"	f	class:cxxSurfaceCharge
Get_charge_balance	phreeqcpp/SurfaceComp.h	/^	LDBLE Get_charge_balance() const {return this->charge_balance;}$/;"	f	class:cxxSurfaceComp
Get_charge_name	phreeqcpp/SurfaceComp.h	/^	const std::string &Get_charge_name() const {return this->charge_name;}$/;"	f	class:cxxSurfaceComp
Get_chart_count	phreeqcpp/ChartHandler.h	/^	size_t Get_chart_count()const$/;"	f	class:ChartHandler
Get_chart_handler	phreeqcpp/Phreeqc.h	/^	ChartHandler& Get_chart_handler(void)$/;"	f	class:Phreeqc
Get_chart_handler	phreeqcpp/Phreeqc.h	/^	const ChartHandler& Get_chart_handler(void)const$/;"	f	class:Phreeqc
Get_chart_title	phreeqcpp/ChartObject.h	/^	const std::string &Get_chart_title()const$/;"	f	class:ChartObject
Get_chart_title	phreeqcpp/ChartObject.h	/^	std::string &Get_chart_title()$/;"	f	class:ChartObject
Get_chart_type	phreeqcpp/ChartObject.h	/^	int Get_chart_type()const$/;"	f	class:ChartObject
Get_coef	phreeqcpp/SolutionIsotope.h	/^	LDBLE Get_coef() const	{return this->coef;}$/;"	f	class:cxxSolutionIsotope
Get_colnr	phreeqcpp/ChartObject.h	/^	int Get_colnr()const$/;"	f	class:ChartObject
Get_color	phreeqcpp/CurveObject.h	/^	std::string &Get_color(void)$/;"	f	class:CurveObject
Get_color_string	phreeqcpp/ChartObject.cpp	/^ChartObject::Get_color_string(std::string &color)$/;"	f	class:ChartObject
Get_color_string_csv	phreeqcpp/ChartObject.cpp	/^ChartObject::Get_color_string_csv(std::string &color)$/;"	f	class:ChartObject
Get_comps	phreeqcpp/ISolution.h	/^	const std::map < std::string, cxxISolutionComp > &Get_comps(void)const {return this->comps;}$/;"	f	class:cxxISolution
Get_comps	phreeqcpp/ISolution.h	/^	std::map < std::string, cxxISolutionComp > &Get_comps(void) {return this->comps;}$/;"	f	class:cxxISolution
Get_connect_simulations	phreeqcpp/ChartObject.h	/^	bool Get_connect_simulations()const$/;"	f	class:ChartObject
Get_count	phreeqcpp/Pressure.cxx	/^Get_count(void) const$/;"	f	class:cxxPressure
Get_count	phreeqcpp/cxxKinetics.h	/^	int Get_count(void) const {return count;}$/;"	f	class:cxxKinetics
Get_countSteps	phreeqcpp/Reaction.h	/^	int Get_countSteps(void) const {return this->countSteps;}$/;"	f	class:cxxReaction
Get_countTemps	phreeqcpp/Temperature.cxx	/^Get_countTemps(void) const$/;"	f	class:cxxTemperature
Get_csv_file_names	phreeqcpp/ChartObject.h	/^	std::vector< std::string > Get_csv_file_names()const$/;"	f	class:ChartObject
Get_csv_file_names	phreeqcpp/ChartObject.h	/^	void Get_csv_file_names(std::vector< std::string > names)$/;"	f	class:ChartObject
Get_current_chart	phreeqcpp/ChartHandler.h	/^	ChartObject * Get_current_chart()$/;"	f	class:ChartHandler
Get_current_chart	phreeqcpp/ChartHandler.h	/^	const ChartObject * Get_current_chart()const$/;"	f	class:ChartHandler
Get_curve_added	phreeqcpp/ChartObject.h	/^	bool Get_curve_added()const$/;"	f	class:ChartObject
Get_cvode_order	phreeqcpp/cxxKinetics.h	/^	int Get_cvode_order(void) const {return cvode_order;}$/;"	f	class:cxxKinetics
Get_cvode_steps	phreeqcpp/cxxKinetics.h	/^	int Get_cvode_steps(void) const {return cvode_steps;}$/;"	f	class:cxxKinetics
Get_d_params	phreeqcpp/KineticsComp.h	/^	const std::vector < LDBLE > &Get_d_params(void)const {return d_params;};$/;"	f	class:cxxKineticsComp
Get_d_params	phreeqcpp/KineticsComp.h	/^	std::vector < LDBLE > &Get_d_params(void) {return d_params;};$/;"	f	class:cxxKineticsComp
Get_debye_lengths	phreeqcpp/Surface.h	/^	LDBLE Get_debye_lengths(void) const {return debye_lengths;}$/;"	f	class:cxxSurface
Get_default_pe	phreeqcpp/ISolution.h	/^	const char * Get_default_pe() const                {return default_pe;}$/;"	f	class:cxxISolution
Get_defined	phreeqcpp/StorageBinList.h	/^	bool Get_defined(void)const { return(this->defined); };$/;"	f	class:StorageBinListItem
Get_delta	phreeqcpp/PPassemblageComp.h	/^	LDBLE Get_delta() const {return this->delta;}$/;"	f	class:cxxPPassemblageComp
Get_delta	phreeqcpp/SScomp.h	/^	LDBLE Get_delta() const {return this->delta;}$/;"	f	class:cxxSScomp
Get_density	phreeqcpp/Solution.h	/^	LDBLE Get_density() const                           {return this->density;}$/;"	f	class:cxxSolution
Get_description	phreeqcpp/ISolutionComp.h	/^	const std::string &Get_description() const$/;"	f	class:cxxISolutionComp
Get_description	phreeqcpp/NumKeyword.h	/^	const std::string &Get_description() const$/;"	f	class:cxxNumKeyword
Get_detach	phreeqcpp/ChartObject.h	/^	bool Get_detach()const$/;"	f	class:ChartObject
Get_dg	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_dg(void) const {return dg;}$/;"	f	class:cxxSurfDL
Get_dg_g_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_dg_g_moles(void) const {return dg_g_moles;}$/;"	f	class:cxxSpeciesDL
Get_dg_g_moles_address	phreeqcpp/SurfaceCharge.h	/^	LDBLE *Get_dg_g_moles_address(void) {return &dg_g_moles;}$/;"	f	class:cxxSpeciesDL
Get_dh2o_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_dh2o_moles(void) const {return dh2o_moles;}$/;"	f	class:cxxSpeciesDL
Get_dh2o_moles_address	phreeqcpp/SurfaceCharge.h	/^	LDBLE *Get_dh2o_moles_address(void) {return &dh2o_moles;}$/;"	f	class:cxxSpeciesDL
Get_diffuse_layer_totals	phreeqcpp/SurfaceCharge.h	/^	const cxxNameDouble & Get_diffuse_layer_totals(void) const {return this->diffuse_layer_totals;}$/;"	f	class:cxxSurfaceCharge
Get_dissolve_only	phreeqcpp/PPassemblageComp.h	/^	bool Get_dissolve_only() const {return this->dissolve_only;}$/;"	f	class:cxxPPassemblageComp
Get_dist	phreeqcpp/SelectedOutput.h	/^	inline bool Get_dist(void)const                                   {return this->dist;}$/;"	f	class:SelectedOutput
Get_dl_species_map	phreeqcpp/SurfaceCharge.h	/^	std::map<int, double> & Get_dl_species_map(void)       {return this->dl_species_map;}$/;"	f	class:cxxSurfaceCharge
Get_dl_type	phreeqcpp/Surface.h	/^	DIFFUSE_LAYER_TYPE Get_dl_type(void) const {return dl_type;}$/;"	f	class:cxxSurface
Get_dn	phreeqcpp/SS.h	/^	LDBLE Get_dn(void) const {return (this->dn);}$/;"	f	class:cxxSS
Get_dn	phreeqcpp/SScomp.h	/^	LDBLE Get_dn() const {return this->dn;}$/;"	f	class:cxxSScomp
Get_dnb	phreeqcpp/SScomp.h	/^	LDBLE Get_dnb() const {return this->dnb;}$/;"	f	class:cxxSScomp
Get_dnc	phreeqcpp/SScomp.h	/^	LDBLE Get_dnc() const {return this->dnc;}$/;"	f	class:cxxSScomp
Get_done	phreeqcpp/ChartObject.h	/^	bool Get_done()const$/;"	f	class:ChartObject
Get_drelated_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_drelated_moles(void) const {return drelated_moles;}$/;"	f	class:cxxSpeciesDL
Get_drelated_moles_address	phreeqcpp/SurfaceCharge.h	/^	LDBLE *Get_drelated_moles_address(void) {return &drelated_moles;}$/;"	f	class:cxxSpeciesDL
Get_dump_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_dump_on(void)							{return this->dump_on;};$/;"	f	class:PHRQ_io
Get_dump_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *Get_dump_ostream(void)			{return this->dump_ostream;};$/;"	f	class:PHRQ_io
Get_dx_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_dx_moles(void) const {return dx_moles;}$/;"	f	class:cxxSpeciesDL
Get_dx_moles_address	phreeqcpp/SurfaceCharge.h	/^	LDBLE *Get_dx_moles_address(void) {return &dx_moles;}$/;"	f	class:cxxSpeciesDL
Get_dz	phreeqcpp/global_structures.h	/^	LDBLE *Get_dz(void) {return this->dz;}$/;"	f	class:cxxChemRxn
Get_echo_destination	phreeqcpp/common/PHRQ_io.h	/^	ECHO_OPTION Get_echo_destination(void)      {return this->echo_destination;};$/;"	f	class:PHRQ_io
Get_echo_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_echo_on(void)						{return this->echo_on;};$/;"	f	class:PHRQ_io
Get_elementList	phreeqcpp/Reaction.h	/^	const cxxNameDouble &Get_elementList(void) const {return this->elementList;}$/;"	f	class:cxxReaction
Get_eltList	phreeqcpp/PPassemblage.h	/^	const cxxNameDouble & Get_eltList() const$/;"	f	class:cxxPPassemblage
Get_elt_name	phreeqcpp/SolutionIsotope.h	/^	const std::string &Get_elt_name() const	{return this->elt_name;}$/;"	f	class:cxxSolutionIsotope
Get_end_timer	phreeqcpp/ChartObject.h	/^	bool Get_end_timer()const$/;"	f	class:ChartObject
Get_equalIncrements	phreeqcpp/Pressure.h	/^	bool Get_equalIncrements(void) const {return equalIncrements;}$/;"	f	class:cxxPressure
Get_equalIncrements	phreeqcpp/Reaction.h	/^	bool Get_equalIncrements(void) const {return this->equalIncrements;}$/;"	f	class:cxxReaction
Get_equalIncrements	phreeqcpp/Temperature.h	/^	bool Get_equalIncrements(void) const {return equalIncrements;}$/;"	f	class:cxxTemperature
Get_equalIncrements	phreeqcpp/cxxKinetics.h	/^	bool Get_equalIncrements(void) const {return equalIncrements;}$/;"	f	class:cxxKinetics
Get_equation_name	phreeqcpp/ISolutionComp.h	/^	const std::string &Get_equation_name() const$/;"	f	class:cxxISolutionComp
Get_error_file	phreeqcpp/common/PHRQ_io.h	/^	FILE *Get_error_file(void)					{return this->error_file;}$/;"	f	class:PHRQ_io
Get_error_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_error_on(void)							{return this->error_on;}$/;"	f	class:PHRQ_io
Get_error_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *Get_error_ostream(void)			{return this->error_ostream;}$/;"	f	class:PHRQ_io
Get_exchange	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_exchange(void)      { return(this->exchange); };$/;"	f	class:StorageBinList
Get_exchange	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_exchange(void)const      { return(this->exchange); };$/;"	f	class:StorageBinList
Get_exchange	phreeqcpp/dumper.h	/^	std::set < int > & Get_exchange(void)		{ return(this->binList.Get_exchange().Get_numbers()); };$/;"	f	class:dumper
Get_exchange_comps	phreeqcpp/Exchange.h	/^	const std::vector<cxxExchComp> & Get_exchange_comps(void)const {return this->exchange_comps;}$/;"	f	class:cxxExchange
Get_exchange_comps	phreeqcpp/Exchange.h	/^	std::vector<cxxExchComp> & Get_exchange_comps(void) {return this->exchange_comps;}$/;"	f	class:cxxExchange
Get_exchange_in	phreeqcpp/Use.h	/^	bool Get_exchange_in(void) const      {return this->exchange_in;}$/;"	f	class:cxxUse
Get_exchange_ptr	phreeqcpp/Use.h	/^	cxxExchange * Get_exchange_ptr(void) const               {return this->exchange_ptr;}$/;"	f	class:cxxUse
Get_file_name	phreeqcpp/SelectedOutput.h	/^	inline const std::string & Get_file_name(void)const               {return this->file_name;}$/;"	f	class:SelectedOutput
Get_file_name	phreeqcpp/SelectedOutput.h	/^	inline std::string & Get_file_name(void)                          {return this->file_name;}$/;"	f	class:SelectedOutput
Get_file_name	phreeqcpp/dumper.h	/^	std::string Get_file_name(void)		{ return(this->file_name); };$/;"	f	class:dumper
Get_force_equality	phreeqcpp/PPassemblageComp.h	/^	bool Get_force_equality() const {return this->force_equality;}$/;"	f	class:cxxPPassemblageComp
Get_form_started	phreeqcpp/ChartObject.h	/^	bool Get_form_started()const$/;"	f	class:ChartObject
Get_formula	phreeqcpp/ExchComp.h	/^	const std::string &Get_formula() const$/;"	f	class:cxxExchComp
Get_formula	phreeqcpp/SurfaceComp.h	/^	const std::string &Get_formula() const {return this->formula;}$/;"	f	class:cxxSurfaceComp
Get_formula_z	phreeqcpp/ExchComp.h	/^	LDBLE Get_formula_z() const$/;"	f	class:cxxExchComp
Get_formula_z	phreeqcpp/SurfaceComp.h	/^	LDBLE Get_formula_z(void) const {return formula_z;};$/;"	f	class:cxxSurfaceComp
Get_fraction_x	phreeqcpp/SScomp.h	/^	LDBLE Get_fraction_x() const {return this->fraction_x;}$/;"	f	class:cxxSScomp
Get_g	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_g(void) const {return g;}$/;"	f	class:cxxSurfDL
Get_g_map	phreeqcpp/SurfaceCharge.h	/^	std::map<LDBLE, cxxSurfDL> &Get_g_map(void) {return g_map;}$/;"	f	class:cxxSurfaceCharge
Get_g_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_g_moles(void) const {return g_moles;}$/;"	f	class:cxxSpeciesDL
Get_g_moles_address	phreeqcpp/SurfaceCharge.h	/^	LDBLE *Get_g_moles_address(void) {return &g_moles;}$/;"	f	class:cxxSpeciesDL
Get_gas_comps	phreeqcpp/GasPhase.h	/^	const std::vector<cxxGasComp> & Get_gas_comps(void)const {return gas_comps;};$/;"	f	class:cxxGasPhase
Get_gas_comps	phreeqcpp/GasPhase.h	/^	std::vector<cxxGasComp> & Get_gas_comps(void) {return gas_comps;};$/;"	f	class:cxxGasPhase
Get_gas_phase	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_gas_phase(void)     { return(this->gas_phase); };$/;"	f	class:StorageBinList
Get_gas_phase	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_gas_phase(void)const     { return(this->gas_phase); };$/;"	f	class:StorageBinList
Get_gas_phase	phreeqcpp/dumper.h	/^	std::set < int > & Get_gas_phase(void)		{ return(this->binList.Get_gas_phase().Get_numbers()); };$/;"	f	class:dumper
Get_gas_phase_in	phreeqcpp/Use.h	/^	bool Get_gas_phase_in(void) const     {return this->gas_phase_in;}$/;"	f	class:cxxUse
Get_gas_phase_ptr	phreeqcpp/Use.h	/^	cxxGasPhase * Get_gas_phase_ptr(void) const              {return this->gas_phase_ptr;}$/;"	f	class:cxxUse
Get_gases	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_gases(void)const            {return this->gases;}$/;"	f	class:SelectedOutput
Get_gases	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_gases(void)            {return this->gases;}$/;"	f	class:SelectedOutput
Get_gfw	phreeqcpp/ISolutionComp.h	/^	LDBLE Get_gfw() const$/;"	f	class:cxxISolutionComp
Get_grams	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_grams() const {return this->grams;}$/;"	f	class:cxxSurfaceCharge
Get_graph_initial_solutions	phreeqcpp/ChartObject.h	/^	bool Get_graph_initial_solutions()const$/;"	f	class:ChartObject
Get_graph_x	phreeqcpp/ChartObject.h	/^	LDBLE Get_graph_x()const$/;"	f	class:ChartObject
Get_graph_y	phreeqcpp/ChartObject.h	/^	const std::map<int, LDBLE> &Get_graph_y()const$/;"	f	class:ChartObject
Get_graph_y	phreeqcpp/ChartObject.h	/^	std::map<int, LDBLE> &Get_graph_y()$/;"	f	class:ChartObject
Get_hInfiniteLoop	phreeqcpp/PBasic.h	/^	HANDLE Get_hInfiniteLoop(void) const {return hInfiniteLoop;};$/;"	f	class:PBasic
Get_have_punch_name	phreeqcpp/SelectedOutput.h	/^	inline bool Get_have_punch_name(void)const                        {return this->have_punch_name;}$/;"	f	class:SelectedOutput
Get_headings	phreeqcpp/UserPunch.h	/^	const std::vector <std::string> &Get_headings()const {return this->headings;}$/;"	f	class:UserPunch
Get_headings	phreeqcpp/UserPunch.h	/^	std::vector <std::string> &Get_headings() {return this->headings;}$/;"	f	class:UserPunch
Get_high_precision	phreeqcpp/SelectedOutput.h	/^	inline bool Get_high_precision(void)const                         {return this->high_precision;}$/;"	f	class:SelectedOutput
Get_id	phreeqcpp/CurveObject.h	/^	std::string &Get_id(void)$/;"	f	class:CurveObject
Get_init_moles	phreeqcpp/SScomp.h	/^	LDBLE Get_init_moles() const {return this->init_moles;}$/;"	f	class:cxxSScomp
Get_initial_data	phreeqcpp/Solution.h	/^	const cxxISolution *Get_initial_data()const         {return this->initial_data;}$/;"	f	class:cxxSolution
Get_initial_data	phreeqcpp/Solution.h	/^	cxxISolution *Get_initial_data()                    {return this->initial_data;}$/;"	f	class:cxxSolution
Get_initial_moles	phreeqcpp/GasComp.h	/^	LDBLE Get_initial_moles() const {return this->initial_moles;}$/;"	f	class:cxxGasComp
Get_initial_moles	phreeqcpp/KineticsComp.h	/^	LDBLE Get_initial_moles(void) const {return initial_moles;}$/;"	f	class:cxxKineticsComp
Get_initial_moles	phreeqcpp/PPassemblageComp.h	/^	LDBLE Get_initial_moles() const {return this->initial_moles;}$/;"	f	class:cxxPPassemblageComp
Get_initial_moles	phreeqcpp/SScomp.h	/^	LDBLE Get_initial_moles() const {return this->initial_moles;}$/;"	f	class:cxxSScomp
Get_input_case	phreeqcpp/SS.h	/^	SS_PARAMETER_TYPE Get_input_case(void)const {return this->input_case;}$/;"	f	class:cxxSS
Get_input_conc	phreeqcpp/ISolutionComp.h	/^	LDBLE Get_input_conc() const$/;"	f	class:cxxISolutionComp
Get_inverse	phreeqcpp/SelectedOutput.h	/^	inline bool Get_inverse(void)const                                {return this->inverse;}$/;"	f	class:SelectedOutput
Get_inverse_in	phreeqcpp/Use.h	/^	bool Get_inverse_in(void) const       {return this->inverse_in;}$/;"	f	class:cxxUse
Get_inverse_ptr	phreeqcpp/Use.h	/^	struct inverse * Get_inverse_ptr(void) const             {return this->inverse_ptr;}$/;"	f	class:cxxUse
Get_io	phreeqcpp/common/PHRQ_base.h	/^	PHRQ_io * Get_io(void)$/;"	f	class:PHRQ_base
Get_io_error_count	phreeqcpp/common/PHRQ_io.h	/^	int Get_io_error_count(void)				{return this->io_error_count;};$/;"	f	class:PHRQ_io
Get_isotope_name	phreeqcpp/SolutionIsotope.h	/^	const std::string &Get_isotope_name() const	{return this->isotope_name;}$/;"	f	class:cxxSolutionIsotope
Get_isotope_number	phreeqcpp/SolutionIsotope.h	/^	LDBLE Get_isotope_number() const$/;"	f	class:cxxSolutionIsotope
Get_isotopes	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_isotopes(void)const         {return this->isotopes;}$/;"	f	class:SelectedOutput
Get_isotopes	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_isotopes(void)         {return this->isotopes;}$/;"	f	class:SelectedOutput
Get_isotopes	phreeqcpp/Solution.h	/^	const std::map < std::string, cxxSolutionIsotope > & Get_isotopes(void)const  {return this->isotopes;}	$/;"	f	class:cxxSolution
Get_isotopes	phreeqcpp/Solution.h	/^	std::map < std::string, cxxSolutionIsotope > & Get_isotopes(void)             {return this->isotopes;}	$/;"	f	class:cxxSolution
Get_kinetics	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_kinetics(void)const         {return this->kinetics;}$/;"	f	class:SelectedOutput
Get_kinetics	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_kinetics(void)         {return this->kinetics;}$/;"	f	class:SelectedOutput
Get_kinetics	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_kinetics(void)      { return(this->kinetics); };$/;"	f	class:StorageBinList
Get_kinetics	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_kinetics(void)const      { return(this->kinetics); };$/;"	f	class:StorageBinList
Get_kinetics	phreeqcpp/dumper.h	/^	std::set < int > & Get_kinetics(void)		{ return(this->binList.Get_kinetics().Get_numbers()); };$/;"	f	class:dumper
Get_kinetics_comps	phreeqcpp/cxxKinetics.h	/^	const std::vector < cxxKineticsComp > &Get_kinetics_comps(void)const {return kinetics_comps;}$/;"	f	class:cxxKinetics
Get_kinetics_comps	phreeqcpp/cxxKinetics.h	/^	std::vector < cxxKineticsComp > &Get_kinetics_comps(void) {return kinetics_comps;}$/;"	f	class:cxxKinetics
Get_kinetics_in	phreeqcpp/Use.h	/^	bool Get_kinetics_in(void) const      {return this->kinetics_in;}$/;"	f	class:cxxUse
Get_kinetics_ptr	phreeqcpp/Use.h	/^	cxxKinetics * Get_kinetics_ptr(void) const               {return this->kinetics_ptr;}$/;"	f	class:cxxUse
Get_la	phreeqcpp/ExchComp.h	/^	LDBLE Get_la() const$/;"	f	class:cxxExchComp
Get_la	phreeqcpp/SurfaceComp.h	/^	LDBLE Get_la(void) const {return la;};$/;"	f	class:cxxSurfaceComp
Get_la_psi	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_la_psi() const {return this->la_psi;}$/;"	f	class:cxxSurfaceCharge
Get_legal_symbol	phreeqcpp/ChartObject.cpp	/^ChartObject::Get_legal_symbol(std::string &sym)$/;"	f	class:ChartObject
Get_legal_symbol_csv	phreeqcpp/ChartObject.cpp	/^ChartObject::Get_legal_symbol_csv(std::string &sym)$/;"	f	class:ChartObject
Get_line_w	phreeqcpp/CurveObject.h	/^	LDBLE Get_line_w(void)$/;"	f	class:CurveObject
Get_log10_fraction_x	phreeqcpp/SScomp.h	/^	LDBLE Get_log10_fraction_x() const {return this->log10_fraction_x;}$/;"	f	class:cxxSScomp
Get_log10_lambda	phreeqcpp/SScomp.h	/^	LDBLE Get_log10_lambda() const {return this->log10_lambda;}$/;"	f	class:cxxSScomp
Get_log_gamma_map	phreeqcpp/Solution.h	/^	std::map<int, double> & Get_log_gamma_map(void)     {return this->log_gamma_map;}$/;"	f	class:cxxSolution
Get_log_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_log_on(void)							{return this->log_on;}$/;"	f	class:PHRQ_io
Get_log_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *Get_log_ostream(void)				{return this->log_ostream;}$/;"	f	class:PHRQ_io
Get_logk	phreeqcpp/global_structures.h	/^	LDBLE *Get_logk(void) {return this->logk;}$/;"	f	class:cxxChemRxn
Get_m	phreeqcpp/KineticsComp.h	/^	LDBLE Get_m(void) const {return m;}	$/;"	f	class:cxxKineticsComp
Get_m0	phreeqcpp/KineticsComp.h	/^	LDBLE Get_m0(void) const {return m0;}$/;"	f	class:cxxKineticsComp
Get_m_line	phreeqcpp/common/PHRQ_io.h	/^	std::string & Get_m_line()       {return m_line;}$/;"	f	class:PHRQ_io
Get_m_line_save	phreeqcpp/common/PHRQ_io.h	/^	std::string & Get_m_line_save()  {return m_line_save;}$/;"	f	class:PHRQ_io
Get_m_line_type	phreeqcpp/common/PHRQ_io.h	/^	LINE_TYPE Get_m_line_type()      {return m_line_type;};$/;"	f	class:PHRQ_io
Get_m_next_keyword	phreeqcpp/common/PHRQ_io.h	/^	Keywords::KEYWORDS Get_m_next_keyword() const {return m_next_keyword;}$/;"	f	class:PHRQ_io
Get_mass_water	phreeqcpp/Solution.h	/^	LDBLE Get_mass_water() const                        {return this->mass_water;}$/;"	f	class:cxxSolution
Get_mass_water	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_mass_water() const {return this->mass_water;}$/;"	f	class:cxxSurfaceCharge
Get_master_activity	phreeqcpp/Solution.cxx	/^cxxSolution::Get_master_activity(char *string) const$/;"	f	class:cxxSolution
Get_master_activity	phreeqcpp/Solution.h	/^	cxxNameDouble & Get_master_activity(void)           {return this->master_activity;}$/;"	f	class:cxxSolution
Get_master_element	phreeqcpp/SurfaceComp.h	/^	const std::string &Get_master_element() const {return this->master_element;}$/;"	f	class:cxxSurfaceComp
Get_miscibility	phreeqcpp/SS.h	/^	bool Get_miscibility() const {return (this->miscibility);}$/;"	f	class:cxxSS
Get_mix	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_mix(void)           { return(this->mix); };$/;"	f	class:StorageBinList
Get_mix	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_mix(void)const           { return(this->mix); };$/;"	f	class:StorageBinList
Get_mix	phreeqcpp/dumper.h	/^	std::set < int > & Get_mix(void)			{ return(this->binList.Get_mix().Get_numbers()); };$/;"	f	class:dumper
Get_mixComps	phreeqcpp/cxxMix.h	/^	const std::map < int, LDBLE > & Get_mixComps() const$/;"	f	class:cxxMix
Get_mix_in	phreeqcpp/Use.h	/^	bool Get_mix_in(void) const           {return this->mix_in;}$/;"	f	class:cxxUse
Get_mix_ptr	phreeqcpp/Use.h	/^	cxxMix * Get_mix_ptr(void) const                         {return this->mix_ptr;}$/;"	f	class:cxxUse
Get_molalities	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_molalities(void)const       {return this->molalities;}$/;"	f	class:SelectedOutput
Get_molalities	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_molalities(void)       {return this->molalities;}$/;"	f	class:SelectedOutput
Get_moles	phreeqcpp/GasComp.h	/^	LDBLE Get_moles() const {return this->moles;}$/;"	f	class:cxxGasComp
Get_moles	phreeqcpp/ISolutionComp.h	/^	LDBLE Get_moles() const$/;"	f	class:cxxISolutionComp
Get_moles	phreeqcpp/KineticsComp.h	/^	LDBLE Get_moles(void) const {return moles;}$/;"	f	class:cxxKineticsComp
Get_moles	phreeqcpp/PPassemblageComp.h	/^	LDBLE Get_moles() const {return this->moles;}$/;"	f	class:cxxPPassemblageComp
Get_moles	phreeqcpp/SScomp.h	/^	LDBLE Get_moles() const {return this->moles;}$/;"	f	class:cxxSScomp
Get_moles	phreeqcpp/SurfaceComp.h	/^	LDBLE Get_moles(void) const {return moles;}$/;"	f	class:cxxSurfaceComp
Get_moles_of_reaction	phreeqcpp/KineticsComp.h	/^	const cxxNameDouble &Get_moles_of_reaction(void)const {return moles_of_reaction;}$/;"	f	class:cxxKineticsComp
Get_moles_of_reaction	phreeqcpp/KineticsComp.h	/^	cxxNameDouble &Get_moles_of_reaction(void) {return moles_of_reaction;}$/;"	f	class:cxxKineticsComp
Get_mu	phreeqcpp/SelectedOutput.h	/^	inline bool Get_mu(void)const                                     {return this->mu;}$/;"	f	class:SelectedOutput
Get_mu	phreeqcpp/Solution.h	/^	LDBLE Get_mu() const      {return this->mu;}$/;"	f	class:cxxSolution
Get_nErrLineNumber	phreeqcpp/PBasic.h	/^	int Get_nErrLineNumber(void) const {return nErrLineNumber;};$/;"	f	class:PBasic
Get_nIDErrPrompt	phreeqcpp/PBasic.h	/^	UINT Get_nIDErrPrompt(void)const {return nIDErrPrompt;};$/;"	f	class:PBasic
Get_n_exchange_user	phreeqcpp/Use.h	/^	int Get_n_exchange_user(void) const       {return n_exchange_user;}$/;"	f	class:cxxUse
Get_n_gas_phase_user	phreeqcpp/Use.h	/^	int Get_n_gas_phase_user(void) const      {return n_gas_phase_user;}$/;"	f	class:cxxUse
Get_n_inverse_user	phreeqcpp/Use.h	/^	int Get_n_inverse_user(void) const        {return n_inverse_user;}$/;"	f	class:cxxUse
Get_n_kinetics_user	phreeqcpp/Use.h	/^	int Get_n_kinetics_user(void) const       {return n_kinetics_user;}$/;"	f	class:cxxUse
Get_n_mix_user	phreeqcpp/Use.h	/^	int Get_n_mix_user(void) const            {return n_mix_user;}$/;"	f	class:cxxUse
Get_n_mix_user_orig	phreeqcpp/Use.h	/^	int Get_n_mix_user_orig(void) const       {return n_mix_user_orig;}$/;"	f	class:cxxUse
Get_n_pp_assemblage_user	phreeqcpp/Use.h	/^	int Get_n_pp_assemblage_user(void) const  {return n_pp_assemblage_user;}$/;"	f	class:cxxUse
Get_n_pressure_user	phreeqcpp/Use.h	/^	int Get_n_pressure_user(void) const       {return n_pressure_user;}$/;"	f	class:cxxUse
Get_n_reaction_user	phreeqcpp/Use.h	/^	int Get_n_reaction_user(void) const       {return n_reaction_user;}$/;"	f	class:cxxUse
Get_n_solution	phreeqcpp/Exchange.h	/^	int Get_n_solution(void) const {return this->n_solution;}$/;"	f	class:cxxExchange
Get_n_solution	phreeqcpp/GasPhase.h	/^	int Get_n_solution(void) const {return this->n_solution;};$/;"	f	class:cxxGasPhase
Get_n_solution	phreeqcpp/Surface.h	/^	int Get_n_solution(void)const {return n_solution;}$/;"	f	class:cxxSurface
Get_n_solution_user	phreeqcpp/Use.h	/^	int Get_n_solution_user(void) const       {return n_solution_user;}$/;"	f	class:cxxUse
Get_n_ss_assemblage_user	phreeqcpp/Use.h	/^	int Get_n_ss_assemblage_user(void) const  {return n_ss_assemblage_user;}$/;"	f	class:cxxUse
Get_n_surface_user	phreeqcpp/Use.h	/^	int Get_n_surface_user(void) const        {return n_surface_user;}$/;"	f	class:cxxUse
Get_n_temperature_user	phreeqcpp/Use.h	/^	int Get_n_temperature_user(void) const    {return n_temperature_user;}$/;"	f	class:cxxUse
Get_n_user	phreeqcpp/NumKeyword.h	/^	int Get_n_user() const$/;"	f	class:cxxNumKeyword
Get_n_user_end	phreeqcpp/NumKeyword.h	/^	int Get_n_user_end() const$/;"	f	class:cxxNumKeyword
Get_name	phreeqcpp/PPassemblageComp.h	/^	const std::string &Get_name() const	{return this->name;}$/;"	f	class:cxxPPassemblageComp
Get_name	phreeqcpp/SS.h	/^	const std::string &Get_name() const$/;"	f	class:cxxSS
Get_name	phreeqcpp/SScomp.h	/^	const std::string &Get_name() const	{return this->name;}$/;"	f	class:cxxSScomp
Get_name	phreeqcpp/SurfaceCharge.h	/^	const std::string &Get_name() const	{return this->name;}$/;"	f	class:cxxSurfaceCharge
Get_namecoef	phreeqcpp/KineticsComp.h	/^	const cxxNameDouble &Get_namecoef(void)const {return namecoef;}$/;"	f	class:cxxKineticsComp
Get_namecoef	phreeqcpp/KineticsComp.h	/^	cxxNameDouble &Get_namecoef(void) {return namecoef;}$/;"	f	class:cxxKineticsComp
Get_new_def	phreeqcpp/Exchange.h	/^	bool Get_new_def(void) const {return this->new_def;}$/;"	f	class:cxxExchange
Get_new_def	phreeqcpp/GasPhase.h	/^	bool Get_new_def(void) const {return this->new_def;};$/;"	f	class:cxxGasPhase
Get_new_def	phreeqcpp/PPassemblage.h	/^	bool Get_new_def(void) const {return this->new_def;}$/;"	f	class:cxxPPassemblage
Get_new_def	phreeqcpp/SSassemblage.h	/^	bool Get_new_def(void) const {return new_def;}$/;"	f	class:cxxSSassemblage
Get_new_def	phreeqcpp/SelectedOutput.h	/^	inline bool Get_new_def(void)const                                {return this->new_def;}$/;"	f	class:SelectedOutput
Get_new_def	phreeqcpp/Solution.h	/^	bool Get_new_def() const  {return this->new_def;}$/;"	f	class:cxxSolution
Get_new_def	phreeqcpp/Surface.h	/^	bool Get_new_def(void) {return new_def;}$/;"	f	class:cxxSurface
Get_new_headings	phreeqcpp/ChartObject.h	/^	const std::vector<std::string> &Get_new_headings()const$/;"	f	class:ChartObject
Get_new_headings	phreeqcpp/ChartObject.h	/^	std::vector<std::string> &Get_new_headings()$/;"	f	class:ChartObject
Get_new_plotxy_curves	phreeqcpp/ChartObject.h	/^	const std::vector<CurveObject> &Get_new_plotxy_curves()const$/;"	f	class:ChartObject
Get_new_plotxy_curves	phreeqcpp/ChartObject.h	/^	std::vector<CurveObject> &Get_new_plotxy_curves()$/;"	f	class:ChartObject
Get_new_ug	phreeqcpp/ChartObject.h	/^	bool Get_new_ug()const$/;"	f	class:ChartObject
Get_numbers	phreeqcpp/StorageBinList.h	/^	const std::set < int > &Get_numbers(void)const { return(this->numbers); };$/;"	f	class:StorageBinListItem
Get_numbers	phreeqcpp/StorageBinList.h	/^	std::set < int > &Get_numbers(void) { return(this->numbers); };$/;"	f	class:StorageBinListItem
Get_on	phreeqcpp/dumper.h	/^	bool Get_on(void)							{ return this->on; };$/;"	f	class:dumper
Get_only_counter_ions	phreeqcpp/Surface.h	/^	bool Get_only_counter_ions(void) const {return only_counter_ions;}$/;"	f	class:cxxSurface
Get_output_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_output_on(void)						{return this->output_on;};$/;"	f	class:PHRQ_io
Get_output_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *Get_output_ostream(void)			{return this->output_ostream;};$/;"	f	class:PHRQ_io
Get_p	phreeqcpp/SS.h	/^	const std::vector<LDBLE> & Get_p(void)const  {return this->p;}$/;"	f	class:cxxSS
Get_p	phreeqcpp/SS.h	/^	std::vector<LDBLE> & Get_p(void)             {return this->p;}$/;"	f	class:cxxSS
Get_p_read	phreeqcpp/GasComp.h	/^	LDBLE Get_p_read() const {return this->p_read;}$/;"	f	class:cxxGasComp
Get_parse_all	phreeqcpp/PBasic.h	/^	bool Get_parse_all(void) const {return parse_all;};$/;"	f	class:PBasic
Get_parse_whole_program	phreeqcpp/PBasic.h	/^	bool Get_parse_whole_program(void) const {return parse_whole_program;};$/;"	f	class:PBasic
Get_patm	phreeqcpp/Solution.h	/^	LDBLE Get_patm() const    {return this->patm;}$/;"	f	class:cxxSolution
Get_pe	phreeqcpp/SelectedOutput.h	/^	inline bool Get_pe(void)const                                     {return this->pe;}$/;"	f	class:SelectedOutput
Get_pe	phreeqcpp/Solution.h	/^	LDBLE Get_pe() const      {return this->pe;}$/;"	f	class:cxxSolution
Get_pe_reaction	phreeqcpp/ISolutionComp.h	/^	std::string Get_pe_reaction() const$/;"	f	class:cxxISolutionComp
Get_pe_reactions	phreeqcpp/ISolution.h	/^	std::map < std::string, cxxChemRxn >  &Get_pe_reactions(void) {return this->pe_reactions;}$/;"	f	class:cxxISolution
Get_percent_error	phreeqcpp/SelectedOutput.h	/^	inline bool Get_percent_error(void)const                          {return this->percent_error;}$/;"	f	class:SelectedOutput
Get_ph	phreeqcpp/SelectedOutput.h	/^	inline bool Get_ph(void)const                                     {return this->ph;}$/;"	f	class:SelectedOutput
Get_ph	phreeqcpp/Solution.h	/^	LDBLE Get_ph() const      {return this->ph;}$/;"	f	class:cxxSolution
Get_phase_name	phreeqcpp/ExchComp.h	/^	const std::string &Get_phase_name() const$/;"	f	class:cxxExchComp
Get_phase_name	phreeqcpp/GasComp.h	/^	std::string Get_phase_name(void) const {return this->phase_name;}$/;"	f	class:cxxGasComp
Get_phase_name	phreeqcpp/SurfaceComp.h	/^	const std::string &Get_phase_name() const {return this->phase_name;}$/;"	f	class:cxxSurfaceComp
Get_phase_proportion	phreeqcpp/ExchComp.h	/^	LDBLE Get_phase_proportion() const$/;"	f	class:cxxExchComp
Get_phase_proportion	phreeqcpp/SurfaceComp.h	/^	LDBLE Get_phase_proportion(void) const {return phase_proportion;}$/;"	f	class:cxxSurfaceComp
Get_phase_si	phreeqcpp/ISolutionComp.h	/^	LDBLE Get_phase_si() const$/;"	f	class:cxxISolutionComp
Get_phreeqc	phreeqcpp/ChartObject.h	/^	Phreeqc * Get_phreeqc()$/;"	f	class:ChartObject
Get_phreeqc	phreeqcpp/ChartObject.h	/^	const Phreeqc * Get_phreeqc()const$/;"	f	class:ChartObject
Get_phreeqci_gui	phreeqcpp/PBasic.h	/^	bool Get_phreeqci_gui(void) const {return phreeqci_gui;};$/;"	f	class:PBasic
Get_phrq_io	phreeqcpp/Phreeqc.h	/^	PHRQ_io * Get_phrq_io(void) {return this->phrq_io;}$/;"	f	class:Phreeqc
Get_pitzer_exchange_gammas	phreeqcpp/Exchange.cxx	/^cxxExchange::Get_pitzer_exchange_gammas() const$/;"	f	class:cxxExchange
Get_point_added	phreeqcpp/ChartObject.h	/^	bool Get_point_added()const$/;"	f	class:ChartObject
Get_pp_assemblage	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_pp_assemblage(void) { return(this->pp_assemblage); };$/;"	f	class:StorageBinList
Get_pp_assemblage	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_pp_assemblage(void)const { return(this->pp_assemblage); };$/;"	f	class:StorageBinList
Get_pp_assemblage	phreeqcpp/dumper.h	/^	std::set < int > & Get_pp_assemblage(void)	{ return(this->binList.Get_pp_assemblage().Get_numbers()); };$/;"	f	class:dumper
Get_pp_assemblage_comps	phreeqcpp/PPassemblage.h	/^	const std::map <std::string, cxxPPassemblageComp > & Get_pp_assemblage_comps() const$/;"	f	class:cxxPPassemblage
Get_pp_assemblage_comps	phreeqcpp/PPassemblage.h	/^	std::map <std::string, cxxPPassemblageComp > & Get_pp_assemblage_comps() $/;"	f	class:cxxPPassemblage
Get_pp_assemblage_in	phreeqcpp/Use.h	/^	bool Get_pp_assemblage_in(void) const {return this->pp_assemblage_in;}$/;"	f	class:cxxUse
Get_pp_assemblage_ptr	phreeqcpp/Use.h	/^	cxxPPassemblage * Get_pp_assemblage_ptr(void) const      {return this->pp_assemblage_ptr;}$/;"	f	class:cxxUse
Get_pr_in	phreeqcpp/GasPhase.h	/^	bool Get_pr_in(void) const {return pr_in;};$/;"	f	class:cxxGasPhase
Get_precipitate_only	phreeqcpp/PPassemblageComp.h	/^	bool Get_precipitate_only() const {return this->precipitate_only;}$/;"	f	class:cxxPPassemblageComp
Get_pressure	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_pressure(void)      { return(this->pressure); };$/;"	f	class:StorageBinList
Get_pressure	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_pressure(void)const      { return(this->pressure); };$/;"	f	class:StorageBinList
Get_pressure	phreeqcpp/dumper.h	/^	std::set < int > & Get_pressure(void)		{ return(this->binList.Get_pressure().Get_numbers()); };$/;"	f	class:dumper
Get_pressure_in	phreeqcpp/Use.h	/^	bool Get_pressure_in(void) const      {return this->pressure_in;}$/;"	f	class:cxxUse
Get_pressure_ptr	phreeqcpp/Use.h	/^	cxxPressure * Get_pressure_ptr(void) const               {return this->pressure_ptr;}$/;"	f	class:cxxUse
Get_pressures	phreeqcpp/Pressure.h	/^	const std::vector<LDBLE> & Get_pressures(void)const {return pressures;}$/;"	f	class:cxxPressure
Get_pressures	phreeqcpp/Pressure.h	/^	std::vector<LDBLE> & Get_pressures(void) {return pressures;}$/;"	f	class:cxxPressure
Get_prev_advection_step	phreeqcpp/ChartObject.h	/^	int Get_prev_advection_step()const$/;"	f	class:ChartObject
Get_prev_sim_no	phreeqcpp/ChartObject.h	/^	int Get_prev_sim_no(void)const$/;"	f	class:ChartObject
Get_prev_transport_step	phreeqcpp/ChartObject.h	/^	int Get_prev_transport_step()const$/;"	f	class:ChartObject
Get_psi_to_z	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_psi_to_z(void) const {return psi_to_z;}$/;"	f	class:cxxSurfDL
Get_punch_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_punch_on(void)							{return this->punch_on;}$/;"	f	class:PHRQ_io
Get_punch_ostream	phreeqcpp/SelectedOutput.h	/^	inline const std::ostream* Get_punch_ostream(void)const           {return this->punch_ostream;}$/;"	f	class:SelectedOutput
Get_punch_ostream	phreeqcpp/SelectedOutput.h	/^	inline std::ostream* Get_punch_ostream(void)                      {return this->punch_ostream;}$/;"	f	class:SelectedOutput
Get_punch_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *Get_punch_ostream(void)			{return this->punch_ostream;}$/;"	f	class:PHRQ_io
Get_pure_phases	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_pure_phases(void)const      {return this->pure_phases;}$/;"	f	class:SelectedOutput
Get_pure_phases	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_pure_phases(void)      {return this->pure_phases;}$/;"	f	class:SelectedOutput
Get_rate	phreeqcpp/UserPunch.h	/^	const struct rate * Get_rate()const {return this->rate;}$/;"	f	class:UserPunch
Get_rate	phreeqcpp/UserPunch.h	/^	struct rate * Get_rate() {return this->rate;}$/;"	f	class:UserPunch
Get_rate_command_list	phreeqcpp/ChartObject.h	/^	const std::list<std::string> &Get_rate_command_list()const$/;"	f	class:ChartObject
Get_rate_command_list	phreeqcpp/ChartObject.h	/^	std::list<std::string> &Get_rate_command_list()$/;"	f	class:ChartObject
Get_rate_command_list_original	phreeqcpp/ChartObject.h	/^	const std::list<std::string>& Get_rate_command_list_original()const$/;"	f	class:ChartObject
Get_rate_name	phreeqcpp/ExchComp.h	/^	const std::string &Get_rate_name() const$/;"	f	class:cxxExchComp
Get_rate_name	phreeqcpp/KineticsComp.h	/^	const std::string &Get_rate_name() const$/;"	f	class:cxxKineticsComp
Get_rate_name	phreeqcpp/SurfaceComp.h	/^	const std::string &Get_rate_name() const {return this->rate_name;}$/;"	f	class:cxxSurfaceComp
Get_rate_new_def	phreeqcpp/ChartObject.h	/^	bool Get_rate_new_def()const$/;"	f	class:ChartObject
Get_ratio	phreeqcpp/SolutionIsotope.h	/^	LDBLE Get_ratio() const	            {return this->ratio;}$/;"	f	class:cxxSolutionIsotope
Get_ratio_uncertainty	phreeqcpp/SolutionIsotope.h	/^	LDBLE Get_ratio_uncertainty() const	{return this->ratio_uncertainty;}$/;"	f	class:cxxSolutionIsotope
Get_ratio_uncertainty_defined	phreeqcpp/SolutionIsotope.h	/^	bool Get_ratio_uncertainty_defined() const  {return this->ratio_uncertainty_defined;}$/;"	f	class:cxxSolutionIsotope
Get_reactantList	phreeqcpp/Reaction.h	/^	const cxxNameDouble &Get_reactantList(void)const {return this->reactantList;}$/;"	f	class:cxxReaction
Get_reactantList	phreeqcpp/Reaction.h	/^	cxxNameDouble &Get_reactantList(void) {return this->reactantList;}$/;"	f	class:cxxReaction
Get_reaction	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_reaction(void)      { return(this->reaction); };$/;"	f	class:StorageBinList
Get_reaction	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_reaction(void)const      { return(this->reaction); };$/;"	f	class:StorageBinList
Get_reaction	phreeqcpp/dumper.h	/^	std::set < int > & Get_reaction(void)		{ return(this->binList.Get_reaction().Get_numbers()); };$/;"	f	class:dumper
Get_reaction_in	phreeqcpp/Use.h	/^	bool Get_reaction_in(void) const      {return this->reaction_in;}$/;"	f	class:cxxUse
Get_reaction_ptr	phreeqcpp/Use.h	/^	cxxReaction * Get_reaction_ptr(void) const               {return this->reaction_ptr;}$/;"	f	class:cxxUse
Get_reaction_steps	phreeqcpp/Reaction.cxx	/^Get_reaction_steps(void) const$/;"	f	class:cxxReaction
Get_reaction_steps	phreeqcpp/cxxKinetics.cxx	/^Get_reaction_steps(void) const$/;"	f	class:cxxKinetics
Get_related_phases	phreeqcpp/Exchange.cxx	/^cxxExchange::Get_related_phases() const$/;"	f	class:cxxExchange
Get_related_phases	phreeqcpp/Surface.cxx	/^cxxSurface::Get_related_phases() const$/;"	f	class:cxxSurface
Get_related_rate	phreeqcpp/Exchange.cxx	/^cxxExchange::Get_related_rate() const$/;"	f	class:cxxExchange
Get_related_rate	phreeqcpp/Surface.cxx	/^cxxSurface::Get_related_rate() const$/;"	f	class:cxxSurface
Get_rk	phreeqcpp/cxxKinetics.h	/^	int Get_rk(void) const {return rk;};$/;"	f	class:cxxKinetics
Get_run_cells	phreeqcpp/runner.h	/^	bool Get_run_cells() { return(this->run_cells); };$/;"	f	class:runner
Get_rxn	phreeqcpp/SelectedOutput.h	/^	inline bool Get_rxn(void)const                                    {return this->rxn;}$/;"	f	class:SelectedOutput
Get_s_s	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_s_s(void)const              {return this->s_s;}$/;"	f	class:SelectedOutput
Get_s_s	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_s_s(void)              {return this->s_s;}$/;"	f	class:SelectedOutput
Get_screen_on	phreeqcpp/common/PHRQ_io.h	/^	bool Get_screen_on(void)						{return this->screen_on;};$/;"	f	class:PHRQ_io
Get_secondary_y	phreeqcpp/ChartObject.h	/^	const std::map<int, bool> &Get_secondary_y()const$/;"	f	class:ChartObject
Get_secondary_y	phreeqcpp/ChartObject.h	/^	std::map<int, bool> &Get_secondary_y()$/;"	f	class:ChartObject
Get_si	phreeqcpp/PPassemblageComp.h	/^	LDBLE Get_si() const {return this->si;}$/;"	f	class:cxxPPassemblageComp
Get_si	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_si(void)const               {return this->si;}$/;"	f	class:SelectedOutput
Get_si	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_si(void)               {return this->si;}$/;"	f	class:SelectedOutput
Get_si_org	phreeqcpp/PPassemblageComp.h	/^	LDBLE Get_si_org() const {return this->si_org;}$/;"	f	class:cxxPPassemblageComp
Get_sigma0	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_sigma0() const {return this->sigma0;}$/;"	f	class:cxxSurfaceCharge
Get_sigma1	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_sigma1() const {return this->sigma1;}$/;"	f	class:cxxSurfaceCharge
Get_sigma2	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_sigma2() const {return this->sigma2;}$/;"	f	class:cxxSurfaceCharge
Get_sigmaddl	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_sigmaddl() const {return this->sigmaddl;}$/;"	f	class:cxxSurfaceCharge
Get_sim	phreeqcpp/SelectedOutput.h	/^	inline bool Get_sim(void)const                                    {return this->sim;}$/;"	f	class:SelectedOutput
Get_sites_units	phreeqcpp/Surface.h	/^	SITES_UNITS Get_sites_units(void) const {return sites_units;}$/;"	f	class:cxxSurface
Get_soln	phreeqcpp/SelectedOutput.h	/^	inline bool Get_soln(void)const                                   {return this->soln;}$/;"	f	class:SelectedOutput
Get_soln_vol	phreeqcpp/Solution.h	/^	LDBLE Get_soln_vol() const                          {return this->soln_vol;}$/;"	f	class:cxxSolution
Get_solution	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_solution(void)      { return(this->solution); };$/;"	f	class:StorageBinList
Get_solution	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_solution(void)const      { return(this->solution); };$/;"	f	class:StorageBinList
Get_solution	phreeqcpp/dumper.h	/^	std::set < int > & Get_solution(void)		{ return(this->binList.Get_solution().Get_numbers()); };$/;"	f	class:dumper
Get_solution_equilibria	phreeqcpp/Exchange.h	/^	bool Get_solution_equilibria(void) const {return this->solution_equilibria;}$/;"	f	class:cxxExchange
Get_solution_equilibria	phreeqcpp/GasPhase.h	/^	bool Get_solution_equilibria(void) const {return this->solution_equilibria;};$/;"	f	class:cxxGasPhase
Get_solution_equilibria	phreeqcpp/Surface.h	/^	bool Get_solution_equilibria(void)const {return solution_equilibria;}$/;"	f	class:cxxSurface
Get_solution_in	phreeqcpp/Use.h	/^	bool Get_solution_in(void) const      {return this->solution_in;}$/;"	f	class:cxxUse
Get_solution_ptr	phreeqcpp/Use.h	/^	cxxSolution * Get_solution_ptr(void) const               {return this->solution_ptr;}$/;"	f	class:cxxUse
Get_species_gamma	phreeqcpp/Solution.h	/^	cxxNameDouble & Get_species_gamma(void)             {return this->species_gamma;}$/;"	f	class:cxxSolution
Get_species_map	phreeqcpp/Solution.h	/^	std::map<int, double> & Get_species_map(void)       {return this->species_map;}$/;"	f	class:cxxSolution
Get_specific_area	phreeqcpp/SurfaceCharge.h	/^	LDBLE Get_specific_area() const {return this->specific_area;}$/;"	f	class:cxxSurfaceCharge
Get_spinodal	phreeqcpp/SS.h	/^	bool Get_spinodal() const {return (this->spinodal);}$/;"	f	class:cxxSS
Get_ss_assemblage	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_ss_assemblage(void) { return(this->ss_assemblage); };$/;"	f	class:StorageBinList
Get_ss_assemblage	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_ss_assemblage(void)const { return(this->ss_assemblage); };$/;"	f	class:StorageBinList
Get_ss_assemblage	phreeqcpp/dumper.h	/^	std::set < int > & Get_ss_assemblage(void)  { return(this->binList.Get_ss_assemblage().Get_numbers()); };$/;"	f	class:dumper
Get_ss_assemblage_in	phreeqcpp/Use.h	/^	bool Get_ss_assemblage_in(void) const {return this->ss_assemblage_in;}$/;"	f	class:cxxUse
Get_ss_assemblage_ptr	phreeqcpp/Use.h	/^	cxxSSassemblage * Get_ss_assemblage_ptr(void)            {return this->ss_assemblage_ptr;}$/;"	f	class:cxxUse
Get_ss_comps	phreeqcpp/SS.h	/^	const std::vector<cxxSScomp> & Get_ss_comps(void)const {return ss_comps;}$/;"	f	class:cxxSS
Get_ss_comps	phreeqcpp/SS.h	/^	std::vector<cxxSScomp> & Get_ss_comps(void) {return ss_comps;}$/;"	f	class:cxxSS
Get_ss_in	phreeqcpp/SS.h	/^	bool Get_ss_in() const {return (this->ss_in);}$/;"	f	class:cxxSS
Get_start_time	phreeqcpp/runner.h	/^	LDBLE Get_start_time() { return(this->start_time); };$/;"	f	class:runner
Get_state	phreeqcpp/SelectedOutput.h	/^	inline bool Get_state(void)const                                  {return this->state;}$/;"	f	class:SelectedOutput
Get_step	phreeqcpp/SelectedOutput.h	/^	inline bool Get_step(void)const                                   {return this->step;}$/;"	f	class:SelectedOutput
Get_step_divide	phreeqcpp/cxxKinetics.h	/^	LDBLE Get_step_divide(void) const {return step_divide;}$/;"	f	class:cxxKinetics
Get_steps	phreeqcpp/Reaction.h	/^	const std::vector < LDBLE > &Get_steps(void)const {return this->steps;}$/;"	f	class:cxxReaction
Get_steps	phreeqcpp/Reaction.h	/^	std::vector < LDBLE > &Get_steps(void) {return this->steps;}$/;"	f	class:cxxReaction
Get_steps	phreeqcpp/cxxKinetics.h	/^	const std::vector < LDBLE > &Get_steps(void)const {return steps;}$/;"	f	class:cxxKinetics
Get_steps	phreeqcpp/cxxKinetics.h	/^	std::vector < LDBLE > &Get_steps(void) {return steps;}$/;"	f	class:cxxKinetics
Get_surface	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_surface(void)       { return(this->surface); };$/;"	f	class:StorageBinList
Get_surface	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_surface(void)const       { return(this->surface); };$/;"	f	class:StorageBinList
Get_surface	phreeqcpp/dumper.h	/^	std::set < int > & Get_surface(void)		{ return(this->binList.Get_surface().Get_numbers()); };$/;"	f	class:dumper
Get_surface_charges	phreeqcpp/Surface.h	/^	std::vector < cxxSurfaceCharge > & Get_surface_charges() {return this->surface_charges;}$/;"	f	class:cxxSurface
Get_surface_comps	phreeqcpp/Surface.h	/^	const std::vector < cxxSurfaceComp > & Get_surface_comps()const {return this->surface_comps;}$/;"	f	class:cxxSurface
Get_surface_comps	phreeqcpp/Surface.h	/^	std::vector < cxxSurfaceComp > & Get_surface_comps() {return this->surface_comps;}$/;"	f	class:cxxSurface
Get_surface_in	phreeqcpp/Use.h	/^	bool Get_surface_in(void) const       {return this->surface_in;}$/;"	f	class:cxxUse
Get_surface_ptr	phreeqcpp/Use.h	/^	cxxSurface * Get_surface_ptr(void) const                 {return this->surface_ptr;}$/;"	f	class:cxxUse
Get_symbol	phreeqcpp/CurveObject.h	/^	std::string &Get_symbol(void)$/;"	f	class:CurveObject
Get_symbol_size	phreeqcpp/CurveObject.h	/^	LDBLE Get_symbol_size(void)$/;"	f	class:CurveObject
Get_system	phreeqcpp/StorageBin.h	/^	cxxSystem & Get_system(void) {return system;};$/;"	f	class:cxxStorageBin
Get_tc	phreeqcpp/Solution.h	/^	LDBLE Get_tc() const      {return this->tc;}$/;"	f	class:cxxSolution
Get_temp	phreeqcpp/SelectedOutput.h	/^	inline bool Get_temp(void)const                                   {return this->temp;}$/;"	f	class:SelectedOutput
Get_temperature	phreeqcpp/GasPhase.h	/^	LDBLE Get_temperature(void)const {return temperature;};$/;"	f	class:cxxGasPhase
Get_temperature	phreeqcpp/StorageBinList.h	/^	StorageBinListItem & Get_temperature(void)   { return(this->temperature); };$/;"	f	class:StorageBinList
Get_temperature	phreeqcpp/StorageBinList.h	/^	const StorageBinListItem & Get_temperature(void)const   { return(this->temperature); };$/;"	f	class:StorageBinList
Get_temperature	phreeqcpp/dumper.h	/^	std::set < int > & Get_temperature(void)	{ return(this->binList.Get_temperature().Get_numbers()); };$/;"	f	class:dumper
Get_temperature_in	phreeqcpp/Use.h	/^	bool Get_temperature_in(void) const   {return this->temperature_in;}$/;"	f	class:cxxUse
Get_temperature_ptr	phreeqcpp/Use.h	/^	cxxTemperature * Get_temperature_ptr(void) const         {return this->temperature_ptr;}$/;"	f	class:cxxUse
Get_temps	phreeqcpp/Temperature.h	/^	const std::vector<LDBLE> & Get_temps(void)const {return temps;}$/;"	f	class:cxxTemperature
Get_temps	phreeqcpp/Temperature.h	/^	std::vector<LDBLE> & Get_temps(void) {return temps;}$/;"	f	class:cxxTemperature
Get_thickness	phreeqcpp/Surface.h	/^	LDBLE Get_thickness(void) const {return thickness;}$/;"	f	class:cxxSurface
Get_time	phreeqcpp/SelectedOutput.h	/^	inline bool Get_time(void)const                                   {return this->time;}$/;"	f	class:SelectedOutput
Get_time_step	phreeqcpp/runner.h	/^	LDBLE Get_time_step() { return(this->time_step); };$/;"	f	class:runner
Get_timer	phreeqcpp/ChartHandler.h	/^	bool Get_timer()$/;"	f	class:ChartHandler
Get_tk	phreeqcpp/SS.h	/^	LDBLE Get_tk(void)const {return this->tk;}$/;"	f	class:cxxSS
Get_tokens	phreeqcpp/global_structures.h	/^	std::vector<struct rxn_token> &Get_tokens(void) {return this->tokens;}$/;"	f	class:cxxChemRxn
Get_tol	phreeqcpp/KineticsComp.h	/^	LDBLE Get_tol(void) const {return tol;}	$/;"	f	class:cxxKineticsComp
Get_total	phreeqcpp/Solution.cxx	/^cxxSolution::Get_total(const char *string) const$/;"	f	class:cxxSolution
Get_total	phreeqcpp/SolutionIsotope.h	/^	LDBLE Get_total() const	{return this->total;}$/;"	f	class:cxxSolutionIsotope
Get_total_alkalinity	phreeqcpp/Solution.h	/^	LDBLE Get_total_alkalinity() const                  {return this->total_alkalinity;}$/;"	f	class:cxxSolution
Get_total_element	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::Get_total_element(const char *string) const$/;"	f	class:cxxNameDouble
Get_total_element	phreeqcpp/Solution.cxx	/^cxxSolution::Get_total_element(const char *string) const$/;"	f	class:cxxSolution
Get_total_h	phreeqcpp/Solution.h	/^	LDBLE Get_total_h() const                           {return this->total_h;}$/;"	f	class:cxxSolution
Get_total_moles	phreeqcpp/GasPhase.h	/^	LDBLE Get_total_moles(void)const {return total_moles;};$/;"	f	class:cxxGasPhase
Get_total_moles	phreeqcpp/SS.h	/^	LDBLE Get_total_moles(void) const {return total_moles;}$/;"	f	class:cxxSS
Get_total_o	phreeqcpp/Solution.h	/^	LDBLE Get_total_o() const                           {return this->total_o;}$/;"	f	class:cxxSolution
Get_total_p	phreeqcpp/GasPhase.h	/^	LDBLE Get_total_p(void) const {return total_p;};$/;"	f	class:cxxGasPhase
Get_totals	phreeqcpp/ExchComp.h	/^	const cxxNameDouble & Get_totals()const {return (this->totals);}$/;"	f	class:cxxExchComp
Get_totals	phreeqcpp/ExchComp.h	/^	cxxNameDouble & Get_totals() {return (this->totals);}$/;"	f	class:cxxExchComp
Get_totals	phreeqcpp/Exchange.cxx	/^cxxExchange::Get_totals() const$/;"	f	class:cxxExchange
Get_totals	phreeqcpp/GasPhase.h	/^	const cxxNameDouble & Get_totals() const$/;"	f	class:cxxGasPhase
Get_totals	phreeqcpp/GasPhase.h	/^	cxxNameDouble & Get_totals(void) {return totals;};$/;"	f	class:cxxGasPhase
Get_totals	phreeqcpp/PPassemblageComp.h	/^	const cxxNameDouble & Get_totals() const {return (this->totals);}$/;"	f	class:cxxPPassemblageComp
Get_totals	phreeqcpp/PPassemblageComp.h	/^	void Get_totals(cxxNameDouble & nd) {this->totals = nd;}$/;"	f	class:cxxPPassemblageComp
Get_totals	phreeqcpp/SS.h	/^	const cxxNameDouble & Get_totals() const$/;"	f	class:cxxSS
Get_totals	phreeqcpp/SSassemblage.h	/^	const cxxNameDouble & Get_totals() const {return this->totals;}$/;"	f	class:cxxSSassemblage
Get_totals	phreeqcpp/SelectedOutput.h	/^	inline const std::vector< std::pair< std::string, void * > > & Get_totals(void)const           {return this->totals;}$/;"	f	class:SelectedOutput
Get_totals	phreeqcpp/SelectedOutput.h	/^	inline std::vector< std::pair< std::string, void * > > & Get_totals(void)           {return this->totals;}$/;"	f	class:SelectedOutput
Get_totals	phreeqcpp/Solution.h	/^	const cxxNameDouble & Get_totals(void)const         {return this->totals;}$/;"	f	class:cxxSolution
Get_totals	phreeqcpp/Solution.h	/^	cxxNameDouble & Get_totals(void)                    {return this->totals;}$/;"	f	class:cxxSolution
Get_totals	phreeqcpp/Surface.h	/^	cxxNameDouble & Get_totals() {return this->totals;}$/;"	f	class:cxxSurface
Get_totals	phreeqcpp/Surface.h	/^	void Get_totals(cxxNameDouble &nd) {this->totals = nd;}$/;"	f	class:cxxSurface
Get_totals	phreeqcpp/SurfaceComp.h	/^	cxxNameDouble & Get_totals() {return (this->totals);}$/;"	f	class:cxxSurfaceComp
Get_totals	phreeqcpp/cxxKinetics.h	/^	cxxNameDouble & Get_totals(void) {return this->totals;}$/;"	f	class:cxxKinetics
Get_trans_in	phreeqcpp/Use.h	/^	bool Get_trans_in(void) const         {return this->trans_in;}$/;"	f	class:cxxUse
Get_transport	phreeqcpp/Surface.h	/^	bool Get_transport(void) const {return transport;}$/;"	f	class:cxxSurface
Get_type	phreeqcpp/GasPhase.h	/^	GP_TYPE Get_type(void) const {return type;};$/;"	f	class:cxxGasPhase
Get_type	phreeqcpp/Surface.h	/^	SURFACE_TYPE Get_type(void) const {return this->type;}$/;"	f	class:cxxSurface
Get_units	phreeqcpp/ISolution.h	/^	std::string Get_units() const                     {return units;}$/;"	f	class:cxxISolution
Get_units	phreeqcpp/ISolutionComp.h	/^	std::string Get_units()const$/;"	f	class:cxxISolutionComp
Get_units	phreeqcpp/Reaction.h	/^	const std::string &Get_units(void) const {return this->units;}$/;"	f	class:cxxReaction
Get_update_time_chart	phreeqcpp/ChartObject.h	/^	int Get_update_time_chart()const$/;"	f	class:ChartObject
Get_use_cvode	phreeqcpp/cxxKinetics.h	/^	bool Get_use_cvode(void) const {return use_cvode;}$/;"	f	class:cxxKinetics
Get_user_graph	phreeqcpp/ChartObject.h	/^	const struct rate *Get_user_graph()const$/;"	f	class:ChartObject
Get_user_graph	phreeqcpp/ChartObject.h	/^	struct rate *Get_user_graph()$/;"	f	class:ChartObject
Get_user_punch	phreeqcpp/SelectedOutput.h	/^	inline bool Get_user_punch(void)const                             {return this->user_punch;}$/;"	f	class:SelectedOutput
Get_user_punch_new_def	phreeqcpp/SelectedOutput.h	/^	inline bool Get_user_punch_new_def(void)const                     {return this->user_punch_new_def;}$/;"	f	class:SelectedOutput
Get_v_m	phreeqcpp/GasPhase.h	/^	LDBLE Get_v_m(void) const {return v_m;};$/;"	f	class:cxxGasPhase
Get_volume	phreeqcpp/GasPhase.h	/^	LDBLE Get_volume(void) const {return volume;};$/;"	f	class:cxxGasPhase
Get_water	phreeqcpp/SelectedOutput.h	/^	inline bool Get_water(void)const                                  {return this->water;}$/;"	f	class:SelectedOutput
Get_x	phreeqcpp/CurveObject.h	/^	std::vector<LDBLE> & Get_x()$/;"	f	class:CurveObject
Get_x_ratio_uncertainty	phreeqcpp/SolutionIsotope.h	/^	LDBLE Get_x_ratio_uncertainty() const	{return this->x_ratio_uncertainty;}$/;"	f	class:cxxSolutionIsotope
Get_xb1	phreeqcpp/SS.h	/^	LDBLE Get_xb1() const {return (this->xb1);}$/;"	f	class:cxxSS
Get_xb2	phreeqcpp/SS.h	/^	LDBLE Get_xb2() const {return (this->xb2);}$/;"	f	class:cxxSS
Get_y	phreeqcpp/CurveObject.h	/^	std::vector<LDBLE> & Get_y()$/;"	f	class:CurveObject
Get_y_axis	phreeqcpp/CurveObject.h	/^	int Get_y_axis()$/;"	f	class:CurveObject
H0	phreeqcpp/cvode.h	/^	{ H0, HMAX, HMIN,$/;"	e	enum:__anon12
H2O	phreeqcpp/global_structures.h	/^#define H2O /;"	d
HALF	phreeqcpp/cvode.cpp	/^#define HALF /;"	d	file:
HALF	phreeqcpp/nvector_serial.cpp	/^#define HALF /;"	d	file:
HAVE_FINITE	phreeqcpp/Phreeqc.h	/^#    define HAVE_FINITE$/;"	d
HAVE_FINITE	phreeqcpp/Phreeqc.h	/^#  define HAVE_FINITE$/;"	d
HCUR	phreeqcpp/cvode.h	/^		HU, HCUR, TCUR, TOLSF$/;"	e	enum:__anon12
HEADERS	Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HLB_FACTOR	phreeqcpp/cvode.cpp	/^#define HLB_FACTOR /;"	d	file:
HMAX	phreeqcpp/cvode.h	/^	{ H0, HMAX, HMIN,$/;"	e	enum:__anon12
HMAX_INV_DEFAULT	phreeqcpp/cvode.cpp	/^#define HMAX_INV_DEFAULT /;"	d	file:
HMIN	phreeqcpp/cvode.h	/^	{ H0, HMAX, HMIN,$/;"	e	enum:__anon12
HMIN_DEFAULT	phreeqcpp/cvode.cpp	/^#define HMIN_DEFAULT /;"	d	file:
HPLUS	phreeqcpp/global_structures.h	/^#define HPLUS /;"	d
HU	phreeqcpp/cvode.h	/^		HU, HCUR, TCUR, TOLSF$/;"	e	enum:__anon12
HUB_FACTOR	phreeqcpp/cvode.cpp	/^#define HUB_FACTOR /;"	d	file:
HUN	phreeqcpp/cvode.cpp	/^#define HUN /;"	d	file:
H_BIAS	phreeqcpp/cvode.cpp	/^#define H_BIAS /;"	d	file:
HashAccesses	phreeqcpp/utilities.cpp	/^ long HashAccesses, HashCollisions;$/;"	v
HashCollisions	phreeqcpp/utilities.cpp	/^ long HashAccesses, HashCollisions;$/;"	v
HashTable	phreeqcpp/global_structures.h	/^} HashTable;$/;"	t	typeref:struct:__anon19
Hash_multi	phreeqcpp/utilities.cpp	/^Hash_multi(HashTable * Table, const char *Key)$/;"	f	class:Phreeqc
IC	phreeqcpp/Phreeqc.h	/^	int full_pitzer, always_full_pitzer, ICON, IC;$/;"	m	class:Phreeqc
ICON	phreeqcpp/Phreeqc.h	/^	int full_pitzer, always_full_pitzer, ICON, IC;$/;"	m	class:Phreeqc
IDErr	phreeqcpp/PBasic.h	/^	enum IDErr$/;"	g	class:PBasic
IDS_ERR_ARRAY_ALREADY	phreeqcpp/PBasic.h	/^		IDS_ERR_ARRAY_ALREADY,$/;"	e	enum:PBasic::IDErr
IDS_ERR_BAD_SUBSCRIPT	phreeqcpp/PBasic.h	/^		IDS_ERR_BAD_SUBSCRIPT,$/;"	e	enum:PBasic::IDErr
IDS_ERR_EXTRA	phreeqcpp/PBasic.h	/^		IDS_ERR_EXTRA,$/;"	e	enum:PBasic::IDErr
IDS_ERR_FOR_WO_NEXT	phreeqcpp/PBasic.h	/^		IDS_ERR_FOR_WO_NEXT,$/;"	e	enum:PBasic::IDErr
IDS_ERR_ILLEGAL	phreeqcpp/PBasic.h	/^		IDS_ERR_ILLEGAL,$/;"	e	enum:PBasic::IDErr
IDS_ERR_INFINITE_LOOP	phreeqcpp/PBasic.h	/^		IDS_ERR_INFINITE_LOOP,$/;"	e	enum:PBasic::IDErr
IDS_ERR_INPUT_NOTLEGAL	phreeqcpp/PBasic.h	/^		IDS_ERR_INPUT_NOTLEGAL,$/;"	e	enum:PBasic::IDErr
IDS_ERR_MISMATCH	phreeqcpp/PBasic.h	/^		IDS_ERR_MISMATCH,$/;"	e	enum:PBasic::IDErr
IDS_ERR_MISSING_Q	phreeqcpp/PBasic.h	/^		IDS_ERR_MISSING_Q,$/;"	e	enum:PBasic::IDErr
IDS_ERR_MISSING_RP	phreeqcpp/PBasic.h	/^		IDS_ERR_MISSING_RP,$/;"	e	enum:PBasic::IDErr
IDS_ERR_NEXT_WO_FOR	phreeqcpp/PBasic.h	/^		IDS_ERR_NEXT_WO_FOR,$/;"	e	enum:PBasic::IDErr
IDS_ERR_OUT_OF_DATA	phreeqcpp/PBasic.h	/^		IDS_ERR_OUT_OF_DATA,$/;"	e	enum:PBasic::IDErr
IDS_ERR_RETURN_WO_GOSUB	phreeqcpp/PBasic.h	/^		IDS_ERR_RETURN_WO_GOSUB,$/;"	e	enum:PBasic::IDErr
IDS_ERR_SYNTAX	phreeqcpp/PBasic.h	/^		IDS_ERR_SYNTAX,$/;"	e	enum:PBasic::IDErr
IDS_ERR_UNDEF_LINE	phreeqcpp/PBasic.h	/^		IDS_ERR_UNDEF_LINE,$/;"	e	enum:PBasic::IDErr
IDS_ERR_WEND_WO_WHILE	phreeqcpp/PBasic.h	/^		IDS_ERR_WEND_WO_WHILE,$/;"	e	enum:PBasic::IDErr
IDS_ERR_WHILE_WO_WEND	phreeqcpp/PBasic.h	/^		IDS_ERR_WHILE_WO_WEND$/;"	e	enum:PBasic::IDErr
ID_TAG_S	phreeqcpp/nvector_serial.h	/^#define ID_TAG_S /;"	d
IErrorReporter	ErrorReporter.hxx	/^class IErrorReporter$/;"	c
IJth	phreeqcpp/kinetics.cpp	/^#define IJth(/;"	d	file:
ILL_INPUT	phreeqcpp/cvode.h	/^	{ SUCCESS = 0, CVODE_NO_MEM = -1, ILL_INPUT = -2, TOO_MUCH_WORK = -3,$/;"	e	enum:__anon9
INACTIVE_CELL_VALUE	CSelectedOutput.cpp	/^const float INACTIVE_CELL_VALUE = 1.0e30f;$/;"	v
INCLUDE_PHRQALLOC_H	phreeqcpp/phqalloc.cpp	/^#define INCLUDE_PHRQALLOC_H$/;"	d	file:
INCLUDE_PHRQALLOC_H	phreeqcpp/phqalloc.h	/^#define INCLUDE_PHRQALLOC_H$/;"	d
INC_CVAR_HXX	CVar.hxx	/^#define INC_CVAR_HXX$/;"	d
INC_IPHREEQC_H	IPhreeqc.h	/^#define INC_IPHREEQC_H$/;"	d
INC_IPHREEQC_HPP	IPhreeqc.hpp	/^#define INC_IPHREEQC_HPP$/;"	d
INDENT	phreeqcpp/common/Utils.h	/^	const char INDENT[] = "  ";$/;"	m	namespace:Utilities
INIT	phreeqcpp/global_structures.h	/^#define INIT /;"	d
INITIALIZE	phreeqcpp/global_structures.h	/^#define INITIALIZE	/;"	d
INITIAL_EXCHANGE	phreeqcpp/global_structures.h	/^#define INITIAL_EXCHANGE /;"	d
INITIAL_GAS_PHASE	phreeqcpp/global_structures.h	/^#define INITIAL_GAS_PHASE /;"	d
INITIAL_SOLUTION	phreeqcpp/global_structures.h	/^#define INITIAL_SOLUTION /;"	d
INITIAL_SURFACE	phreeqcpp/global_structures.h	/^#define INITIAL_SURFACE /;"	d
INSTALL	Makefile	/^INSTALL = \/opt\/local\/bin\/ginstall -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INVERSE	phreeqcpp/global_structures.h	/^#define INVERSE	/;"	d
IPQ_BADINSTANCE	IPhreeqc.h	/^	IPQ_BADINSTANCE   = -6   \/*!< Failure, Invalid instance id *\/$/;"	e	enum:__anon1
IPQ_BADINSTANCE	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_BADINSTANCE /;"	v	module:IPhreeqc
IPQ_BADVARTYPE	IPhreeqc.h	/^	IPQ_BADVARTYPE    = -2,  \/*!< Failure, Invalid VAR type *\/$/;"	e	enum:__anon1
IPQ_BADVARTYPE	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_BADVARTYPE /;"	v	module:IPhreeqc
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(accumulateline, ACCUMULATELINE, accumulateline_, ACCUMULATELINE_)(int *id, char *line, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(adderror, ADDERROR, adderror_, ADDERROR_)(int *id, char *error_msg, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(addwarning, ADDWARNING, addwarning_, ADDWARNING_)(int *id, char *warn_msg, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(clearaccumulatedlines, CLEARACCUMULATEDLINES, clearaccumulatedlines_, CLEARACCUMULATEDLINES_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(createiphreeqc, CREATEIPHREEQC, createiphreeqc_, CREATEIPHREEQC_)(void)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(destroyiphreeqc, DESTROYIPHREEQC, destroyiphreeqc_, DESTROYIPHREEQC_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getcomponentcount, GETCOMPONENTCOUNT, getcomponentcount_, GETCOMPONENTCOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getcurrentselectedoutputusernumber, GETCURRENTSELECTEDOUTPUTUSERNUMBER, getcurrentselectedoutputusernumber_, GETCURRENTSELECTEDOUTPUTUSERNUMBER_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getdumpfileon, GETDUMPFILEON, getdumpfileon_, GETDUMPFILEON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getdumpstringlinecount, GETDUMPSTRINGLINECOUNT, getdumpstringlinecount_, GETDUMPSTRINGLINECOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getdumpstringon, GETDUMPSTRINGON, getdumpstringon_, GETDUMPSTRINGON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(geterrorfileon, GETERRORFILEON, geterrorfileon_, GETERRORFILEON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(geterrorstringlinecount, GETERRORSTRINGLINECOUNT, geterrorstringlinecount_, GETERRORSTRINGLINECOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(geterrorstringon, GETERRORSTRINGON, geterrorstringon_, GETERRORSTRINGON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getlogfileon, GETLOGFILEON, getlogfileon_, GETLOGFILEON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getlogstringlinecount, GETLOGSTRINGLINECOUNT, getlogstringlinecount_, GETLOGSTRINGLINECOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getlogstringon, GETLOGSTRINGON, getlogstringon_, GETLOGSTRINGON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getnthselectedoutputusernumber, GETNTHSELECTEDOUTPUTUSERNUMBER, getnthselectedoutputusernumber_, GETNTHSELECTEDOUTPUTUSERNUMBER_)(int *id, int *n)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getoutputfileon, GETOUTPUTFILEON, getoutputfileon_, GETOUTPUTFILEON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getoutputstringlinecount, GETOUTPUTSTRINGLINECOUNT, getoutputstringlinecount_, GETOUTPUTSTRINGLINECOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getoutputstringon, GETOUTPUTSTRINGON, getoutputstringon_, GETOUTPUTSTRINGON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputcolumncount, GETSELECTEDOUTPUTCOLUMNCOUNT, getselectedoutputcolumncount_, GETSELECTEDOUTPUTCOLUMNCOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputcount, GETSELECTEDOUTPUTCOUNT, getselectedoutputcount_, GETSELECTEDOUTPUTCOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputfileon, GETSELECTEDOUTPUTFILEON, getselectedoutputfileon_, GETSELECTEDOUTPUTFILEON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputrowcount, GETSELECTEDOUTPUTROWCOUNT, getselectedoutputrowcount_, GETSELECTEDOUTPUTROWCOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputstringlinecount, GETSELECTEDOUTPUTSTRINGLINECOUNT, getselectedoutputstringlinecount_, GETSELECTEDOUTPUTSTRINGLINECOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputstringon, GETSELECTEDOUTPUTSTRINGON, getselectedoutputstringon_, GETSELECTEDOUTPUTSTRINGON_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getselectedoutputvalue, GETSELECTEDOUTPUTVALUE, getselectedoutputvalue_, GETSELECTEDOUTPUTVALUE_)(int *id, int *row, int *col, int *vtype, double* dvalue, char* svalue, size_t svalue_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(getwarningstringlinecount, GETWARNINGSTRINGLINECOUNT, getwarningstringlinecount_, GETWARNINGSTRINGLINECOUNT_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(loaddatabase, LOADDATABASE, loaddatabase_, LOADDATABASE_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(loaddatabasestring, LOADDATABASESTRING, loaddatabasestring_, LOADDATABASESTRING_)(int *id, char *input, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(runaccumulated, RUNACCUMULATED, runaccumulated_, RUNACCUMULATED_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(runfile, RUNFILE, runfile_, RUNFILE_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(runstring, RUNSTRING, runstring_, RUNSTRING_)(int *id, char *input, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setbasicfortrancallback, SETBASICFORTRANCALLBACK, setbasicfortrancallback_, SETBASICFORTRANCALLBACK_)(int *id, double (*fcn)(double *x1, double *x2, char *str, size_t l))$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setcurrentselectedoutputusernumber, SETCURRENTSELECTEDOUTPUTUSERNUMBER, setcurrentselectedoutputusernumber_, SETCURRENTSELECTEDOUTPUTUSERNUMBER_)(int *id, int *n)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setdumpfilename, SETDUMPFILENAME, setdumpfilename_, SETDUMPFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setdumpfileon, SETDUMPFILEON, setdumpfileon_, SETDUMPFILEON_)(int *id, int *dump_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setdumpstringon, SETDUMPSTRINGON, setdumpstringon_, SETDUMPSTRINGON_)(int *id, int *dump_string_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(seterrorfilename, SETERRORFILENAME, seterrorfilename_, SETERRORFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(seterrorfileon, SETERRORFILEON, seterrorfileon_, SETERRORFILEON_)(int *id, int *error_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(seterrorstringon, SETERRORSTRINGON, seterrorstringon_, SETERRORSTRINGON_)(int *id, int *error_string_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setlogfilename, SETLOGFILENAME, setlogfilename_, SETLOGFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setlogfileon, SETLOGFILEON, setlogfileon_, SETLOGFILEON_)(int *id, int *log_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setlogstringon, SETLOGSTRINGON, setlogstringon_, SETLOGSTRINGON_)(int *id, int *log_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setoutputfilename, SETOUTPUTFILENAME, setoutputfilename_, SETOUTPUTFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setoutputfileon, SETOUTPUTFILEON, setoutputfileon_, SETOUTPUTFILEON_)(int *id, int *output_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setoutputstringon, SETOUTPUTSTRINGON, setoutputstringon_, SETOUTPUTSTRINGON_)(int *id, int *output_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setselectedoutputfilename, SETSELECTEDOUTPUTFILENAME, setselectedoutputfilename_, SETSELECTEDOUTPUTFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setselectedoutputfileon, SETSELECTEDOUTPUTFILEON, setselectedoutputfileon_, SETSELECTEDOUTPUTFILEON_)(int *id, int *selout_file_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT int  IPQ_DECL IPQ_CASE_UND(setselectedoutputstringon, SETSELECTEDOUTPUTSTRINGON, setselectedoutputstringon_, SETSELECTEDOUTPUTSTRINGON_)(int *id, int *selout_string_on)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getcomponent, GETCOMPONENT, getcomponent_, GETCOMPONENT_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getdumpfilename, GETDUMPFILENAME, getdumpfilename_, GETDUMPFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getdumpstringline, GETDUMPSTRINGLINE, getdumpstringline_, GETDUMPSTRINGLINE_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(geterrorfilename, GETERRORFILENAME, geterrorfilename_, GETERRORFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(geterrorstringline, GETERRORSTRINGLINE, geterrorstringline_, GETERRORSTRINGLINE_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getlogfilename, GETLOGFILENAME, getlogfilename_, GETLOGFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getlogstringline, GETLOGSTRINGLINE, getlogstringline_, GETLOGSTRINGLINE_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getoutputfilename, GETOUTPUTFILENAME, getoutputfilename_, GETOUTPUTFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getoutputstringline, GETOUTPUTSTRINGLINE, getoutputstringline_, GETOUTPUTSTRINGLINE_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getselectedoutputfilename, GETSELECTEDOUTPUTFILENAME, getselectedoutputfilename_, GETSELECTEDOUTPUTFILENAME_)(int *id, char *filename, size_t len)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getselectedoutputstringline, GETSELECTEDOUTPUTSTRINGLINE, getselectedoutputstringline_, GETSELECTEDOUTPUTSTRINGLINE_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getversionstring, GETVERSIONSTRING, getversionstring_, GETVERSIONSTRING_)(char* version, size_t version_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(getwarningstringline, GETWARNINGSTRINGLINE, getwarningstringline_, GETWARNINGSTRINGLINE_)(int *id, int *n, char* line, size_t line_length)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(outputaccumulatedlines, OUTPUTACCUMULATEDLINES, outputaccumulatedlines_, OUTPUTACCUMULATEDLINES_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(outputerrorstring, OUTPUTERRORSTRING, outputerrorstring_, OUTPUTERRORSTRING_)(int *id)$/;"	f
IPQ_CASE_UND	fimpl.h	/^IPQ_DLL_EXPORT void IPQ_DECL IPQ_CASE_UND(outputwarningstring, OUTPUTWARNINGSTRING, outputwarningstring_, OUTPUTWARNINGSTRING_)(int *id)$/;"	f
IPQ_CASE_UND	fwrap1.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap2.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap3.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap4.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap5.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap6.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap7.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_CASE_UND	fwrap8.cpp	/^#define IPQ_CASE_UND(/;"	d	file:
IPQ_DECL	fwrap1.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DECL	fwrap2.cpp	/^#define IPQ_DECL$/;"	d	file:
IPQ_DECL	fwrap3.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DECL	fwrap4.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DECL	fwrap5.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DECL	fwrap6.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DECL	fwrap7.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DECL	fwrap8.cpp	/^#define IPQ_DECL /;"	d	file:
IPQ_DLL_EXPORT	IPhreeqc.hpp	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	IPhreeqc.hpp	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_DLL_EXPORT	IPhreeqc_interface_F.h	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	IPhreeqc_interface_F.h	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_DLL_EXPORT	Var.h	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	Var.h	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_DLL_EXPORT	fwrap.h	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	fwrap.h	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_DLL_EXPORT	phreeqcpp/NameDouble.h	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	phreeqcpp/NameDouble.h	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_DLL_EXPORT	phreeqcpp/common/PHRQ_base.h	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	phreeqcpp/common/PHRQ_base.h	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_DLL_EXPORT	phreeqcpp/common/PHRQ_io.h	/^#define IPQ_DLL_EXPORT /;"	d
IPQ_DLL_EXPORT	phreeqcpp/common/PHRQ_io.h	/^#define IPQ_DLL_EXPORT$/;"	d
IPQ_INVALIDARG	IPhreeqc.h	/^	IPQ_INVALIDARG    = -3,  \/*!< Failure, Invalid argument *\/$/;"	e	enum:__anon1
IPQ_INVALIDARG	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_INVALIDARG /;"	v	module:IPhreeqc
IPQ_INVALIDCOL	IPhreeqc.h	/^	IPQ_INVALIDCOL    = -5,  \/*!< Failure, Invalid column *\/$/;"	e	enum:__anon1
IPQ_INVALIDCOL	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_INVALIDCOL /;"	v	module:IPhreeqc
IPQ_INVALIDROW	IPhreeqc.h	/^	IPQ_INVALIDROW    = -4,  \/*!< Failure, Invalid row *\/$/;"	e	enum:__anon1
IPQ_INVALIDROW	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_INVALIDROW /;"	v	module:IPhreeqc
IPQ_OK	IPhreeqc.h	/^	IPQ_OK            =  0,  \/*!< Success *\/$/;"	e	enum:__anon1
IPQ_OK	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_OK /;"	v	module:IPhreeqc
IPQ_OUTOFMEMORY	IPhreeqc.h	/^	IPQ_OUTOFMEMORY   = -1,  \/*!< Failure, Out of memory *\/$/;"	e	enum:__anon1
IPQ_OUTOFMEMORY	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: IPQ_OUTOFMEMORY /;"	v	module:IPhreeqc
IPQ_RESULT	IPhreeqc.h	/^} IPQ_RESULT;$/;"	t	typeref:enum:__anon1
IPRSNT	phreeqcpp/Phreeqc.h	/^	int *IPRSNT;$/;"	m	class:Phreeqc
IPhreeqc	IPhreeqc.cpp	/^IPhreeqc::IPhreeqc(void)$/;"	f	class:IPhreeqc
IPhreeqc	IPhreeqc.hpp	/^class IPQ_DLL_EXPORT IPhreeqc : public PHRQ_io$/;"	c
IPhreeqc	IPhreeqc_interface.F90	/^MODULE IPhreeqc$/;"	m
IPhreeqcLib	IPhreeqcLib.cpp	/^class IPhreeqcLib$/;"	c	file:
IPhreeqcStop	IPhreeqc.hpp	/^class IPQ_DLL_EXPORT IPhreeqcStop : public std::exception $/;"	c
ISOLUTIONCOMP_H_INCLUDED	phreeqcpp/ISolutionComp.h	/^#define ISOLUTIONCOMP_H_INCLUDED$/;"	d
ISOLUTION_H_INCLUDED	phreeqcpp/ISolution.h	/^#define ISOLUTION_H_INCLUDED$/;"	d
ISPEC	phreeqcpp/pitzer.cpp	/^ISPEC(const char *name)$/;"	f	class:Phreeqc
Increment_active_charts	phreeqcpp/ChartHandler.h	/^	void Increment_active_charts()$/;"	f	class:ChartHandler
Index	IPhreeqc.hpp	/^	size_t Index;$/;"	m	class:IPhreeqc
Initialize	phreeqcpp/System.cxx	/^cxxSystem::Initialize(void) $/;"	f	class:cxxSystem
InitializeComponent	phreeqcpp/Form1.h	/^		void InitializeComponent()$/;"	f	class:zdg_ui2::Form1
Initialize_graph_pts	phreeqcpp/ChartObject.cpp	/^void ChartObject::Initialize_graph_pts(void)$/;"	f	class:ChartObject
Instances	IPhreeqc.cpp	/^std::map<size_t, IPhreeqc*> IPhreeqc::Instances;$/;"	m	class:IPhreeqc	file:
Instances	IPhreeqc.hpp	/^	static std::map<size_t, IPhreeqc*> Instances;$/;"	m	class:IPhreeqc
InstancesIndex	IPhreeqc.cpp	/^size_t IPhreeqc::InstancesIndex = 0;$/;"	m	class:IPhreeqc	file:
InstancesIndex	IPhreeqc.hpp	/^	static size_t InstancesIndex;$/;"	m	class:IPhreeqc
InternalClear	CVar.hxx	/^	VRESULT InternalClear()$/;"	f	class:CVar
InternalCopy	CVar.hxx	/^	void InternalCopy(const VAR* pSrc)$/;"	f	class:CVar
InternalCopy	phreeqcpp/Phreeqc.cpp	/^Phreeqc::InternalCopy(const Phreeqc *pSrc)$/;"	f	class:Phreeqc
Isspace	phreeqcpp/PBasic.cpp	/^#define Isspace(/;"	d	file:
Ith	phreeqcpp/cvode.cpp	/^#define Ith(/;"	d	file:
Ith	phreeqcpp/kinetics.cpp	/^#define Ith(/;"	d	file:
JOULES_PER_CALORIE	phreeqcpp/global_structures.h	/^#define JOULES_PER_CALORIE /;"	d
J_data	phreeqcpp/cvdense.cpp	/^#define J_data /;"	d	file:
J_ij	phreeqcpp/Phreeqc.h	/^	struct J_ij *J_ij, *J_ij_il;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::J_ij
J_ij	phreeqcpp/global_structures.h	/^struct J_ij$/;"	s
J_ij_count_spec	phreeqcpp/Phreeqc.h	/^	int J_ij_count_spec;$/;"	m	class:Phreeqc
J_ij_il	phreeqcpp/Phreeqc.h	/^	struct J_ij *J_ij, *J_ij_il;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::
J_ij_sum	phreeqcpp/Phreeqc.h	/^	LDBLE diffc_max, diffc_tr, J_ij_sum;$/;"	m	class:Phreeqc
Jac	phreeqcpp/kinetics.cpp	/^Jac(integertype N, DenseMat J, RhsFn f, void *f_data,$/;"	f	class:Phreeqc
KEYWORD	phreeqcpp/global_structures.h	/^#define KEYWORD /;"	d
KEYWORDS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		enum KEYWORDS$/;"	g	class:Keywords
KEY_ADVECTION	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_ADVECTION,$/;"	e	enum:Keywords::KEYWORDS
KEY_CALCULATE_VALUES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_CALCULATE_VALUES,$/;"	e	enum:Keywords::KEYWORDS
KEY_COPY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_COPY,$/;"	e	enum:Keywords::KEYWORDS
KEY_COUNT_KEYWORDS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_COUNT_KEYWORDS \/\/ must be last in list$/;"	e	enum:Keywords::KEYWORDS
KEY_DATABASE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_DATABASE,$/;"	e	enum:Keywords::KEYWORDS
KEY_DELETE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_DELETE,$/;"	e	enum:Keywords::KEYWORDS
KEY_DUMP	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_DUMP,$/;"	e	enum:Keywords::KEYWORDS
KEY_END	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_END,$/;"	e	enum:Keywords::KEYWORDS
KEY_EQUILIBRIUM_PHASES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EQUILIBRIUM_PHASES,$/;"	e	enum:Keywords::KEYWORDS
KEY_EQUILIBRIUM_PHASES_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EQUILIBRIUM_PHASES_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_EQUILIBRIUM_PHASES_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EQUILIBRIUM_PHASES_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_EXCHANGE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EXCHANGE,$/;"	e	enum:Keywords::KEYWORDS
KEY_EXCHANGE_MASTER_SPECIES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EXCHANGE_MASTER_SPECIES,$/;"	e	enum:Keywords::KEYWORDS
KEY_EXCHANGE_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EXCHANGE_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_EXCHANGE_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EXCHANGE_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_EXCHANGE_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EXCHANGE_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_EXCHANGE_SPECIES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_EXCHANGE_SPECIES,$/;"	e	enum:Keywords::KEYWORDS
KEY_GAS_PHASE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_GAS_PHASE,$/;"	e	enum:Keywords::KEYWORDS
KEY_GAS_PHASE_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_GAS_PHASE_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_GAS_PHASE_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_GAS_PHASE_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_GAS_PHASE_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_GAS_PHASE_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_INCREMENTAL_REACTIONS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_INCREMENTAL_REACTIONS,$/;"	e	enum:Keywords::KEYWORDS
KEY_INVERSE_MODELING	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_INVERSE_MODELING,$/;"	e	enum:Keywords::KEYWORDS
KEY_ISOTOPES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_ISOTOPES,$/;"	e	enum:Keywords::KEYWORDS
KEY_ISOTOPE_ALPHAS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_ISOTOPE_ALPHAS,$/;"	e	enum:Keywords::KEYWORDS
KEY_ISOTOPE_RATIOS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_ISOTOPE_RATIOS,$/;"	e	enum:Keywords::KEYWORDS
KEY_KINETICS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_KINETICS,$/;"	e	enum:Keywords::KEYWORDS
KEY_KINETICS_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_KINETICS_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_KINETICS_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_KINETICS_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_KINETICS_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_KINETICS_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_KNOBS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_KNOBS,$/;"	e	enum:Keywords::KEYWORDS
KEY_LLNL_AQUEOUS_MODEL_PARAMETERS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_LLNL_AQUEOUS_MODEL_PARAMETERS,$/;"	e	enum:Keywords::KEYWORDS
KEY_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_MIX_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_MIX_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_NAMED_EXPRESSIONS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_NAMED_EXPRESSIONS,$/;"	e	enum:Keywords::KEYWORDS
KEY_NONE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_NONE,$/;"	e	enum:Keywords::KEYWORDS
KEY_PHASES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_PHASES,$/;"	e	enum:Keywords::KEYWORDS
KEY_PITZER	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_PITZER,$/;"	e	enum:Keywords::KEYWORDS
KEY_PPASSEMBLAGE_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_PPASSEMBLAGE_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_PRINT	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_PRINT,$/;"	e	enum:Keywords::KEYWORDS
KEY_RATES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_RATES,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_PRESSURE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_PRESSURE,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_PRESSURE_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_PRESSURE_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_PRESSURE_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_PRESSURE_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_TEMPERATURE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_TEMPERATURE,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_TEMPERATURE_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_TEMPERATURE_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_REACTION_TEMPERATURE_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_REACTION_TEMPERATURE_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_RUN_CELLS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_RUN_CELLS,$/;"	e	enum:Keywords::KEYWORDS
KEY_SAVE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SAVE,$/;"	e	enum:Keywords::KEYWORDS
KEY_SELECTED_OUTPUT	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SELECTED_OUTPUT,$/;"	e	enum:Keywords::KEYWORDS
KEY_SIT	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SIT,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLID_SOLUTIONS	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLID_SOLUTIONS,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLID_SOLUTIONS_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLID_SOLUTIONS_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLID_SOLUTIONS_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLID_SOLUTIONS_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION_MASTER_SPECIES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION_MASTER_SPECIES,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION_SPECIES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION_SPECIES,$/;"	e	enum:Keywords::KEYWORDS
KEY_SOLUTION_SPREAD	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SOLUTION_SPREAD,$/;"	e	enum:Keywords::KEYWORDS
KEY_SSASSEMBLAGE_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SSASSEMBLAGE_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_SURFACE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SURFACE,$/;"	e	enum:Keywords::KEYWORDS
KEY_SURFACE_MASTER_SPECIES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SURFACE_MASTER_SPECIES,$/;"	e	enum:Keywords::KEYWORDS
KEY_SURFACE_MIX	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SURFACE_MIX,$/;"	e	enum:Keywords::KEYWORDS
KEY_SURFACE_MODIFY	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SURFACE_MODIFY,$/;"	e	enum:Keywords::KEYWORDS
KEY_SURFACE_RAW	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SURFACE_RAW,$/;"	e	enum:Keywords::KEYWORDS
KEY_SURFACE_SPECIES	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_SURFACE_SPECIES,$/;"	e	enum:Keywords::KEYWORDS
KEY_TITLE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_TITLE,$/;"	e	enum:Keywords::KEYWORDS
KEY_TRANSPORT	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_TRANSPORT,$/;"	e	enum:Keywords::KEYWORDS
KEY_USE	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_USE,$/;"	e	enum:Keywords::KEYWORDS
KEY_USER_GRAPH	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_USER_GRAPH,$/;"	e	enum:Keywords::KEYWORDS
KEY_USER_PRINT	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_USER_PRINT,$/;"	e	enum:Keywords::KEYWORDS
KEY_USER_PUNCH	phreeqcpp/PhreeqcKeywords/Keywords.h	/^		KEY_USER_PUNCH,$/;"	e	enum:Keywords::KEYWORDS
KINETICSCOMP_H_INCLUDED	phreeqcpp/KineticsComp.h	/^#define KINETICSCOMP_H_INCLUDED$/;"	d
KINETICS_TOL	phreeqcpp/kinetics.cpp	/^#define KINETICS_TOL /;"	d	file:
K_POLY	phreeqcpp/integrate.cpp	/^#define K_POLY /;"	d	file:
Key	phreeqcpp/global_structures.h	/^	const char *Key;$/;"	m	struct:Element
KeyCount	phreeqcpp/global_structures.h	/^	long KeyCount;				\/* current # keys       *\/$/;"	m	struct:__anon19
Keyword_name_search	phreeqcpp/PhreeqcKeywords/Keywords.cpp	/^const std::string & Keywords::Keyword_name_search(Keywords::KEYWORDS key)$/;"	f	class:Keywords
Keyword_search	phreeqcpp/PhreeqcKeywords/Keywords.cpp	/^Keywords::KEYWORDS Keywords::Keyword_search(std::string key)$/;"	f	class:Keywords
Keywords	phreeqcpp/PhreeqcKeywords/Keywords.cpp	/^Keywords::Keywords(void)$/;"	f	class:Keywords
Keywords	phreeqcpp/PhreeqcKeywords/Keywords.h	/^class Keywords$/;"	c
Kinetics	phreeqcpp/StorageBin.h	/^	std::map < int, cxxKinetics > Kinetics;$/;"	m	class:cxxStorageBin
Kinetics	phreeqcpp/global_structures.h	/^	Kinetics, Mix, Temperature, Pressure, UnKnown$/;"	e	enum:entity_type
L	phreeqcpp/cvode.cpp	/^#define L /;"	d	file:
LAST_C_KEYWORD	phreeqcpp/read.cpp	/^#define LAST_C_KEYWORD /;"	d	file:
LD	Makefile	/^LD = \/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/bin\/ld$/;"	m
LDBLE	phreeqcpp/common/phrqtype.h	/^#define LDBLE /;"	d
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LENIW	phreeqcpp/cvode.h	/^		LENRW, LENIW, SLDET, NOR$/;"	e	enum:__anon11
LENRW	phreeqcpp/cvode.h	/^		LENRW, LENIW, SLDET, NOR$/;"	e	enum:__anon11
LGAMMA	phreeqcpp/Phreeqc.h	/^	LDBLE *M, *LGAMMA;$/;"	m	class:Phreeqc
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINE_TYPE	phreeqcpp/common/PHRQ_io.h	/^	enum LINE_TYPE$/;"	g	class:PHRQ_io
LINIT_ERR	phreeqcpp/cvode.h	/^#define LINIT_ERR /;"	d
LINIT_OK	phreeqcpp/cvode.h	/^#define LINIT_OK /;"	d
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIN_ILL_INPUT	phreeqcpp/cvode.h	/^	{ LMEM_FAIL = -1, LIN_ILL_INPUT = -2 };$/;"	e	enum:__anon13
LIPO	Makefile	/^LIPO = lipo$/;"	m
LMEM_FAIL	phreeqcpp/cvode.h	/^	{ LMEM_FAIL = -1, LIN_ILL_INPUT = -2 };$/;"	e	enum:__anon13
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LOC_exec	phreeqcpp/PBasic.h	/^struct LOC_exec$/;"	s
LOG_10	phreeqcpp/Phreeqc.h	/^	LDBLE LOG_10;$/;"	m	class:Phreeqc
LOG_K_INDICES	phreeqcpp/global_structures.h	/^} LOG_K_INDICES;$/;"	t	typeref:enum:__anon16
LOG_ZERO_MOLALITY	phreeqcpp/Phreeqc.h	/^	double LOG_ZERO_MOLALITY;$/;"	m	class:Phreeqc
LONG_WAIT	phreeqcpp/cvode.cpp	/^#define LONG_WAIT /;"	d	file:
LOWER	phreeqcpp/global_structures.h	/^#define LOWER /;"	d
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTF77COMPILE	Makefile	/^LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LT_EMPTY	phreeqcpp/common/PHRQ_io.h	/^		LT_EMPTY = 2,$/;"	e	enum:PHRQ_io::LINE_TYPE
LT_EOF	phreeqcpp/common/PHRQ_io.h	/^		LT_EOF = -1,$/;"	e	enum:PHRQ_io::LINE_TYPE
LT_KEYWORD	phreeqcpp/common/PHRQ_io.h	/^		LT_KEYWORD = 3,$/;"	e	enum:PHRQ_io::LINE_TYPE
LT_OK	phreeqcpp/common/PHRQ_io.h	/^		LT_OK = 1,$/;"	e	enum:PHRQ_io::LINE_TYPE
LT_OPTION	phreeqcpp/common/PHRQ_io.h	/^		LT_OPTION = 8$/;"	e	enum:PHRQ_io::LINE_TYPE
L_MAX	phreeqcpp/cvode.h	/^#define L_MAX /;"	d
ListComponents	IPhreeqc.cpp	/^std::list< std::string > IPhreeqc::ListComponents(void)$/;"	f	class:IPhreeqc
LoadDatabase	IPhreeqc.cpp	/^int IPhreeqc::LoadDatabase(const char* filename)$/;"	f	class:IPhreeqc
LoadDatabase	IPhreeqcF.f	/^      FUNCTION LoadDatabase(/;"	f
LoadDatabase	IPhreeqcLib.cpp	/^LoadDatabase(int id, const char* filename)$/;"	f
LoadDatabase	IPhreeqc_interface.F90	/^INTEGER FUNCTION LoadDatabase(/;"	f	module:IPhreeqc
LoadDatabaseF	IPhreeqc_interface_F.cpp	/^LoadDatabaseF(int *id, char* filename)$/;"	f
LoadDatabaseF	IPhreeqc_interface_F.h	/^#define LoadDatabaseF /;"	d
LoadDatabaseF	fwrap.cpp	/^LoadDatabaseF(int *id, char* filename, size_t filename_length)$/;"	f
LoadDatabaseF	fwrap.h	/^#define LoadDatabaseF /;"	d
LoadDatabaseString	IPhreeqc.cpp	/^int IPhreeqc::LoadDatabaseString(const char* input)$/;"	f	class:IPhreeqc
LoadDatabaseString	IPhreeqcF.f	/^      FUNCTION LoadDatabaseString(/;"	f
LoadDatabaseString	IPhreeqcLib.cpp	/^LoadDatabaseString(int id, const char* input)$/;"	f
LoadDatabaseString	IPhreeqc_interface.F90	/^INTEGER FUNCTION LoadDatabaseString(/;"	f	module:IPhreeqc
LoadDatabaseStringF	IPhreeqc_interface_F.cpp	/^LoadDatabaseStringF(int *id, char* input)$/;"	f
LoadDatabaseStringF	IPhreeqc_interface_F.h	/^#define LoadDatabaseStringF /;"	d
LoadDatabaseStringF	fwrap.cpp	/^LoadDatabaseStringF(int *id, char* input, size_t input_length)$/;"	f
LoadDatabaseStringF	fwrap.h	/^#define LoadDatabaseStringF /;"	d
LogFileName	IPhreeqc.hpp	/^	std::string                LogFileName;$/;"	m	class:IPhreeqc
LogFileNameC	phreeqcpp/Phreeqc.h	/^	char *LogFileNameC;$/;"	m	class:Phreeqc
LogFileOn	IPhreeqc.hpp	/^	bool                       LogFileOn;$/;"	m	class:IPhreeqc
LogLines	IPhreeqc.hpp	/^	std::vector< std::string > LogLines;$/;"	m	class:IPhreeqc
LogString	IPhreeqc.hpp	/^	std::string                LogString;$/;"	m	class:IPhreeqc
LogStringOn	IPhreeqc.hpp	/^	bool                       LogStringOn;$/;"	m	class:IPhreeqc
LogX	phreeqcpp/Form1.h	/^			 bool LogX, LogY, LogY2;$/;"	m	class:zdg_ui2::Form1
LogY	phreeqcpp/Form1.h	/^			 bool LogX, LogY, LogY2;$/;"	m	class:zdg_ui2::Form1
LogY2	phreeqcpp/Form1.h	/^			 bool LogX, LogY, LogY2;$/;"	m	class:zdg_ui2::Form1
M	phreeqcpp/Phreeqc.h	/^	LDBLE *M, *LGAMMA;$/;"	m	class:Phreeqc
M	phreeqcpp/cvdense.cpp	/^#define M /;"	d	file:
MACHENV	phreeqcpp/cvdense.cpp	/^#define MACHENV /;"	d	file:
MACHENV	phreeqcpp/cvode.cpp	/^#define MACHENV /;"	d	file:
MACHENV_MALLOC	phreeqcpp/cvdense.cpp	/^#define MACHENV_MALLOC /;"	d	file:
MACHENV_MALLOC	phreeqcpp/cvode.cpp	/^#define MACHENV_MALLOC /;"	d	file:
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/config\/missing makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MASS_BALANCE	phreeqcpp/global_structures.h	/^#define MASS_BALANCE /;"	d
MAX	phreeqcpp/sundialsmath.h	/^#define MAX(/;"	d
MAXCATIONS	phreeqcpp/Phreeqc.h	/^	int MAXCATIONS, FIRSTANION, MAXNEUTRAL;$/;"	m	class:Phreeqc
MAXNEUTRAL	phreeqcpp/Phreeqc.h	/^	int MAXCATIONS, FIRSTANION, MAXNEUTRAL;$/;"	m	class:Phreeqc
MAXORD	phreeqcpp/cvode.h	/^	{ MAXORD, MXSTEP, MXHNIL,$/;"	e	enum:__anon11
MAX_ADD_EQUATIONS	phreeqcpp/global_structures.h	/^#define MAX_ADD_EQUATIONS /;"	d
MAX_DIVIDE	phreeqcpp/kinetics.cpp	/^#define MAX_DIVIDE /;"	d	file:
MAX_ELEMENTS	phreeqcpp/global_structures.h	/^#define MAX_ELEMENTS /;"	d
MAX_ELTS	phreeqcpp/global_structures.h	/^#define MAX_ELTS /;"	d
MAX_ITERS	phreeqcpp/cvode.cpp	/^#define MAX_ITERS /;"	d	file:
MAX_LENGTH	phreeqcpp/global_structures.h	/^#define MAX_LENGTH /;"	d
MAX_LINE	phreeqcpp/PBasic.h	/^#define MAX_LINE /;"	d
MAX_LINE	phreeqcpp/global_structures.h	/^#define MAX_LINE /;"	d
MAX_LM	phreeqcpp/global_structures.h	/^#define MAX_LM /;"	d
MAX_LOG_K_INDICES	phreeqcpp/global_structures.h	/^	MAX_LOG_K_INDICES	\/* Keep this definition at the end of the enum *\/$/;"	e	enum:__anon16
MAX_M	phreeqcpp/global_structures.h	/^#define MAX_M /;"	d
MAX_MASS_BALANCE	phreeqcpp/global_structures.h	/^#define MAX_MASS_BALANCE /;"	d
MAX_MASTER	phreeqcpp/global_structures.h	/^#define MAX_MASTER /;"	d
MAX_MODELS	phreeqcpp/inverse.cpp	/^#define MAX_MODELS /;"	d	file:
MAX_PHASES	phreeqcpp/global_structures.h	/^#define MAX_PHASES /;"	d
MAX_PP_ASSEMBLAGE	phreeqcpp/global_structures.h	/^#define MAX_PP_ASSEMBLAGE /;"	d
MAX_QUAD	phreeqcpp/integrate.cpp	/^#define MAX_QUAD /;"	d	file:
MAX_S	phreeqcpp/global_structures.h	/^#define MAX_S /;"	d
MAX_SUM_JACOB0	phreeqcpp/global_structures.h	/^#define MAX_SUM_JACOB0 /;"	d
MAX_SUM_JACOB1	phreeqcpp/global_structures.h	/^#define MAX_SUM_JACOB1 /;"	d
MAX_SUM_JACOB2	phreeqcpp/global_structures.h	/^#define MAX_SUM_JACOB2 /;"	d
MAX_SUM_MB	phreeqcpp/global_structures.h	/^#define MAX_SUM_MB /;"	d
MAX_TRXN	phreeqcpp/global_structures.h	/^#define MAX_TRXN /;"	d
MAX_UNKNOWNS	phreeqcpp/global_structures.h	/^#define MAX_UNKNOWNS /;"	d
MB	phreeqcpp/global_structures.h	/^#define MB /;"	d
ME_CONTENT_S	phreeqcpp/nvector_serial.h	/^#define ME_CONTENT_S(/;"	d
MH	phreeqcpp/global_structures.h	/^#define MH /;"	d
MH2O	phreeqcpp/global_structures.h	/^#define MH2O /;"	d
MIN	phreeqcpp/sundialsmath.h	/^#define MIN(/;"	d
MIN_INC_MULT	phreeqcpp/cvdense.cpp	/^#define MIN_INC_MULT /;"	d	file:
MIN_LM	phreeqcpp/Phreeqc.h	/^	double MIN_LM;$/;"	m	class:Phreeqc
MIN_RELATED_LOG_ACTIVITY	phreeqcpp/Phreeqc.h	/^	double MIN_RELATED_LOG_ACTIVITY;$/;"	m	class:Phreeqc
MIN_RELATED_SURFACE	phreeqcpp/Phreeqc.h	/^	double MIN_RELATED_SURFACE;$/;"	m	class:Phreeqc
MIN_TOTAL	phreeqcpp/Phreeqc.h	/^	double MIN_TOTAL;$/;"	m	class:Phreeqc
MIN_TOTAL_INVERSE	phreeqcpp/inverse.cpp	/^#define MIN_TOTAL_INVERSE /;"	d	file:
MIN_TOTAL_SS	phreeqcpp/Phreeqc.h	/^	double MIN_TOTAL_SS;$/;"	m	class:Phreeqc
MISSING	phreeqcpp/global_structures.h	/^#define MISSING /;"	d
MIXED	phreeqcpp/spread.cpp	/^#define MIXED /;"	d	file:
MKDIR_P	Makefile	/^MKDIR_P = \/opt\/local\/bin\/gmkdir -p$/;"	m
MOD	phreeqcpp/utilities.cpp	/^# define MOD(/;"	d	file:
MSBP	phreeqcpp/cvode.cpp	/^#define MSBP /;"	d	file:
MSG_ABSTOL_NULL	phreeqcpp/cvode.cpp	/^#define MSG_ABSTOL_NULL /;"	d	file:
MSG_BAD_ABSTOL	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ABSTOL /;"	d	file:
MSG_BAD_DKY	phreeqcpp/cvode.cpp	/^#define MSG_BAD_DKY /;"	d	file:
MSG_BAD_EWT	phreeqcpp/cvode.cpp	/^#define MSG_BAD_EWT /;"	d	file:
MSG_BAD_H0	phreeqcpp/cvode.cpp	/^#define MSG_BAD_H0 /;"	d	file:
MSG_BAD_HMIN_HMAX	phreeqcpp/cvode.cpp	/^#define MSG_BAD_HMIN_HMAX /;"	d	file:
MSG_BAD_HMIN_HMAX_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_HMIN_HMAX_1 /;"	d	file:
MSG_BAD_HMIN_HMAX_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_HMIN_HMAX_2 /;"	d	file:
MSG_BAD_ITASK	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITASK /;"	d	file:
MSG_BAD_ITASK_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITASK_1 /;"	d	file:
MSG_BAD_ITASK_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITASK_2 /;"	d	file:
MSG_BAD_ITER	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITER /;"	d	file:
MSG_BAD_ITER_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITER_1 /;"	d	file:
MSG_BAD_ITER_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITER_2 /;"	d	file:
MSG_BAD_ITER_3	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITER_3 /;"	d	file:
MSG_BAD_ITOL	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITOL /;"	d	file:
MSG_BAD_ITOL_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITOL_1 /;"	d	file:
MSG_BAD_ITOL_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_ITOL_2 /;"	d	file:
MSG_BAD_K	phreeqcpp/cvode.cpp	/^#define MSG_BAD_K /;"	d	file:
MSG_BAD_LMM	phreeqcpp/cvode.cpp	/^#define MSG_BAD_LMM /;"	d	file:
MSG_BAD_LMM_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_LMM_1 /;"	d	file:
MSG_BAD_LMM_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_LMM_2 /;"	d	file:
MSG_BAD_N	phreeqcpp/cvode.cpp	/^#define MSG_BAD_N /;"	d	file:
MSG_BAD_OPT	phreeqcpp/cvode.cpp	/^#define MSG_BAD_OPT /;"	d	file:
MSG_BAD_OPTIN	phreeqcpp/cvode.cpp	/^#define MSG_BAD_OPTIN /;"	d	file:
MSG_BAD_OPTIN_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_OPTIN_1 /;"	d	file:
MSG_BAD_OPTIN_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_OPTIN_2 /;"	d	file:
MSG_BAD_RELTOL	phreeqcpp/cvode.cpp	/^#define MSG_BAD_RELTOL /;"	d	file:
MSG_BAD_T	phreeqcpp/cvode.cpp	/^#define MSG_BAD_T /;"	d	file:
MSG_BAD_TOUT	phreeqcpp/cvode.cpp	/^#define MSG_BAD_TOUT /;"	d	file:
MSG_BAD_TOUT_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_TOUT_1 /;"	d	file:
MSG_BAD_TOUT_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_TOUT_2 /;"	d	file:
MSG_BAD_T_1	phreeqcpp/cvode.cpp	/^#define MSG_BAD_T_1 /;"	d	file:
MSG_BAD_T_2	phreeqcpp/cvode.cpp	/^#define MSG_BAD_T_2 /;"	d	file:
MSG_CONV_FAILS	phreeqcpp/cvode.cpp	/^#define MSG_CONV_FAILS /;"	d	file:
MSG_CONV_FAILS_1	phreeqcpp/cvode.cpp	/^#define MSG_CONV_FAILS_1 /;"	d	file:
MSG_CONV_FAILS_2	phreeqcpp/cvode.cpp	/^#define MSG_CONV_FAILS_2 /;"	d	file:
MSG_CONV_FAILS_3	phreeqcpp/cvode.cpp	/^#define MSG_CONV_FAILS_3 /;"	d	file:
MSG_CVMEM_NULL	phreeqcpp/cvdense.cpp	/^#define MSG_CVMEM_NULL /;"	d	file:
MSG_CVODE_NO_MEM	phreeqcpp/cvode.cpp	/^#define MSG_CVODE_NO_MEM /;"	d	file:
MSG_DKY_NO_MEM	phreeqcpp/cvode.cpp	/^#define MSG_DKY_NO_MEM /;"	d	file:
MSG_ERR_FAILS	phreeqcpp/cvode.cpp	/^#define MSG_ERR_FAILS /;"	d	file:
MSG_ERR_FAILS_1	phreeqcpp/cvode.cpp	/^#define MSG_ERR_FAILS_1 /;"	d	file:
MSG_ERR_FAILS_2	phreeqcpp/cvode.cpp	/^#define MSG_ERR_FAILS_2 /;"	d	file:
MSG_EWT_NOW_BAD	phreeqcpp/cvode.cpp	/^#define MSG_EWT_NOW_BAD /;"	d	file:
MSG_EWT_NOW_BAD_1	phreeqcpp/cvode.cpp	/^#define MSG_EWT_NOW_BAD_1 /;"	d	file:
MSG_EWT_NOW_BAD_2	phreeqcpp/cvode.cpp	/^#define MSG_EWT_NOW_BAD_2 /;"	d	file:
MSG_F_NULL	phreeqcpp/cvode.cpp	/^#define MSG_F_NULL /;"	d	file:
MSG_HNIL	phreeqcpp/cvode.cpp	/^#define MSG_HNIL /;"	d	file:
MSG_HNIL_1	phreeqcpp/cvode.cpp	/^#define MSG_HNIL_1 /;"	d	file:
MSG_HNIL_2	phreeqcpp/cvode.cpp	/^#define MSG_HNIL_2 /;"	d	file:
MSG_HNIL_3	phreeqcpp/cvode.cpp	/^#define MSG_HNIL_3 /;"	d	file:
MSG_HNIL_DONE	phreeqcpp/cvode.cpp	/^#define MSG_HNIL_DONE /;"	d	file:
MSG_HNIL_DONE_1	phreeqcpp/cvode.cpp	/^#define MSG_HNIL_DONE_1 /;"	d	file:
MSG_HNIL_DONE_2	phreeqcpp/cvode.cpp	/^#define MSG_HNIL_DONE_2 /;"	d	file:
MSG_LFREE_NULL	phreeqcpp/cvode.cpp	/^#define MSG_LFREE_NULL /;"	d	file:
MSG_LINIT_FAIL	phreeqcpp/cvode.cpp	/^#define MSG_LINIT_FAIL /;"	d	file:
MSG_LINIT_NULL	phreeqcpp/cvode.cpp	/^#define MSG_LINIT_NULL /;"	d	file:
MSG_LSETUP_NULL	phreeqcpp/cvode.cpp	/^#define MSG_LSETUP_NULL /;"	d	file:
MSG_LSOLVE_NULL	phreeqcpp/cvode.cpp	/^#define MSG_LSOLVE_NULL /;"	d	file:
MSG_MAX_STEPS	phreeqcpp/cvode.cpp	/^#define MSG_MAX_STEPS /;"	d	file:
MSG_MAX_STEPS_1	phreeqcpp/cvode.cpp	/^#define MSG_MAX_STEPS_1 /;"	d	file:
MSG_MAX_STEPS_2	phreeqcpp/cvode.cpp	/^#define MSG_MAX_STEPS_2 /;"	d	file:
MSG_MEM_FAIL	phreeqcpp/cvdense.cpp	/^#define MSG_MEM_FAIL /;"	d	file:
MSG_MEM_FAIL	phreeqcpp/cvode.cpp	/^#define MSG_MEM_FAIL /;"	d	file:
MSG_REI_MAXORD	phreeqcpp/cvode.cpp	/^#define MSG_REI_MAXORD /;"	d	file:
MSG_REI_MAXORD1	phreeqcpp/cvode.cpp	/^#define MSG_REI_MAXORD1 /;"	d	file:
MSG_REI_MAXORD2	phreeqcpp/cvode.cpp	/^#define MSG_REI_MAXORD2 /;"	d	file:
MSG_REI_NO_MEM	phreeqcpp/cvode.cpp	/^#define MSG_REI_NO_MEM /;"	d	file:
MSG_RELTOL_NULL	phreeqcpp/cvode.cpp	/^#define MSG_RELTOL_NULL /;"	d	file:
MSG_SETUP_FAILED	phreeqcpp/cvode.cpp	/^#define MSG_SETUP_FAILED /;"	d	file:
MSG_SETUP_FAILED_1	phreeqcpp/cvode.cpp	/^#define MSG_SETUP_FAILED_1 /;"	d	file:
MSG_SETUP_FAILED_2	phreeqcpp/cvode.cpp	/^#define MSG_SETUP_FAILED_2 /;"	d	file:
MSG_SOLVE_FAILED	phreeqcpp/cvode.cpp	/^#define MSG_SOLVE_FAILED /;"	d	file:
MSG_SOLVE_FAILED_1	phreeqcpp/cvode.cpp	/^#define MSG_SOLVE_FAILED_1 /;"	d	file:
MSG_SOLVE_FAILED_2	phreeqcpp/cvode.cpp	/^#define MSG_SOLVE_FAILED_2 /;"	d	file:
MSG_TOO_CLOSE	phreeqcpp/cvode.cpp	/^#define MSG_TOO_CLOSE /;"	d	file:
MSG_TOO_CLOSE_1	phreeqcpp/cvode.cpp	/^#define MSG_TOO_CLOSE_1 /;"	d	file:
MSG_TOO_CLOSE_2	phreeqcpp/cvode.cpp	/^#define MSG_TOO_CLOSE_2 /;"	d	file:
MSG_TOO_MUCH_ACC	phreeqcpp/cvode.cpp	/^#define MSG_TOO_MUCH_ACC /;"	d	file:
MSG_T_NULL	phreeqcpp/cvode.cpp	/^#define MSG_T_NULL /;"	d	file:
MSG_WRONG_NVEC	phreeqcpp/cvdense.cpp	/^#define MSG_WRONG_NVEC /;"	d	file:
MSG_Y0_NULL	phreeqcpp/cvode.cpp	/^#define MSG_Y0_NULL /;"	d	file:
MSG_YOUT_NULL	phreeqcpp/cvode.cpp	/^#define MSG_YOUT_NULL /;"	d	file:
MU	phreeqcpp/global_structures.h	/^#define MU /;"	d
MUTEX_INITIALIZER	thread.h	/^	#define MUTEX_INITIALIZER	/;"	d
MXHNIL	phreeqcpp/cvode.h	/^	{ MAXORD, MXSTEP, MXHNIL,$/;"	e	enum:__anon11
MXHNIL_DEFAULT	phreeqcpp/cvode.cpp	/^#define MXHNIL_DEFAULT /;"	d	file:
MXNCF	phreeqcpp/cvode.cpp	/^#define MXNCF /;"	d	file:
MXNEF	phreeqcpp/cvode.cpp	/^#define MXNEF /;"	d	file:
MXNEF1	phreeqcpp/cvode.cpp	/^#define MXNEF1 /;"	d	file:
MXSTEP	phreeqcpp/cvode.h	/^	{ MAXORD, MXSTEP, MXHNIL,$/;"	e	enum:__anon11
MXSTEP_DEFAULT	phreeqcpp/cvode.cpp	/^#define MXSTEP_DEFAULT /;"	d	file:
M_Env	phreeqcpp/nvector.h	/^	typedef struct _generic_M_Env *M_Env;$/;"	t	typeref:struct:_generic_M_Env
M_EnvFree_Serial	phreeqcpp/nvector_serial.cpp	/^M_EnvFree_Serial(M_Env machEnv)$/;"	f
M_EnvInit_Serial	phreeqcpp/nvector_serial.cpp	/^M_EnvInit_Serial(integertype vec_length)$/;"	f
M_EnvSerialContent	phreeqcpp/nvector_serial.h	/^	typedef struct _M_EnvSerialContent *M_EnvSerialContent;$/;"	t	typeref:struct:_M_EnvSerialContent
M_S	phreeqcpp/global_structures.h	/^struct M_S$/;"	s
MapSize	phreeqcpp/Dictionary.h	/^	int MapSize() {return (int) this->dictionary_map.size();}$/;"	f	class:Dictionary
MaxLoadFactor	phreeqcpp/global_structures.h	/^	short MaxLoadFactor;$/;"	m	struct:__anon19
MinLoadFactor	phreeqcpp/global_structures.h	/^	short MinLoadFactor;$/;"	m	struct:__anon19
Mix	phreeqcpp/global_structures.h	/^	Kinetics, Mix, Temperature, Pressure, UnKnown$/;"	e	enum:entity_type
Mixes	phreeqcpp/StorageBin.h	/^	std::map < int, cxxMix > Mixes;$/;"	m	class:cxxStorageBin
Multiply	phreeqcpp/cxxMix.h	/^	void Multiply(LDBLE f)$/;"	f	class:cxxMix
Multiply_activities_redox	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::Multiply_activities_redox(std::string str, LDBLE f)$/;"	f	class:cxxNameDouble
Multiply_isotopes	phreeqcpp/Solution.cxx	/^cxxSolution::Multiply_isotopes(LDBLE extensive)$/;"	f	class:cxxSolution
N	phreeqcpp/cvdense.cpp	/^#define N /;"	d	file:
N	phreeqcpp/cvode.cpp	/^#define N /;"	d	file:
NA	phreeqcpp/NA.h	/^#define NA /;"	d
NAME	Version.h	/^#define NAME /;"	d
NAMEDOUBLE_H_INCLUDED	phreeqcpp/NameDouble.h	/^#define NAMEDOUBLE_H_INCLUDED$/;"	d
NAN	phreeqcpp/global_structures.h	/^#   define NAN /;"	d
NCFN	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
ND_ELT_MOLES	phreeqcpp/NameDouble.h	/^		ND_ELT_MOLES = 1,$/;"	e	enum:cxxNameDouble::ND_TYPE
ND_NAME_COEF	phreeqcpp/NameDouble.h	/^		ND_NAME_COEF = 4$/;"	e	enum:cxxNameDouble::ND_TYPE
ND_SPECIES_GAMMA	phreeqcpp/NameDouble.h	/^		ND_SPECIES_GAMMA = 3,$/;"	e	enum:cxxNameDouble::ND_TYPE
ND_SPECIES_LA	phreeqcpp/NameDouble.h	/^		ND_SPECIES_LA = 2,$/;"	e	enum:cxxNameDouble::ND_TYPE
ND_TYPE	phreeqcpp/NameDouble.h	/^	enum ND_TYPE$/;"	g	class:cxxNameDouble
NETF	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
NEWTON	phreeqcpp/cvode.h	/^	{ FUNCTIONAL, NEWTON };		\/* iter *\/$/;"	e	enum:__anon5
NEWT_MAXCOR	phreeqcpp/cvode.cpp	/^#define NEWT_MAXCOR /;"	d	file:
NFE	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = nmedit$/;"	m
NNI	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
NOMIX	phreeqcpp/global_structures.h	/^#define NOMIX /;"	d
NOR	phreeqcpp/cvode.h	/^		LENRW, LENIW, SLDET, NOR$/;"	e	enum:__anon11
NORMAL	phreeqcpp/cvode.h	/^	{ NORMAL, ONE_STEP };		\/* itask *\/$/;"	e	enum:__anon7
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NO_DL	phreeqcpp/Surface.h	/^	{ NO_DL, BORKOVEK_DL, DONNAN_DL };$/;"	e	enum:cxxSurface::DIFFUSE_LAYER_TYPE
NO_EDL	phreeqcpp/Surface.h	/^	{ UNKNOWN_DL, NO_EDL, DDL, CD_MUSIC, CCM };$/;"	e	enum:cxxSurface::SURFACE_TYPE
NO_FAILURES	phreeqcpp/cvode.h	/^#define NO_FAILURES /;"	d
NO_MEM	phreeqcpp/cvode.cpp	/^#define NO_MEM /;"	d	file:
NSETUPS	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
NST	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
NUMBER	phreeqcpp/spread.cpp	/^#define NUMBER /;"	d	file:
NUMKEYWORD_H_INCLUDED	phreeqcpp/NumKeyword.h	/^#define NUMKEYWORD_H_INCLUDED$/;"	d
NUM_TESTS	phreeqcpp/cvode.h	/^#define NUM_TESTS /;"	d
NUNITS	phreeqcpp/read.cpp	/^#define NUNITS /;"	d	file:
NVS_DISPOSE_S	phreeqcpp/nvector_serial.h	/^#define NVS_DISPOSE_S(/;"	d
NVS_MAKE_S	phreeqcpp/nvector_serial.h	/^#define NVS_MAKE_S(/;"	d
NV_CONTENT_S	phreeqcpp/nvector_serial.h	/^#define NV_CONTENT_S(/;"	d
NV_DATA_S	phreeqcpp/nvector_serial.h	/^#define NV_DATA_S(/;"	d
NV_DISPOSE_S	phreeqcpp/nvector_serial.h	/^#define NV_DISPOSE_S(/;"	d
NV_Ith_S	phreeqcpp/nvector_serial.h	/^#define NV_Ith_S(/;"	d
NV_LENGTH_S	phreeqcpp/nvector_serial.h	/^#define NV_LENGTH_S(/;"	d
NV_MAKE_S	phreeqcpp/nvector_serial.h	/^#define NV_MAKE_S(/;"	d
N_VAbs	phreeqcpp/nvector.cpp	/^N_VAbs(N_Vector x, N_Vector z)$/;"	f
N_VAbs_Serial	phreeqcpp/nvector_serial.cpp	/^N_VAbs_Serial(N_Vector x, N_Vector z)$/;"	f
N_VAddConst	phreeqcpp/nvector.cpp	/^N_VAddConst(N_Vector x, realtype b, N_Vector z)$/;"	f
N_VAddConst_Serial	phreeqcpp/nvector_serial.cpp	/^N_VAddConst_Serial(N_Vector x, realtype b, N_Vector z)$/;"	f
N_VCompare	phreeqcpp/nvector.cpp	/^N_VCompare(realtype c, N_Vector x, N_Vector z)$/;"	f
N_VCompare_Serial	phreeqcpp/nvector_serial.cpp	/^N_VCompare_Serial(realtype c, N_Vector x, N_Vector z)$/;"	f
N_VConst	phreeqcpp/nvector.cpp	/^N_VConst(realtype c, N_Vector z)$/;"	f
N_VConst_Serial	phreeqcpp/nvector_serial.cpp	/^N_VConst_Serial(realtype c, N_Vector z)$/;"	f
N_VConstrMask	phreeqcpp/nvector.cpp	/^N_VConstrMask(N_Vector c, N_Vector x, N_Vector m)$/;"	f
N_VConstrMask_Serial	phreeqcpp/nvector_serial.cpp	/^N_VConstrMask_Serial(N_Vector c, N_Vector x, N_Vector m)$/;"	f
N_VConstrProdPos	phreeqcpp/nvector.cpp	/^N_VConstrProdPos(N_Vector c, N_Vector x)$/;"	f
N_VConstrProdPos_Serial	phreeqcpp/nvector_serial.cpp	/^N_VConstrProdPos_Serial(N_Vector c, N_Vector x)$/;"	f
N_VDispose	phreeqcpp/nvector.cpp	/^N_VDispose(N_Vector v)$/;"	f
N_VDispose_Serial	phreeqcpp/nvector_serial.cpp	/^N_VDispose_Serial(N_Vector v)$/;"	f
N_VDiv	phreeqcpp/nvector.cpp	/^N_VDiv(N_Vector x, N_Vector y, N_Vector z)$/;"	f
N_VDiv_Serial	phreeqcpp/nvector_serial.cpp	/^N_VDiv_Serial(N_Vector x, N_Vector y, N_Vector z)$/;"	f
N_VDotProd	phreeqcpp/nvector.cpp	/^N_VDotProd(N_Vector x, N_Vector y)$/;"	f
N_VDotProd_Serial	phreeqcpp/nvector_serial.cpp	/^N_VDotProd_Serial(N_Vector x, N_Vector y)$/;"	f
N_VFree	phreeqcpp/nvector.cpp	/^N_VFree(N_Vector v)$/;"	f
N_VFree_S	phreeqcpp/nvector.cpp	/^N_VFree_S(integertype ns, N_Vector_S vs)$/;"	f
N_VFree_S_Serial	phreeqcpp/nvector_serial.cpp	/^N_VFree_S_Serial(integertype ns, N_Vector_S vs)$/;"	f
N_VFree_Serial	phreeqcpp/nvector_serial.cpp	/^N_VFree_Serial(N_Vector v)$/;"	f
N_VGetData	phreeqcpp/nvector.cpp	/^N_VGetData(N_Vector v)$/;"	f
N_VGetData_Serial	phreeqcpp/nvector_serial.cpp	/^N_VGetData_Serial(N_Vector v)$/;"	f
N_VInv	phreeqcpp/nvector.cpp	/^N_VInv(N_Vector x, N_Vector z)$/;"	f
N_VInvTest	phreeqcpp/nvector.cpp	/^N_VInvTest(N_Vector x, N_Vector z)$/;"	f
N_VInvTest_Serial	phreeqcpp/nvector_serial.cpp	/^N_VInvTest_Serial(N_Vector x, N_Vector z)$/;"	f
N_VInv_Serial	phreeqcpp/nvector_serial.cpp	/^N_VInv_Serial(N_Vector x, N_Vector z)$/;"	f
N_VL1Norm	phreeqcpp/nvector.cpp	/^N_VL1Norm(N_Vector x)$/;"	f
N_VL1Norm_Serial	phreeqcpp/nvector_serial.cpp	/^N_VL1Norm_Serial(N_Vector x)$/;"	f
N_VLinearSum	phreeqcpp/nvector.cpp	/^N_VLinearSum(realtype a, N_Vector x, realtype b, N_Vector y, N_Vector z)$/;"	f
N_VLinearSum_Serial	phreeqcpp/nvector_serial.cpp	/^N_VLinearSum_Serial(realtype a, N_Vector x, realtype b, N_Vector y,$/;"	f
N_VMake	phreeqcpp/nvector.cpp	/^N_VMake(integertype n, realtype * v_data, M_Env machEnv)$/;"	f
N_VMake_Serial	phreeqcpp/nvector_serial.cpp	/^N_VMake_Serial(integertype n, realtype * v_data, M_Env machEnv)$/;"	f
N_VMaxNorm	phreeqcpp/nvector.cpp	/^N_VMaxNorm(N_Vector x)$/;"	f
N_VMaxNorm_Serial	phreeqcpp/nvector_serial.cpp	/^N_VMaxNorm_Serial(N_Vector x)$/;"	f
N_VMin	phreeqcpp/nvector.cpp	/^N_VMin(N_Vector x)$/;"	f
N_VMinQuotient	phreeqcpp/nvector.cpp	/^N_VMinQuotient(N_Vector num, N_Vector denom)$/;"	f
N_VMinQuotient_Serial	phreeqcpp/nvector_serial.cpp	/^N_VMinQuotient_Serial(N_Vector num, N_Vector denom)$/;"	f
N_VMin_Serial	phreeqcpp/nvector_serial.cpp	/^N_VMin_Serial(N_Vector x)$/;"	f
N_VNew	phreeqcpp/nvector.cpp	/^N_VNew(integertype n, M_Env machEnv)$/;"	f
N_VNew_S	phreeqcpp/nvector.cpp	/^N_VNew_S(integertype ns, integertype n, M_Env machEnv)$/;"	f
N_VNew_S_Serial	phreeqcpp/nvector_serial.cpp	/^N_VNew_S_Serial(integertype ns, integertype n, M_Env machEnv)$/;"	f
N_VNew_Serial	phreeqcpp/nvector_serial.cpp	/^N_VNew_Serial(integertype n, M_Env machEnv)$/;"	f
N_VOneMask	phreeqcpp/nvector.cpp	/^N_VOneMask(N_Vector x)$/;"	f
N_VOneMask_Serial	phreeqcpp/nvector_serial.cpp	/^N_VOneMask_Serial(N_Vector x)$/;"	f
N_VPrint	phreeqcpp/nvector.cpp	/^N_VPrint(N_Vector x)$/;"	f
N_VPrint_Serial	phreeqcpp/nvector_serial.cpp	/^N_VPrint_Serial(N_Vector x)$/;"	f
N_VProd	phreeqcpp/nvector.cpp	/^N_VProd(N_Vector x, N_Vector y, N_Vector z)$/;"	f
N_VProd_Serial	phreeqcpp/nvector_serial.cpp	/^N_VProd_Serial(N_Vector x, N_Vector y, N_Vector z)$/;"	f
N_VScale	phreeqcpp/nvector.cpp	/^N_VScale(realtype c, N_Vector x, N_Vector z)$/;"	f
N_VScale_Serial	phreeqcpp/nvector_serial.cpp	/^N_VScale_Serial(realtype c, N_Vector x, N_Vector z)$/;"	f
N_VSetData	phreeqcpp/nvector.cpp	/^N_VSetData(realtype * v_data, N_Vector v)$/;"	f
N_VSetData_Serial	phreeqcpp/nvector_serial.cpp	/^N_VSetData_Serial(realtype * v_data, N_Vector v)$/;"	f
N_VWL2Norm	phreeqcpp/nvector.cpp	/^N_VWL2Norm(N_Vector x, N_Vector w)$/;"	f
N_VWL2Norm_Serial	phreeqcpp/nvector_serial.cpp	/^N_VWL2Norm_Serial(N_Vector x, N_Vector w)$/;"	f
N_VWrmsNorm	phreeqcpp/nvector.cpp	/^N_VWrmsNorm(N_Vector x, N_Vector w)$/;"	f
N_VWrmsNorm_Serial	phreeqcpp/nvector_serial.cpp	/^N_VWrmsNorm_Serial(N_Vector x, N_Vector w)$/;"	f
N_Vector	phreeqcpp/nvector.h	/^	typedef struct _generic_N_Vector *N_Vector;$/;"	t	typeref:struct:_generic_N_Vector
N_VectorSerialContent	phreeqcpp/nvector_serial.h	/^	typedef struct _N_VectorSerialContent *N_VectorSerialContent;$/;"	t	typeref:struct:_N_VectorSerialContent
N_Vector_Ops	phreeqcpp/nvector.h	/^	typedef struct _generic_N_Vector_Ops *N_Vector_Ops;$/;"	t	typeref:struct:_generic_N_Vector_Ops
N_Vector_S	phreeqcpp/nvector.h	/^	typedef N_Vector *N_Vector_S;$/;"	t
NameDouble2elt_list	phreeqcpp/structures.cpp	/^NameDouble2elt_list(const cxxNameDouble &nd)$/;"	f	class:Phreeqc
Next	phreeqcpp/global_structures.h	/^	struct Element *Next;		\/* secret from user    *\/$/;"	m	struct:Element	typeref:struct:Element::Element
OBJDUMP	Makefile	/^OBJDUMP = false$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OK	phreeqcpp/Form1.h	/^#undef OK /;"	d
OK	phreeqcpp/global_structures.h	/^#define OK /;"	d
OKAY	phreeqcpp/cvode.h	/^	{ OKAY = 0, BAD_K = -1, BAD_T = -2, BAD_DKY = -3, DKY_NO_MEM = -4 };$/;"	e	enum:__anon10
ONE	phreeqcpp/cvdense.cpp	/^#define ONE /;"	d	file:
ONE	phreeqcpp/cvode.cpp	/^#define ONE /;"	d	file:
ONE	phreeqcpp/dense.cpp	/^#define ONE /;"	d	file:
ONE	phreeqcpp/nvector_serial.cpp	/^#define ONE /;"	d	file:
ONE	phreeqcpp/smalldense.cpp	/^#define ONE /;"	d	file:
ONE	phreeqcpp/sundialsmath.cpp	/^#define ONE /;"	d	file:
ONEPSM	phreeqcpp/cvode.cpp	/^#define ONEPSM /;"	d	file:
ONEPT5	phreeqcpp/nvector_serial.cpp	/^#define ONEPT5 /;"	d	file:
ONERROR_TYPE	phreeqcpp/common/PHRQ_io.h	/^	enum ONERROR_TYPE$/;"	g	class:PHRQ_io
ONE_STEP	phreeqcpp/cvode.h	/^	{ NORMAL, ONE_STEP };		\/* itask *\/$/;"	e	enum:__anon7
OPRESS	phreeqcpp/Phreeqc.h	/^	LDBLE OTEMP, OPRESS;$/;"	m	class:Phreeqc
OPTION	phreeqcpp/global_structures.h	/^#define OPTION /;"	d
OPTION_DEFAULT	phreeqcpp/global_structures.h	/^#define OPTION_DEFAULT /;"	d
OPTION_DEFAULT	phreeqcpp/readtr.cpp	/^#define OPTION_DEFAULT /;"	d	file:
OPTION_DEFAULT	phreeqcpp/spread.cpp	/^#define OPTION_DEFAULT /;"	d	file:
OPTION_DEFAULT2	phreeqcpp/readtr.cpp	/^#define OPTION_DEFAULT2 /;"	d	file:
OPTION_EOF	phreeqcpp/global_structures.h	/^#define OPTION_EOF /;"	d
OPTION_EOF	phreeqcpp/readtr.cpp	/^#define OPTION_EOF /;"	d	file:
OPTION_EOF	phreeqcpp/spread.cpp	/^#define OPTION_EOF /;"	d	file:
OPTION_ERROR	phreeqcpp/global_structures.h	/^#define OPTION_ERROR /;"	d
OPTION_ERROR	phreeqcpp/readtr.cpp	/^#define OPTION_ERROR /;"	d	file:
OPTION_ERROR	phreeqcpp/spread.cpp	/^#define OPTION_ERROR /;"	d	file:
OPTION_KEYWORD	phreeqcpp/global_structures.h	/^#define OPTION_KEYWORD /;"	d
OPTION_KEYWORD	phreeqcpp/readtr.cpp	/^#define OPTION_KEYWORD /;"	d	file:
OPTION_KEYWORD	phreeqcpp/spread.cpp	/^#define OPTION_KEYWORD /;"	d	file:
OPT_1	phreeqcpp/global_structures.h	/^#define OPT_1 /;"	d
OPT_1	phreeqcpp/spread.cpp	/^#define OPT_1 /;"	d	file:
OPT_DEFAULT	phreeqcpp/common/Parser.h	/^		OPT_DEFAULT = -4,$/;"	e	enum:CParser::OPT_TYPE
OPT_EOF	phreeqcpp/common/Parser.h	/^		OPT_EOF = -1$/;"	e	enum:CParser::OPT_TYPE
OPT_ERROR	phreeqcpp/common/Parser.h	/^		OPT_ERROR = -3,$/;"	e	enum:CParser::OPT_TYPE
OPT_KEYWORD	phreeqcpp/common/Parser.h	/^		OPT_KEYWORD = -2,$/;"	e	enum:CParser::OPT_TYPE
OPT_SIZE	phreeqcpp/cvode.h	/^#define OPT_SIZE /;"	d
OPT_TYPE	phreeqcpp/common/Parser.h	/^	enum OPT_TYPE$/;"	g	class:CParser
OTEMP	phreeqcpp/Phreeqc.h	/^	LDBLE OTEMP, OPRESS;$/;"	m	class:Phreeqc
OTOOL	Makefile	/^OTOOL = otool$/;"	m
OTOOL64	Makefile	/^OTOOL64 = :$/;"	m
OT_CONTINUE	phreeqcpp/common/PHRQ_io.h	/^		OT_CONTINUE = 0,$/;"	e	enum:PHRQ_io::ONERROR_TYPE
OT_STOP	phreeqcpp/common/PHRQ_io.h	/^		OT_STOP = 1$/;"	e	enum:PHRQ_io::ONERROR_TYPE
OpenCSVFile	phreeqcpp/ChartObject.cpp	/^ChartObject::OpenCSVFile(std::string file_name)$/;"	f	class:ChartObject
OssSize	phreeqcpp/Dictionary.h	/^	int OssSize() {return (int) this->dictionary_oss.str().size();}$/;"	f	class:Dictionary
OutputAccumulatedLines	IPhreeqc.cpp	/^void IPhreeqc::OutputAccumulatedLines(void)$/;"	f	class:IPhreeqc
OutputAccumulatedLines	IPhreeqcF.f	/^      SUBROUTINE OutputAccumulatedLines(/;"	s
OutputAccumulatedLines	IPhreeqcLib.cpp	/^OutputAccumulatedLines(int id)$/;"	f
OutputAccumulatedLines	IPhreeqc_interface.F90	/^SUBROUTINE OutputAccumulatedLines(/;"	s	module:IPhreeqc
OutputAccumulatedLinesF	IPhreeqc_interface_F.cpp	/^OutputAccumulatedLinesF(int *id)$/;"	f
OutputAccumulatedLinesF	IPhreeqc_interface_F.h	/^#define OutputAccumulatedLinesF /;"	d
OutputAccumulatedLinesF	fwrap.cpp	/^OutputAccumulatedLinesF(int *id)$/;"	f
OutputAccumulatedLinesF	fwrap.h	/^#define OutputAccumulatedLinesF /;"	d
OutputErrorString	IPhreeqc.cpp	/^void IPhreeqc::OutputErrorString(void)$/;"	f	class:IPhreeqc
OutputErrorString	IPhreeqcF.f	/^      SUBROUTINE OutputErrorString(/;"	s
OutputErrorString	IPhreeqcLib.cpp	/^OutputErrorString(int id)$/;"	f
OutputErrorString	IPhreeqc_interface.F90	/^SUBROUTINE OutputErrorString(/;"	s	module:IPhreeqc
OutputErrorStringF	IPhreeqc_interface_F.cpp	/^OutputErrorStringF(int *id)$/;"	f
OutputErrorStringF	IPhreeqc_interface_F.h	/^#define OutputErrorStringF /;"	d
OutputErrorStringF	fwrap.cpp	/^OutputErrorStringF(int *id)$/;"	f
OutputErrorStringF	fwrap.h	/^#define OutputErrorStringF /;"	d
OutputFileName	IPhreeqc.hpp	/^	std::string                OutputFileName;$/;"	m	class:IPhreeqc
OutputFileOn	IPhreeqc.hpp	/^	bool                       OutputFileOn;$/;"	m	class:IPhreeqc
OutputLines	IPhreeqc.hpp	/^	std::vector< std::string > OutputLines;$/;"	m	class:IPhreeqc
OutputString	IPhreeqc.hpp	/^	std::string                OutputString;$/;"	m	class:IPhreeqc
OutputStringOn	IPhreeqc.hpp	/^	bool                       OutputStringOn;$/;"	m	class:IPhreeqc
OutputWarningString	IPhreeqc.cpp	/^void IPhreeqc::OutputWarningString(void)$/;"	f	class:IPhreeqc
OutputWarningString	IPhreeqcF.f	/^      SUBROUTINE OutputWarningString(/;"	s
OutputWarningString	IPhreeqcLib.cpp	/^OutputWarningString(int id)$/;"	f
OutputWarningString	IPhreeqc_interface.F90	/^SUBROUTINE OutputWarningString(/;"	s	module:IPhreeqc
OutputWarningStringF	IPhreeqc_interface_F.cpp	/^OutputWarningStringF(int *id)$/;"	f
OutputWarningStringF	IPhreeqc_interface_F.h	/^#define OutputWarningStringF /;"	d
OutputWarningStringF	fwrap.cpp	/^OutputWarningStringF(int *id)$/;"	f
OutputWarningStringF	fwrap.h	/^#define OutputWarningStringF /;"	d
PACKAGE	Makefile	/^PACKAGE = iphreeqc$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = charlton@usgs.gov$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = IPhreeqc$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = IPhreeqc 3.3.7-11094$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = iphreeqc$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 3.3.7-11094$/;"	m
PACK_TYPE	phreeqcpp/Serializer.h	/^	enum PACK_TYPE$/;"	g	class:Serializer
PARSER_ERROR	phreeqcpp/common/Parser.h	/^		PARSER_ERROR = 0,$/;"	e	enum:CParser::STATUS_TYPE
PARSER_H_INCLUDED	phreeqcpp/common/Parser.h	/^#define PARSER_H_INCLUDED$/;"	d
PARSER_OK	phreeqcpp/common/Parser.h	/^		PARSER_OK = 1$/;"	e	enum:CParser::STATUS_TYPE
PASCAL_PER_ATM	phreeqcpp/global_structures.h	/^#define PASCAL_PER_ATM /;"	d
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PBasic	phreeqcpp/PBasic.cpp	/^PBasic::PBasic(Phreeqc * ptr, PHRQ_io *phrq_io)$/;"	f	class:PBasic
PBasic	phreeqcpp/PBasic.h	/^class PBasic: public PHRQ_base$/;"	c
PBasicStop	phreeqcpp/PBasic.h	/^class PBasicStop : public std::exception$/;"	c
PFN_CATCH_CALLBACK	IPhreeqcCallbacks.h	/^typedef int (*PFN_CATCH_CALLBACK)(void *cookie);$/;"	t
PFN_POSTRUN_CALLBACK	IPhreeqcCallbacks.h	/^typedef int (*PFN_POSTRUN_CALLBACK)(void *cookie);$/;"	t
PFN_PRERUN_CALLBACK	IPhreeqcCallbacks.h	/^typedef int (*PFN_PRERUN_CALLBACK)(void *cookie);$/;"	t
PHAST	phreeqcpp/global_structures.h	/^#define PHAST	/;"	d
PHAST_NULL	phreeqcpp/print.cpp	/^#define PHAST_NULL(/;"	d	file:
PHAST_NULL	phreeqcpp/print.cpp	/^#undef PHAST_NULL$/;"	d	file:
PHRQMemHeader	phreeqcpp/global_structures.h	/^typedef struct PHRQMemHeader$/;"	s
PHRQMemHeader	phreeqcpp/global_structures.h	/^} PHRQMemHeader;$/;"	t	typeref:struct:PHRQMemHeader
PHRQ_base	phreeqcpp/common/PHRQ_base.cxx	/^PHRQ_base(PHRQ_io * p_io)$/;"	f	class:PHRQ_base
PHRQ_base	phreeqcpp/common/PHRQ_base.cxx	/^PHRQ_base(void)$/;"	f	class:PHRQ_base
PHRQ_base	phreeqcpp/common/PHRQ_base.h	/^class IPQ_DLL_EXPORT PHRQ_base$/;"	c
PHRQ_calloc	phreeqcpp/phqalloc.cpp	/^PHRQ_calloc(size_t num, size_t size$/;"	f	class:Phreeqc
PHRQ_calloc	phreeqcpp/phqalloc.cpp	/^PHRQ_calloc(size_t num, size_t size, const char *szFileName, int nLine)$/;"	f	class:Phreeqc
PHRQ_calloc	phreeqcpp/phqalloc.h	/^#define   PHRQ_calloc(/;"	d
PHRQ_free	phreeqcpp/phqalloc.cpp	/^PHRQ_free(void *ptr)$/;"	f	class:Phreeqc
PHRQ_free_all	phreeqcpp/phqalloc.cpp	/^PHRQ_free_all(void)$/;"	f	class:Phreeqc
PHRQ_io	phreeqcpp/common/PHRQ_io.cpp	/^PHRQ_io(void)$/;"	f	class:PHRQ_io
PHRQ_io	phreeqcpp/common/PHRQ_io.h	/^class IPQ_DLL_EXPORT PHRQ_io$/;"	c
PHRQ_malloc	phreeqcpp/phqalloc.cpp	/^PHRQ_malloc(size_t size, const char *szFileName, int nLine)$/;"	f	class:Phreeqc
PHRQ_malloc	phreeqcpp/phqalloc.h	/^#define   PHRQ_malloc(/;"	d
PHRQ_realloc	phreeqcpp/phqalloc.cpp	/^PHRQ_realloc(void *ptr, size_t size$/;"	f	class:Phreeqc
PHRQ_realloc	phreeqcpp/phqalloc.cpp	/^PHRQ_realloc(void *ptr, size_t size, const char *szFileName, int nLine)$/;"	f	class:Phreeqc
PHRQ_realloc	phreeqcpp/phqalloc.h	/^#define   PHRQ_realloc(/;"	d
PHR_ISFINITE	phreeqcpp/Phreeqc.h	/^#  define PHR_ISFINITE(/;"	d
PITZER	phreeqcpp/pitzer.cpp	/^#define PITZER$/;"	d	file:
PITZER_GAMMA	phreeqcpp/global_structures.h	/^#define PITZER_GAMMA /;"	d
PITZER_LISTS	phreeqcpp/pitzer.cpp	/^#define PITZER_LISTS$/;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POW_LIB	Makefile	/^POW_LIB = $/;"	m
PP	phreeqcpp/global_structures.h	/^#define PP /;"	d
PPASSEMBLAGECOMP_H_INCLUDED	phreeqcpp/PPassemblageComp.h	/^#define PPASSEMBLAGECOMP_H_INCLUDED$/;"	d
PPASSEMBLAGE_H_INCLUDED	phreeqcpp/PPassemblage.h	/^#define PPASSEMBLAGE_H_INCLUDED$/;"	d
PPassemblages	phreeqcpp/StorageBin.h	/^	std::map < int, cxxPPassemblage > PPassemblages;$/;"	m	class:cxxStorageBin
PRECIPITATE	phreeqcpp/global_structures.h	/^#define PRECIPITATE /;"	d
PREDICT_AGAIN	phreeqcpp/cvode.cpp	/^#define PREDICT_AGAIN /;"	d	file:
PRESSURE	phreeqcpp/global_structures.h	/^#define PRESSURE /;"	d
PRESSURE_H_INCLUDED	phreeqcpp/Pressure.h	/^#define PRESSURE_H_INCLUDED$/;"	d
PREV_CONV_FAIL	phreeqcpp/cvode.cpp	/^#define PREV_CONV_FAIL /;"	d	file:
PREV_ERR_FAIL	phreeqcpp/cvode.cpp	/^#define PREV_ERR_FAIL /;"	d	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRODUCT_NAME	Version.h	/^#define PRODUCT_NAME /;"	d
PS	phreeqcpp/dw.cpp	/^PS(LDBLE T)$/;"	f	class:Phreeqc
PTEMP	phreeqcpp/pitzer.cpp	/^PTEMP(LDBLE TK)$/;"	f	class:Phreeqc
PTEMP_SIT	phreeqcpp/sit.cpp	/^PTEMP_SIT(LDBLE TK)$/;"	f	class:Phreeqc
PT_EXCHANGE	phreeqcpp/Serializer.h	/^		PT_EXCHANGE     = 1,$/;"	e	enum:Serializer::PACK_TYPE
PT_GASPHASE	phreeqcpp/Serializer.h	/^		PT_GASPHASE     = 2,$/;"	e	enum:Serializer::PACK_TYPE
PT_KINETICS	phreeqcpp/Serializer.h	/^		PT_KINETICS     = 3,$/;"	e	enum:Serializer::PACK_TYPE
PT_PPASSEMBLAGE	phreeqcpp/Serializer.h	/^		PT_PPASSEMBLAGE = 4,$/;"	e	enum:Serializer::PACK_TYPE
PT_PRESSURE	phreeqcpp/Serializer.h	/^		PT_PRESSURE     = 8$/;"	e	enum:Serializer::PACK_TYPE
PT_SOLUTION	phreeqcpp/Serializer.h	/^		PT_SOLUTION     = 0,$/;"	e	enum:Serializer::PACK_TYPE
PT_SSASSEMBLAGE	phreeqcpp/Serializer.h	/^		PT_SSASSEMBLAGE = 5,$/;"	e	enum:Serializer::PACK_TYPE
PT_SURFACES	phreeqcpp/Serializer.h	/^		PT_SURFACES     = 6,$/;"	e	enum:Serializer::PACK_TYPE
PT_TEMPERATURE	phreeqcpp/Serializer.h	/^		PT_TEMPERATURE  = 7,$/;"	e	enum:Serializer::PACK_TYPE
P_addset	phreeqcpp/PBasic.cpp	/^P_addset(register long *l_s, register unsigned val)	\/* s := s + [val] *\/$/;"	f	class:PBasic
P_addsetr	phreeqcpp/PBasic.cpp	/^P_addsetr(register long *l_s, register unsigned v1, register unsigned v2)	\/* s := s + [v1..v2] *\/$/;"	f	class:PBasic
P_eof	phreeqcpp/PBasic.cpp	/^P_eof(void)$/;"	f	class:PBasic
P_eoln	phreeqcpp/PBasic.cpp	/^P_eoln(FILE * f)$/;"	f	class:PBasic
P_escapecode	phreeqcpp/PBasic.h	/^	int P_escapecode;$/;"	m	class:PBasic
P_expset	phreeqcpp/PBasic.cpp	/^P_expset(register long *d, register long l_s)	\/* d := s *\/$/;"	f	class:PBasic
P_ioresult	phreeqcpp/PBasic.h	/^	int P_ioresult;$/;"	m	class:PBasic
P_maxpos	phreeqcpp/PBasic.cpp	/^P_maxpos(FILE * f)$/;"	f	class:PBasic
P_packset	phreeqcpp/PBasic.cpp	/^P_packset(register long *l_s)		\/* convert s to a small-set *\/$/;"	f	class:PBasic
P_peek	phreeqcpp/PBasic.cpp	/^P_peek(FILE * f)$/;"	f	class:PBasic
P_readlnpaoc	phreeqcpp/PBasic.cpp	/^P_readlnpaoc(FILE * f, char *l_s, int len)$/;"	f	class:PBasic
P_readpaoc	phreeqcpp/PBasic.cpp	/^P_readpaoc(FILE * f, char *l_s, int len)$/;"	f	class:PBasic
P_remset	phreeqcpp/PBasic.cpp	/^P_remset(register long *l_s, register unsigned val)	\/* s := s - [val] *\/$/;"	f	class:PBasic
P_setcpy	phreeqcpp/PBasic.cpp	/^P_setcpy(register long *d, register long *l_s)	\/* d := s *\/$/;"	f	class:PBasic
P_setdiff	phreeqcpp/PBasic.cpp	/^P_setdiff(register long *d, register long *s1, register long *s2)	\/* d := s1 - s2 *\/$/;"	f	class:PBasic
P_setequal	phreeqcpp/PBasic.cpp	/^P_setequal(register long *s1, register long *s2)	\/* s1 = s2 *\/$/;"	f	class:PBasic
P_setint	phreeqcpp/PBasic.cpp	/^P_setint(register long *d, register long *s1, register long *s2)	\/* d := s1 * s2 *\/$/;"	f	class:PBasic
P_setunion	phreeqcpp/PBasic.cpp	/^P_setunion(register long *d, register long *s1, register long *s2)	\/* d := s1 + s2 *\/$/;"	f	class:PBasic
P_setxor	phreeqcpp/PBasic.cpp	/^P_setxor(register long *d, register long *s1, register long *s2)	\/* d := s1 \/ s2 *\/$/;"	f	class:PBasic
P_subset	phreeqcpp/PBasic.cpp	/^P_subset(register long *s1, register long *s2)	\/* s1 <= s2 *\/$/;"	f	class:PBasic
P_trimname	phreeqcpp/PBasic.cpp	/^P_trimname(register char * fn, register int len)$/;"	f	class:PBasic
PanelHeight	phreeqcpp/ChartObject.h	/^	int PanelHeight;$/;"	m	class:ChartObject
PanelWidth	phreeqcpp/ChartObject.h	/^	int PanelWidth;$/;"	m	class:ChartObject
Phreeqc	phreeqcpp/Phreeqc.cpp	/^Phreeqc::Phreeqc(PHRQ_io *io)$/;"	f	class:Phreeqc
Phreeqc	phreeqcpp/Phreeqc.cpp	/^Phreeqc::Phreeqc(const Phreeqc &src)$/;"	f	class:Phreeqc
Phreeqc	phreeqcpp/Phreeqc.h	/^class Phreeqc$/;"	c
PhreeqcPtr	IPhreeqc.hpp	/^	Phreeqc* PhreeqcPtr;$/;"	m	class:IPhreeqc
PhreeqcPtr	phreeqcpp/PBasic.h	/^	Phreeqc * PhreeqcPtr;$/;"	m	class:PBasic
PhreeqcPtr	phreeqcpp/UserPunch.h	/^	Phreeqc *                 PhreeqcPtr;$/;"	m	class:UserPunch
PhreeqcStop	phreeqcpp/common/PHRQ_io.h	/^class PhreeqcStop : public std::exception$/;"	c
Pressure	phreeqcpp/global_structures.h	/^	Kinetics, Mix, Temperature, Pressure, UnKnown$/;"	e	enum:entity_type
Pressure_for_step	phreeqcpp/Pressure.cxx	/^Pressure_for_step(int step_number)$/;"	f	class:cxxPressure
Pressures	phreeqcpp/StorageBin.h	/^	std::map < int, cxxPressure > Pressures;$/;"	m	class:cxxStorageBin
Prime1	phreeqcpp/global_structures.h	/^# define Prime1	/;"	d
Prime2	phreeqcpp/global_structures.h	/^# define Prime2	/;"	d
ProcessMessages	phreeqcpp/Phreeqc.h	/^	int ProcessMessages, ShowProgress, ShowProgressWindow, ShowChart;$/;"	m	class:Phreeqc
Punch_user_graph	phreeqcpp/ChartHandler.cpp	/^ChartHandler::Punch_user_graph(Phreeqc * phreeqc_ptr)$/;"	f	class:ChartHandler
Pure_phase	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
PushBack	CSelectedOutput.cpp	/^int CSelectedOutput::PushBack(const char* key, const CVar& var)$/;"	f	class:CSelectedOutput
PushBackDouble	CSelectedOutput.cpp	/^int CSelectedOutput::PushBackDouble(const char* key, double value)$/;"	f	class:CSelectedOutput
PushBackEmpty	CSelectedOutput.cpp	/^int CSelectedOutput::PushBackEmpty(const char* key)$/;"	f	class:CSelectedOutput
PushBackLong	CSelectedOutput.cpp	/^int CSelectedOutput::PushBackLong(const char* key, long value)$/;"	f	class:CSelectedOutput
PushBackString	CSelectedOutput.cpp	/^int CSelectedOutput::PushBackString(const char* key, const char* value)$/;"	f	class:CSelectedOutput
Q0	phreeqcpp/Phreeqc.h	/^	LDBLE Q0, Q5;$/;"	m	class:Phreeqc
Q5	phreeqcpp/Phreeqc.h	/^	LDBLE Q0, Q5;$/;"	m	class:Phreeqc
QBrn	phreeqcpp/Phreeqc.h	/^	LDBLE QBrn; \/\/ Born function d(ln(eps_r))\/dP \/ eps_r * 41.84004, for supcrt calc'n of molal volume$/;"	m	class:Phreeqc
QCUR	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
QQ	phreeqcpp/dw.cpp	/^QQ(LDBLE T, LDBLE D)$/;"	f	class:Phreeqc
QU	phreeqcpp/cvode.h	/^		NST, NFE, NSETUPS, NNI, NCFN, NETF, QU, QCUR,$/;"	e	enum:__anon11
Q_MAX	phreeqcpp/cvode.h	/^#define Q_MAX /;"	d
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RCONST	phreeqcpp/sundialstypes.h	/^#define RCONST(/;"	d
RDIV	phreeqcpp/cvode.cpp	/^#define RDIV /;"	d	file:
REACTION	phreeqcpp/global_structures.h	/^#define REACTION	/;"	d
REACTION_H_INCLUDED	phreeqcpp/Reaction.h	/^#define REACTION_H_INCLUDED$/;"	d
REF_PRES_PASCAL	phreeqcpp/global_structures.h	/^#define REF_PRES_PASCAL /;"	d
RELEASE_DATE	Version.h	/^#define RELEASE_DATE /;"	d
REP_CONV_FAIL	phreeqcpp/cvode.cpp	/^#define REP_CONV_FAIL /;"	d	file:
REP_ERR_FAIL	phreeqcpp/cvode.cpp	/^#define REP_ERR_FAIL /;"	d	file:
RESERVE_COLS	CSelectedOutput.cpp	/^const size_t RESERVE_COLS = 80;$/;"	v
RESERVE_ROWS	CSelectedOutput.cpp	/^const size_t RESERVE_ROWS = 80;$/;"	v
REWRITE	phreeqcpp/global_structures.h	/^#define REWRITE /;"	d
RPowerI	phreeqcpp/sundialsmath.cpp	/^RPowerI(realtype base, int exponent)$/;"	f
RPowerR	phreeqcpp/sundialsmath.cpp	/^RPowerR(realtype base, realtype exponent)$/;"	f
RSqrt	phreeqcpp/sundialsmath.cpp	/^RSqrt(realtype x)$/;"	f
RUNNER_H_INCLUDED	phreeqcpp/runner.h	/^#define RUNNER_H_INCLUDED$/;"	d
R_KCAL_DEG_MOL	phreeqcpp/global_structures.h	/^#define R_KCAL_DEG_MOL /;"	d
R_KJ_DEG_MOL	phreeqcpp/global_structures.h	/^#define R_KJ_DEG_MOL /;"	d
R_LITER_ATM	phreeqcpp/global_structures.h	/^#define R_LITER_ATM /;"	d
R_TK	phreeqcpp/Phreeqc.h	/^	LDBLE a_aa_sum, b2, b_sum, R_TK;$/;"	m	class:Phreeqc
Rate_free	phreeqcpp/ChartObject.cpp	/^ChartObject::Rate_free(void)$/;"	f	class:ChartObject
Reaction	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
Reactions	phreeqcpp/StorageBin.h	/^	std::map < int, cxxReaction > Reactions;$/;"	m	class:cxxStorageBin
Read	phreeqcpp/ChartHandler.cpp	/^ChartHandler::Read(Phreeqc * phreeqc_ptr, CParser &parser)$/;"	f	class:ChartHandler
Read	phreeqcpp/ChartObject.cpp	/^ChartObject::Read(CParser & parser)$/;"	f	class:ChartObject
Read	phreeqcpp/StorageBinList.cpp	/^bool StorageBinList::Read(CParser & parser)$/;"	f	class:StorageBinList
Read	phreeqcpp/dumper.cpp	/^bool dumper::Read(CParser & parser)$/;"	f	class:dumper
Read	phreeqcpp/runner.cpp	/^bool runner::Read(CParser & parser)$/;"	f	class:runner
Remove	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove(int n)$/;"	f	class:cxxStorageBin
Remove_Exchange	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Exchange(int n_user)$/;"	f	class:cxxStorageBin
Remove_GasPhase	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_GasPhase(int n_user)$/;"	f	class:cxxStorageBin
Remove_Kinetics	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Kinetics(int n_user)$/;"	f	class:cxxStorageBin
Remove_Mix	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Mix(int n_user)$/;"	f	class:cxxStorageBin
Remove_PPassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_PPassemblage(int n_user)$/;"	f	class:cxxStorageBin
Remove_Pressure	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Pressure(int n_user)$/;"	f	class:cxxStorageBin
Remove_Reaction	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Reaction(int n_user)$/;"	f	class:cxxStorageBin
Remove_SSassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_SSassemblage(int n_user)$/;"	f	class:cxxStorageBin
Remove_Solution	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Solution(int n_user)$/;"	f	class:cxxStorageBin
Remove_Surface	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Surface(int n_user)$/;"	f	class:cxxStorageBin
Remove_Temperature	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Remove_Temperature(int n_user)$/;"	f	class:cxxStorageBin
Reset	phreeqcpp/SelectedOutput.cpp	/^SelectedOutput::Reset(bool value)$/;"	f	class:SelectedOutput
Return_SymbolType	phreeqcpp/ChartObject.cpp	/^ChartObject::Return_SymbolType(const std::string sym)$/;"	f	class:ChartObject
RhsFn	phreeqcpp/cvode.h	/^	typedef void (*RhsFn) (integertype N, realtype t, N_Vector y,$/;"	t
RowOffset	phreeqcpp/Phreeqc.h	/^	int RowOffset, ColumnOffset;$/;"	m	class:Phreeqc
RunAccumulated	IPhreeqc.cpp	/^int IPhreeqc::RunAccumulated(void)$/;"	f	class:IPhreeqc
RunAccumulated	IPhreeqcF.f	/^      FUNCTION RunAccumulated(/;"	f
RunAccumulated	IPhreeqcLib.cpp	/^RunAccumulated(int id)$/;"	f
RunAccumulated	IPhreeqc_interface.F90	/^INTEGER FUNCTION RunAccumulated(/;"	f	module:IPhreeqc
RunAccumulatedF	IPhreeqc_interface_F.cpp	/^RunAccumulatedF(int *id)$/;"	f
RunAccumulatedF	IPhreeqc_interface_F.h	/^#define RunAccumulatedF /;"	d
RunAccumulatedF	fwrap.cpp	/^RunAccumulatedF(int *id)$/;"	f
RunAccumulatedF	fwrap.h	/^#define RunAccumulatedF /;"	d
RunFile	IPhreeqc.cpp	/^int IPhreeqc::RunFile(const char* filename)$/;"	f	class:IPhreeqc
RunFile	IPhreeqcF.f	/^      FUNCTION RunFile(/;"	f
RunFile	IPhreeqcLib.cpp	/^RunFile(int id, const char* filename)$/;"	f
RunFile	IPhreeqc_interface.F90	/^INTEGER FUNCTION RunFile(/;"	f	module:IPhreeqc
RunFileF	IPhreeqc_interface_F.cpp	/^RunFileF(int *id, char* filename)$/;"	f
RunFileF	IPhreeqc_interface_F.h	/^#define RunFileF /;"	d
RunFileF	fwrap.cpp	/^RunFileF(int *id, char* filename, size_t filename_length)$/;"	f
RunFileF	fwrap.h	/^#define RunFileF /;"	d
RunString	IPhreeqc.cpp	/^int IPhreeqc::RunString(const char* input)$/;"	f	class:IPhreeqc
RunString	IPhreeqcF.f	/^      FUNCTION RunString(/;"	f
RunString	IPhreeqcLib.cpp	/^RunString(int id, const char* input)$/;"	f
RunString	IPhreeqc_interface.F90	/^INTEGER FUNCTION RunString(/;"	f	module:IPhreeqc
RunStringF	IPhreeqc_interface_F.cpp	/^RunStringF(int *id, char* input)$/;"	f
RunStringF	IPhreeqc_interface_F.h	/^#define RunStringF /;"	d
RunStringF	fwrap.cpp	/^RunStringF(int *id, char* input, size_t input_length)$/;"	f
RunStringF	fwrap.h	/^#define RunStringF /;"	d
Rxn_copies	phreeqcpp/Phreeqc.h	/^	void Rxn_copies(std::map < int, T > &b, int n_user, int n_user_end)$/;"	f	namespace:Utilities
Rxn_copy	phreeqcpp/Phreeqc.h	/^	T * Rxn_copy(std::map < int, T > &b, int i, int j)$/;"	f	namespace:Utilities
Rxn_dump_raw	phreeqcpp/Phreeqc.h	/^	void Rxn_dump_raw(const T & b, std::ostream & s_oss, unsigned int indent)$/;"	f	namespace:Utilities
Rxn_exchange_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxExchange> Rxn_exchange_map;$/;"	m	class:Phreeqc
Rxn_exchange_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_exchange_mix_map;$/;"	m	class:Phreeqc
Rxn_find	phreeqcpp/Phreeqc.h	/^	T * Rxn_find(std::map < int, T > &b, int i)$/;"	f	namespace:Utilities
Rxn_gas_phase_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxGasPhase> Rxn_gas_phase_map;$/;"	m	class:Phreeqc
Rxn_gas_phase_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_gas_phase_mix_map;$/;"	m	class:Phreeqc
Rxn_kinetics_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxKinetics> Rxn_kinetics_map;$/;"	m	class:Phreeqc
Rxn_kinetics_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_kinetics_mix_map;$/;"	m	class:Phreeqc
Rxn_mix	phreeqcpp/Phreeqc.h	/^	void Rxn_mix(std::map <int, cxxMix> &mix_map, std::map < int, T > &entity_map, Phreeqc * phreeqc_cookie)$/;"	f	namespace:Utilities
Rxn_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_mix_map;$/;"	m	class:Phreeqc
Rxn_new_exchange	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_exchange;$/;"	m	class:Phreeqc
Rxn_new_gas_phase	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_gas_phase;$/;"	m	class:Phreeqc
Rxn_new_kinetics	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_kinetics;     \/\/ not used$/;"	m	class:Phreeqc
Rxn_new_mix	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_mix;          \/\/ not used$/;"	m	class:Phreeqc
Rxn_new_pp_assemblage	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_pp_assemblage;$/;"	m	class:Phreeqc
Rxn_new_pressure	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_pressure;     \/\/ not used$/;"	m	class:Phreeqc
Rxn_new_reaction	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_reaction;     \/\/ not used$/;"	m	class:Phreeqc
Rxn_new_solution	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_solution;$/;"	m	class:Phreeqc
Rxn_new_ss_assemblage	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_ss_assemblage;$/;"	m	class:Phreeqc
Rxn_new_surface	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_surface;$/;"	m	class:Phreeqc
Rxn_new_temperature	phreeqcpp/Phreeqc.h	/^	std::set<int> Rxn_new_temperature;  \/\/ not used$/;"	m	class:Phreeqc
Rxn_next_user_number	phreeqcpp/Phreeqc.h	/^	int Rxn_next_user_number(std::map < int, T > &b)$/;"	f	namespace:Utilities
Rxn_pp_assemblage_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxPPassemblage> Rxn_pp_assemblage_map;$/;"	m	class:Phreeqc
Rxn_pp_assemblage_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_pp_assemblage_mix_map;$/;"	m	class:Phreeqc
Rxn_pressure_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxPressure> Rxn_pressure_map;$/;"	m	class:Phreeqc
Rxn_reaction_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxReaction> Rxn_reaction_map;$/;"	m	class:Phreeqc
Rxn_read_modify	phreeqcpp/Phreeqc.h	/^	int Rxn_read_modify(std::map < int, T > &m, std::set < int > &s, Phreeqc * phreeqc_cookie)$/;"	f	namespace:Utilities
Rxn_read_raw	phreeqcpp/Phreeqc.h	/^	int Rxn_read_raw(std::map < int, T > &m, std::set < int > &s, Phreeqc * phreeqc_cookie)$/;"	f	namespace:Utilities
Rxn_solution_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxSolution> Rxn_solution_map;$/;"	m	class:Phreeqc
Rxn_solution_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_solution_mix_map;$/;"	m	class:Phreeqc
Rxn_ss_assemblage_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxSSassemblage> Rxn_ss_assemblage_map;$/;"	m	class:Phreeqc
Rxn_ss_assemblage_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_ss_assemblage_mix_map;$/;"	m	class:Phreeqc
Rxn_surface_map	phreeqcpp/Phreeqc.h	/^	std::map <int, cxxSurface> Rxn_surface_map;$/;"	m	class:Phreeqc
Rxn_surface_mix_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxMix> Rxn_surface_mix_map;$/;"	m	class:Phreeqc
Rxn_temperature_map	phreeqcpp/Phreeqc.h	/^	std::map<int, cxxTemperature> Rxn_temperature_map;$/;"	m	class:Phreeqc
SCALE_ALL	phreeqcpp/inverse.cpp	/^#define SCALE_ALL /;"	d	file:
SCALE_EPSILON	phreeqcpp/inverse.cpp	/^#define SCALE_EPSILON /;"	d	file:
SCALE_WATER	phreeqcpp/inverse.cpp	/^#define SCALE_WATER /;"	d	file:
SCANFORMAT	phreeqcpp/common/phrqtype.h	/^#define SCANFORMAT /;"	d
SED	Makefile	/^SED = \/opt\/local\/bin\/gsed$/;"	m
SELECTEDOUTPUT_H_INCLUDED	phreeqcpp/SelectedOutput.h	/^#define SELECTEDOUTPUT_H_INCLUDED$/;"	d
SERIALIZER_H_INCLUDED	phreeqcpp/Serializer.h	/^#define SERIALIZER_H_INCLUDED$/;"	d
SETBITS	phreeqcpp/PBasic.h	/^#define SETBITS /;"	d
SETUP_FAILED	phreeqcpp/cvode.cpp	/^#define SETUP_FAILED /;"	d	file:
SETUP_FAILURE	phreeqcpp/cvode.h	/^		SETUP_FAILURE = -7, SOLVE_FAILURE = -8$/;"	e	enum:__anon9
SETUP_FAIL_UNREC	phreeqcpp/cvode.cpp	/^#define SETUP_FAIL_UNREC /;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHRINK_ARRAY	phreeqcpp/model.cpp	/^#define SHRINK_ARRAY$/;"	d	file:
SITES_ABSOLUTE	phreeqcpp/Surface.h	/^	{ SITES_ABSOLUTE, SITES_DENSITY };$/;"	e	enum:cxxSurface::SITES_UNITS
SITES_DENSITY	phreeqcpp/Surface.h	/^	{ SITES_ABSOLUTE, SITES_DENSITY };$/;"	e	enum:cxxSurface::SITES_UNITS
SITES_UNITS	phreeqcpp/Surface.h	/^	enum SITES_UNITS$/;"	g	class:cxxSurface
SLACK	phreeqcpp/global_structures.h	/^#define SLACK /;"	d
SLDET	phreeqcpp/cvode.h	/^		LENRW, LENIW, SLDET, NOR$/;"	e	enum:__anon11
SMALL_NEF	phreeqcpp/cvode.cpp	/^#define SMALL_NEF /;"	d	file:
SMALL_NST	phreeqcpp/cvode.cpp	/^#define SMALL_NST /;"	d	file:
SOLID	phreeqcpp/global_structures.h	/^#define SOLID /;"	d
SOLUTIONISOTOPE_H_INCLUDED	phreeqcpp/SolutionIsotope.h	/^#define SOLUTIONISOTOPE_H_INCLUDED$/;"	d
SOLUTION_H_INCLUDED	phreeqcpp/Solution.h	/^#define SOLUTION_H_INCLUDED$/;"	d
SOLUTION_PHASE_BOUNDARY	phreeqcpp/global_structures.h	/^#define SOLUTION_PHASE_BOUNDARY /;"	d
SOLVED	phreeqcpp/cvode.cpp	/^#define SOLVED /;"	d	file:
SOLVE_FAILED	phreeqcpp/cvode.cpp	/^#define SOLVE_FAILED /;"	d	file:
SOLVE_FAILURE	phreeqcpp/cvode.h	/^		SETUP_FAILURE = -7, SOLVE_FAILURE = -8$/;"	e	enum:__anon9
SOLVE_FAIL_UNREC	phreeqcpp/cvode.cpp	/^#define SOLVE_FAIL_UNREC /;"	d	file:
SOURCES	Makefile	/^SOURCES = $(libiphreeqc_la_SOURCES)$/;"	m
SQR	phreeqcpp/sundialsmath.h	/^#define SQR(/;"	d
SRC	Makefile	/^SRC = $(top_srcdir)\/src\/README.Fortran $(am__append_1)$/;"	m
SS	phreeqcpp/cvode.h	/^	{ SS, SV };					\/* itol *\/$/;"	e	enum:__anon6
SS	phreeqcpp/cvode.h	/^#undef SS$/;"	d
SSASSEMBLAGESS_H_INCLUDED	phreeqcpp/SS.h	/^#define SSASSEMBLAGESS_H_INCLUDED$/;"	d
SSASSEMBLAGE_H_INCLUDED	phreeqcpp/SSassemblage.h	/^#define SSASSEMBLAGE_H_INCLUDED$/;"	d
SSCOMP_H_INCLUDED	phreeqcpp/SScomp.h	/^#define SSCOMP_H_INCLUDED$/;"	d
SS_MOLES	phreeqcpp/global_structures.h	/^#define SS_MOLES /;"	d
SS_PARAMETER_TYPE	phreeqcpp/SS.h	/^	enum SS_PARAMETER_TYPE$/;"	g	class:cxxSS
SS_PARM_A0_A1	phreeqcpp/SS.h	/^		SS_PARM_A0_A1 = 0,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_ALYOTROPIC	phreeqcpp/SS.h	/^		SS_PARM_ALYOTROPIC = 6,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_CRITICAL	phreeqcpp/SS.h	/^		SS_PARM_CRITICAL = 5,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_DIM_GUGG	phreeqcpp/SS.h	/^		SS_PARM_DIM_GUGG = 7,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_DIST_COEF	phreeqcpp/SS.h	/^		SS_PARM_DIST_COEF = 2,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_GAMMAS	phreeqcpp/SS.h	/^		SS_PARM_GAMMAS = 1,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_MARGULES	phreeqcpp/SS.h	/^		SS_PARM_MARGULES = 9$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_MISCIBILITY	phreeqcpp/SS.h	/^		SS_PARM_MISCIBILITY = 3,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_NONE	phreeqcpp/SS.h	/^		SS_PARM_NONE = -1,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_SPINODAL	phreeqcpp/SS.h	/^		SS_PARM_SPINODAL = 4,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SS_PARM_WALDBAUM	phreeqcpp/SS.h	/^		SS_PARM_WALDBAUM = 8,$/;"	e	enum:cxxSS::SS_PARAMETER_TYPE
SSassemblages	phreeqcpp/StorageBin.h	/^	std::map < int, cxxSSassemblage > SSassemblages;$/;"	m	class:cxxStorageBin
SSs	phreeqcpp/SSassemblage.h	/^	std::map < std::string, cxxSS > SSs;$/;"	m	class:cxxSSassemblage
STAG	phreeqcpp/global_structures.h	/^#define STAG /;"	d
STATUS_TYPE	phreeqcpp/common/Parser.h	/^	enum STATUS_TYPE$/;"	g	class:CParser
STOP	phreeqcpp/PBasic.cpp	/^#define STOP /;"	d	file:
STOP	phreeqcpp/global_structures.h	/^#define STOP /;"	d
STORAGEBINLIST_H_INCLUDED	phreeqcpp/StorageBinList.h	/^#define STORAGEBINLIST_H_INCLUDED$/;"	d
STORAGEBIN_H_INCLUDED	phreeqcpp/StorageBin.h	/^#define STORAGEBIN_H_INCLUDED$/;"	d
STRING	phreeqcpp/spread.cpp	/^#define STRING /;"	d	file:
STRIP	Makefile	/^STRIP = strip$/;"	m
SUCCESS	phreeqcpp/cvode.h	/^	{ SUCCESS = 0, CVODE_NO_MEM = -1, ILL_INPUT = -2, TOO_MUCH_WORK = -3,$/;"	e	enum:__anon9
SUCCESS_STEP	phreeqcpp/cvode.cpp	/^#define SUCCESS_STEP /;"	d	file:
SUNDIALS_DOUBLE	phreeqcpp/sundialstypes.h	/^#define SUNDIALS_DOUBLE /;"	d
SUNDIALS_FLOAT	phreeqcpp/sundialstypes.h	/^#define SUNDIALS_FLOAT /;"	d
SUNDIALS_INT	phreeqcpp/sundialstypes.h	/^#define SUNDIALS_INT /;"	d
SUNDIALS_LONG	phreeqcpp/sundialstypes.h	/^#define SUNDIALS_LONG /;"	d
SURF	phreeqcpp/global_structures.h	/^#define SURF /;"	d
SURFACE	phreeqcpp/global_structures.h	/^#define SURFACE /;"	d
SURFACECHARGE_H_INCLUDED	phreeqcpp/SurfaceCharge.h	/^#define SURFACECHARGE_H_INCLUDED$/;"	d
SURFACECOMP_H_INCLUDED	phreeqcpp/SurfaceComp.h	/^#define SURFACECOMP_H_INCLUDED$/;"	d
SURFACE_CB	phreeqcpp/global_structures.h	/^#define SURFACE_CB /;"	d
SURFACE_CB1	phreeqcpp/global_structures.h	/^#define SURFACE_CB1 /;"	d
SURFACE_CB2	phreeqcpp/global_structures.h	/^#define SURFACE_CB2 /;"	d
SURFACE_H_INCLUDED	phreeqcpp/Surface.h	/^#define SURFACE_H_INCLUDED$/;"	d
SURFACE_TYPE	phreeqcpp/Surface.h	/^	enum SURFACE_TYPE$/;"	g	class:cxxSurface
SURF_PSI	phreeqcpp/global_structures.h	/^#define SURF_PSI /;"	d
SURF_PSI1	phreeqcpp/global_structures.h	/^#define SURF_PSI1 /;"	d
SURF_PSI2	phreeqcpp/global_structures.h	/^#define SURF_PSI2 /;"	d
SV	phreeqcpp/cvode.h	/^	{ SS, SV };					\/* itol *\/$/;"	e	enum:__anon6
SYSTEM_H_INCLUDED	phreeqcpp/System.h	/^#define SYSTEM_H_INCLUDED$/;"	d
SaveCurvesToFile	phreeqcpp/ChartObject.cpp	/^ChartObject::SaveCurvesToFile(std::string &file_name)$/;"	f	class:ChartObject
Segment	phreeqcpp/global_structures.h	/^} Element, *Segment;$/;"	t	typeref:struct:Element
SegmentCount	phreeqcpp/global_structures.h	/^	short SegmentCount;			\/* current # segments   *\/$/;"	m	struct:__anon19
SegmentSize	phreeqcpp/global_structures.h	/^# define SegmentSize	/;"	d
SegmentSizeShift	phreeqcpp/global_structures.h	/^# define SegmentSizeShift	/;"	d
SelectedOutput	phreeqcpp/SelectedOutput.cpp	/^SelectedOutput::SelectedOutput(int n, PHRQ_io *io)$/;"	f	class:SelectedOutput
SelectedOutput	phreeqcpp/SelectedOutput.h	/^class SelectedOutput:public cxxNumKeyword$/;"	c
SelectedOutputFileNameMap	IPhreeqc.hpp	/^	std::map< int, std::string > SelectedOutputFileNameMap;$/;"	m	class:IPhreeqc
SelectedOutputFileOnMap	IPhreeqc.hpp	/^	std::map< int, bool >      SelectedOutputFileOnMap;$/;"	m	class:IPhreeqc
SelectedOutputLinesMap	IPhreeqc.hpp	/^	std::map< int, std::vector< std::string > >   SelectedOutputLinesMap;$/;"	m	class:IPhreeqc
SelectedOutputMap	IPhreeqc.hpp	/^	std::map< int, CSelectedOutput* >             SelectedOutputMap;$/;"	m	class:IPhreeqc
SelectedOutputStringMap	IPhreeqc.hpp	/^	std::map< int, std::string >                  SelectedOutputStringMap;$/;"	m	class:IPhreeqc
SelectedOutputStringOn	IPhreeqc.hpp	/^	std::map< int, bool >                         SelectedOutputStringOn;$/;"	m	class:IPhreeqc
SelectedOutput_map	phreeqcpp/Phreeqc.h	/^	std::map<int, SelectedOutput> SelectedOutput_map;$/;"	m	class:Phreeqc
Serialize	CSelectedOutput.cpp	/^void CSelectedOutput::Serialize($/;"	f	class:CSelectedOutput
Serialize	phreeqcpp/ExchComp.cxx	/^cxxExchComp::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxExchComp
Serialize	phreeqcpp/Exchange.cxx	/^cxxExchange::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxExchange
Serialize	phreeqcpp/GasComp.cxx	/^cxxGasComp::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxGasComp
Serialize	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxGasPhase
Serialize	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxKineticsComp
Serialize	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::Serialize(Dictionary &dictionary, std::vector < int >&ints,$/;"	f	class:cxxNameDouble
Serialize	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxPPassemblage
Serialize	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxPPassemblageComp
Serialize	phreeqcpp/Pressure.cxx	/^cxxPressure::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxPressure
Serialize	phreeqcpp/SS.cxx	/^cxxSS::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSS
Serialize	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSSassemblage
Serialize	phreeqcpp/SScomp.cxx	/^cxxSScomp::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSScomp
Serialize	phreeqcpp/Serializer.cxx	/^bool Serializer::Serialize(Phreeqc &phreeqc_ref, int start, int end, bool include_t, bool include_p, PHRQ_io *io)$/;"	f	class:Serializer
Serialize	phreeqcpp/Solution.cxx	/^cxxSolution::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSolution
Serialize	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxSolutionIsotope
Serialize	phreeqcpp/Surface.cxx	/^cxxSurface::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSurface
Serialize	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfDL::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSurfDL
Serialize	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxSurfaceCharge
Serialize	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxSurfaceComp
Serialize	phreeqcpp/Temperature.cxx	/^cxxTemperature::Serialize(Dictionary & dictionary, std::vector < int >&ints, std::vector < double >&doubles)$/;"	f	class:cxxTemperature
Serialize	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::Serialize(Dictionary & dictionary, std::vector < int >&ints, $/;"	f	class:cxxKinetics
Serializer	phreeqcpp/Serializer.cxx	/^Serializer::Serializer(PHRQ_io *io)$/;"	f	class:Serializer
Serializer	phreeqcpp/Serializer.h	/^class Serializer : public PHRQ_base$/;"	c
SetAll	phreeqcpp/StorageBinList.cpp	/^void StorageBinList::SetAll(bool tf)$/;"	f	class:StorageBinList
SetAll	phreeqcpp/dumper.cpp	/^void dumper::SetAll(bool tf)$/;"	f	class:dumper
SetBasicCallback	IPhreeqc.cpp	/^void IPhreeqc::SetBasicCallback(double (*fcn)(double x1, double x2, const char *str, void *cookie), void *cookie1)$/;"	f	class:IPhreeqc
SetBasicCallback	IPhreeqcLib.cpp	/^SetBasicCallback(int id, double (*fcn)(double x1, double x2, const char *str, void *cookie), void *cookie1)$/;"	f
SetBasicFortranCallback	IPhreeqc.cpp	/^void IPhreeqc::SetBasicFortranCallback(double (*fcn)(double *x1, double *x2, char *str, size_t l))$/;"	f	class:IPhreeqc
SetBasicFortranCallback	IPhreeqc.cpp	/^void IPhreeqc::SetBasicFortranCallback(double (*fcn)(double *x1, double *x2, const char *str, int l))$/;"	f	class:IPhreeqc
SetBasicFortranCallback	IPhreeqcF.f	/^      FUNCTION SetBasicFortranCallback(/;"	f
SetBasicFortranCallback	IPhreeqcLib.cpp	/^SetBasicFortranCallback(int id, double (*fcn)(double *x1, double *x2, char *str, size_t l))$/;"	f
SetBasicFortranCallback	IPhreeqcLib.cpp	/^SetBasicFortranCallback(int id, double (*fcn)(double *x1, double *x2, const char *str, int l))$/;"	f
SetBasicFortranCallback	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetBasicFortranCallback(/;"	f	module:IPhreeqc
SetBasicFortranCallbackF	IPhreeqc_interface_F.cpp	/^SetBasicFortranCallbackF(int *id, double (*fcn)(double *x1, double *x2, char *str, size_t l))$/;"	f
SetBasicFortranCallbackF	IPhreeqc_interface_F.cpp	/^SetBasicFortranCallbackF(int *id, double (*fcn)(double *x1, double *x2, const char *str, int l))$/;"	f
SetBasicFortranCallbackF	IPhreeqc_interface_F.h	/^#define SetBasicFortranCallbackF /;"	d
SetBasicFortranCallbackF	fwrap.cpp	/^SetBasicFortranCallbackF(int *id, double (*fcn)(double *x1, double *x2, char *str, size_t l))$/;"	f
SetBasicFortranCallbackF	fwrap.h	/^#define SetBasicFortranCallbackF /;"	d
SetCallback	phreeqcpp/Phreeqc.h	/^    void SetCallback(BasicCallback *cb) { basicCallback = cb; }$/;"	f	class:Phreeqc
SetCurrentSelectedOutputUserNumber	IPhreeqc.cpp	/^VRESULT IPhreeqc::SetCurrentSelectedOutputUserNumber(int n)$/;"	f	class:IPhreeqc
SetCurrentSelectedOutputUserNumber	IPhreeqcF.f	/^      FUNCTION SetCurrentSelectedOutputUserNumber(/;"	f
SetCurrentSelectedOutputUserNumber	IPhreeqcLib.cpp	/^SetCurrentSelectedOutputUserNumber(int id, int n)$/;"	f
SetCurrentSelectedOutputUserNumber	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetCurrentSelectedOutputUserNumber(/;"	f	module:IPhreeqc
SetCurrentSelectedOutputUserNumberF	IPhreeqc_interface_F.cpp	/^SetCurrentSelectedOutputUserNumberF(int *id, int *n)$/;"	f
SetCurrentSelectedOutputUserNumberF	IPhreeqc_interface_F.h	/^#define SetCurrentSelectedOutputUserNumberF /;"	d
SetCurrentSelectedOutputUserNumberF	fwrap.cpp	/^SetCurrentSelectedOutputUserNumberF(int *id, int *n)$/;"	f
SetCurrentSelectedOutputUserNumberF	fwrap.h	/^#define SetCurrentSelectedOutputUserNumberF /;"	d
SetDumpFileName	IPhreeqc.cpp	/^void IPhreeqc::SetDumpFileName(const char *filename)$/;"	f	class:IPhreeqc
SetDumpFileName	IPhreeqcF.f	/^      FUNCTION SetDumpFileName(/;"	f
SetDumpFileName	IPhreeqcLib.cpp	/^SetDumpFileName(int id, const char* filename)$/;"	f
SetDumpFileName	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetDumpFileName(/;"	f	module:IPhreeqc
SetDumpFileNameF	IPhreeqc_interface_F.cpp	/^SetDumpFileNameF(int *id, char* fname)$/;"	f
SetDumpFileNameF	IPhreeqc_interface_F.h	/^#define SetDumpFileNameF /;"	d
SetDumpFileNameF	fwrap.cpp	/^SetDumpFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
SetDumpFileNameF	fwrap.h	/^#define SetDumpFileNameF /;"	d
SetDumpFileOn	IPhreeqc.cpp	/^void IPhreeqc::SetDumpFileOn(bool bValue)$/;"	f	class:IPhreeqc
SetDumpFileOn	IPhreeqcF.f	/^      FUNCTION SetDumpFileOn(/;"	f
SetDumpFileOn	IPhreeqcLib.cpp	/^SetDumpFileOn(int id, int value)$/;"	f
SetDumpFileOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetDumpFileOn(/;"	f	module:IPhreeqc
SetDumpFileOnF	IPhreeqc_interface_F.cpp	/^SetDumpFileOnF(int *id, int* dump_on)$/;"	f
SetDumpFileOnF	IPhreeqc_interface_F.h	/^#define SetDumpFileOnF /;"	d
SetDumpFileOnF	fwrap.cpp	/^SetDumpFileOnF(int *id, int* dump_on)$/;"	f
SetDumpFileOnF	fwrap.h	/^#define SetDumpFileOnF /;"	d
SetDumpStringOn	IPhreeqc.cpp	/^void IPhreeqc::SetDumpStringOn(bool bValue)$/;"	f	class:IPhreeqc
SetDumpStringOn	IPhreeqcF.f	/^      FUNCTION SetDumpStringOn(/;"	f
SetDumpStringOn	IPhreeqcLib.cpp	/^SetDumpStringOn(int id, int value)$/;"	f
SetDumpStringOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetDumpStringOn(/;"	f	module:IPhreeqc
SetDumpStringOnF	IPhreeqc_interface_F.cpp	/^SetDumpStringOnF(int *id, int* dump_string_on)$/;"	f
SetDumpStringOnF	IPhreeqc_interface_F.h	/^#define SetDumpStringOnF /;"	d
SetDumpStringOnF	fwrap.cpp	/^SetDumpStringOnF(int *id, int* dump_string_on)$/;"	f
SetDumpStringOnF	fwrap.h	/^#define SetDumpStringOnF /;"	d
SetErrorFileName	IPhreeqc.cpp	/^void IPhreeqc::SetErrorFileName(const char *filename)$/;"	f	class:IPhreeqc
SetErrorFileName	IPhreeqcF.f	/^      FUNCTION SetErrorFileName(/;"	f
SetErrorFileName	IPhreeqcLib.cpp	/^SetErrorFileName(int id, const char* filename)$/;"	f
SetErrorFileName	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetErrorFileName(/;"	f	module:IPhreeqc
SetErrorFileNameF	IPhreeqc_interface_F.cpp	/^SetErrorFileNameF(int *id, char* fname)$/;"	f
SetErrorFileNameF	IPhreeqc_interface_F.h	/^#define SetErrorFileNameF /;"	d
SetErrorFileNameF	fwrap.cpp	/^SetErrorFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
SetErrorFileNameF	fwrap.h	/^#define SetErrorFileNameF /;"	d
SetErrorFileOn	IPhreeqc.cpp	/^void IPhreeqc::SetErrorFileOn(bool bValue)$/;"	f	class:IPhreeqc
SetErrorFileOn	IPhreeqcF.f	/^      FUNCTION SetErrorFileOn(/;"	f
SetErrorFileOn	IPhreeqcLib.cpp	/^SetErrorFileOn(int id, int value)$/;"	f
SetErrorFileOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetErrorFileOn(/;"	f	module:IPhreeqc
SetErrorFileOnF	IPhreeqc_interface_F.cpp	/^SetErrorFileOnF(int *id, int* error_file_on)$/;"	f
SetErrorFileOnF	IPhreeqc_interface_F.h	/^#define SetErrorFileOnF /;"	d
SetErrorFileOnF	fwrap.cpp	/^SetErrorFileOnF(int *id, int* error_file_on)$/;"	f
SetErrorFileOnF	fwrap.h	/^#define SetErrorFileOnF /;"	d
SetErrorStringOn	IPhreeqc.cpp	/^void IPhreeqc::SetErrorStringOn(bool bValue)$/;"	f	class:IPhreeqc
SetErrorStringOn	IPhreeqcF.f	/^      FUNCTION SetErrorStringOn(/;"	f
SetErrorStringOn	IPhreeqcLib.cpp	/^SetErrorStringOn(int id, int value)$/;"	f
SetErrorStringOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetErrorStringOn(/;"	f	module:IPhreeqc
SetErrorStringOnF	IPhreeqc_interface_F.cpp	/^SetErrorStringOnF(int *id, int* error_string_on)$/;"	f
SetErrorStringOnF	IPhreeqc_interface_F.h	/^#define SetErrorStringOnF /;"	d
SetErrorStringOnF	fwrap.cpp	/^SetErrorStringOnF(int *id, int* error_string_on)$/;"	f
SetErrorStringOnF	fwrap.h	/^#define SetErrorStringOnF /;"	d
SetLogFileName	IPhreeqc.cpp	/^void IPhreeqc::SetLogFileName(const char *filename)$/;"	f	class:IPhreeqc
SetLogFileName	IPhreeqcF.f	/^      FUNCTION SetLogFileName(/;"	f
SetLogFileName	IPhreeqcLib.cpp	/^SetLogFileName(int id, const char* filename)$/;"	f
SetLogFileName	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetLogFileName(/;"	f	module:IPhreeqc
SetLogFileNameF	IPhreeqc_interface_F.cpp	/^SetLogFileNameF(int *id, char* fname)$/;"	f
SetLogFileNameF	IPhreeqc_interface_F.h	/^#define SetLogFileNameF /;"	d
SetLogFileNameF	fwrap.cpp	/^SetLogFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
SetLogFileNameF	fwrap.h	/^#define SetLogFileNameF /;"	d
SetLogFileOn	IPhreeqc.cpp	/^void IPhreeqc::SetLogFileOn(bool bValue)$/;"	f	class:IPhreeqc
SetLogFileOn	IPhreeqcF.f	/^      FUNCTION SetLogFileOn(/;"	f
SetLogFileOn	IPhreeqcLib.cpp	/^SetLogFileOn(int id, int value)$/;"	f
SetLogFileOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetLogFileOn(/;"	f	module:IPhreeqc
SetLogFileOnF	IPhreeqc_interface_F.cpp	/^SetLogFileOnF(int *id, int* log_on)$/;"	f
SetLogFileOnF	IPhreeqc_interface_F.h	/^#define SetLogFileOnF /;"	d
SetLogFileOnF	fwrap.cpp	/^SetLogFileOnF(int *id, int* log_on)$/;"	f
SetLogFileOnF	fwrap.h	/^#define SetLogFileOnF /;"	d
SetLogStringOn	IPhreeqc.cpp	/^void IPhreeqc::SetLogStringOn(bool bValue)$/;"	f	class:IPhreeqc
SetLogStringOn	IPhreeqcF.f	/^      FUNCTION SetLogStringOn(/;"	f
SetLogStringOn	IPhreeqcLib.cpp	/^SetLogStringOn(int id, int value)$/;"	f
SetLogStringOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetLogStringOn(/;"	f	module:IPhreeqc
SetLogStringOnF	IPhreeqc_interface_F.cpp	/^SetLogStringOnF(int *id, int* log_string_on)$/;"	f
SetLogStringOnF	IPhreeqc_interface_F.h	/^#define SetLogStringOnF /;"	d
SetLogStringOnF	fwrap.cpp	/^SetLogStringOnF(int *id, int* log_string_on)$/;"	f
SetLogStringOnF	fwrap.h	/^#define SetLogStringOnF /;"	d
SetOutputFileName	IPhreeqc.cpp	/^void IPhreeqc::SetOutputFileName(const char *filename)$/;"	f	class:IPhreeqc
SetOutputFileName	IPhreeqcF.f	/^      FUNCTION SetOutputFileName(/;"	f
SetOutputFileName	IPhreeqcLib.cpp	/^SetOutputFileName(int id, const char* filename)$/;"	f
SetOutputFileName	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetOutputFileName(/;"	f	module:IPhreeqc
SetOutputFileNameF	IPhreeqc_interface_F.cpp	/^SetOutputFileNameF(int *id, char* fname)$/;"	f
SetOutputFileNameF	IPhreeqc_interface_F.h	/^#define SetOutputFileNameF /;"	d
SetOutputFileNameF	fwrap.cpp	/^SetOutputFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
SetOutputFileNameF	fwrap.h	/^#define SetOutputFileNameF /;"	d
SetOutputFileOn	IPhreeqc.cpp	/^void IPhreeqc::SetOutputFileOn(bool bValue)$/;"	f	class:IPhreeqc
SetOutputFileOn	IPhreeqcF.f	/^      FUNCTION SetOutputFileOn(/;"	f
SetOutputFileOn	IPhreeqcLib.cpp	/^SetOutputFileOn(int id, int value)$/;"	f
SetOutputFileOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetOutputFileOn(/;"	f	module:IPhreeqc
SetOutputFileOnF	IPhreeqc_interface_F.cpp	/^SetOutputFileOnF(int *id, int* output_on)$/;"	f
SetOutputFileOnF	IPhreeqc_interface_F.h	/^#define SetOutputFileOnF /;"	d
SetOutputFileOnF	fwrap.cpp	/^SetOutputFileOnF(int *id, int* output_on)$/;"	f
SetOutputFileOnF	fwrap.h	/^#define SetOutputFileOnF /;"	d
SetOutputStringOn	IPhreeqc.cpp	/^void IPhreeqc::SetOutputStringOn(bool bValue)$/;"	f	class:IPhreeqc
SetOutputStringOn	IPhreeqcF.f	/^      FUNCTION SetOutputStringOn(/;"	f
SetOutputStringOn	IPhreeqcLib.cpp	/^SetOutputStringOn(int id, int value)$/;"	f
SetOutputStringOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetOutputStringOn(/;"	f	module:IPhreeqc
SetOutputStringOnF	IPhreeqc_interface_F.cpp	/^SetOutputStringOnF(int *id, int* output_string_on)$/;"	f
SetOutputStringOnF	IPhreeqc_interface_F.h	/^#define SetOutputStringOnF /;"	d
SetOutputStringOnF	fwrap.cpp	/^SetOutputStringOnF(int *id, int* output_string_on)$/;"	f
SetOutputStringOnF	fwrap.h	/^#define SetOutputStringOnF /;"	d
SetSelectedOutputFileName	IPhreeqc.cpp	/^void IPhreeqc::SetSelectedOutputFileName(const char *filename)$/;"	f	class:IPhreeqc
SetSelectedOutputFileName	IPhreeqcF.f	/^      FUNCTION SetSelectedOutputFileName(/;"	f
SetSelectedOutputFileName	IPhreeqcLib.cpp	/^SetSelectedOutputFileName(int id, const char* filename)$/;"	f
SetSelectedOutputFileName	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetSelectedOutputFileName(/;"	f	module:IPhreeqc
SetSelectedOutputFileNameF	IPhreeqc_interface_F.cpp	/^SetSelectedOutputFileNameF(int *id, char* fname)$/;"	f
SetSelectedOutputFileNameF	IPhreeqc_interface_F.h	/^#define SetSelectedOutputFileNameF /;"	d
SetSelectedOutputFileNameF	fwrap.cpp	/^SetSelectedOutputFileNameF(int *id, char* fname, size_t fname_length)$/;"	f
SetSelectedOutputFileNameF	fwrap.h	/^#define SetSelectedOutputFileNameF /;"	d
SetSelectedOutputFileOn	IPhreeqc.cpp	/^void IPhreeqc::SetSelectedOutputFileOn(bool bValue)$/;"	f	class:IPhreeqc
SetSelectedOutputFileOn	IPhreeqcF.f	/^      FUNCTION SetSelectedOutputFileOn(/;"	f
SetSelectedOutputFileOn	IPhreeqcLib.cpp	/^SetSelectedOutputFileOn(int id, int value)$/;"	f
SetSelectedOutputFileOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetSelectedOutputFileOn(/;"	f	module:IPhreeqc
SetSelectedOutputFileOnF	IPhreeqc_interface_F.cpp	/^SetSelectedOutputFileOnF(int *id, int* sel_on)$/;"	f
SetSelectedOutputFileOnF	IPhreeqc_interface_F.h	/^#define SetSelectedOutputFileOnF /;"	d
SetSelectedOutputFileOnF	fwrap.cpp	/^SetSelectedOutputFileOnF(int *id, int* sel_on)$/;"	f
SetSelectedOutputFileOnF	fwrap.h	/^#define SetSelectedOutputFileOnF /;"	d
SetSelectedOutputStringOn	IPhreeqc.cpp	/^void IPhreeqc::SetSelectedOutputStringOn(bool bValue)$/;"	f	class:IPhreeqc
SetSelectedOutputStringOn	IPhreeqcF.f	/^      FUNCTION SetSelectedOutputStringOn(/;"	f
SetSelectedOutputStringOn	IPhreeqcLib.cpp	/^SetSelectedOutputStringOn(int id, int value)$/;"	f
SetSelectedOutputStringOn	IPhreeqc_interface.F90	/^INTEGER FUNCTION SetSelectedOutputStringOn(/;"	f	module:IPhreeqc
SetSelectedOutputStringOnF	IPhreeqc_interface_F.cpp	/^SetSelectedOutputStringOnF(int *id, int* selected_output_string_on)$/;"	f
SetSelectedOutputStringOnF	IPhreeqc_interface_F.h	/^#define SetSelectedOutputStringOnF /;"	d
SetSelectedOutputStringOnF	fwrap.cpp	/^SetSelectedOutputStringOnF(int *id, int* selected_output_string_on)$/;"	f
SetSelectedOutputStringOnF	fwrap.h	/^#define SetSelectedOutputStringOnF /;"	d
SetSize	phreeqcpp/Form1.h	/^	private: void SetSize()$/;"	f	class:zdg_ui2::Form1
Set_AddSeries	phreeqcpp/ChartObject.h	/^	void Set_AddSeries(bool b)$/;"	f	class:ChartObject
Set_ColumnOffset	phreeqcpp/ChartObject.h	/^	void Set_ColumnOffset(int i)$/;"	f	class:ChartObject
Set_DDL_limit	phreeqcpp/Surface.h	/^	void Set_DDL_limit(LDBLE t) {DDL_limit = t;}$/;"	f	class:cxxSurface
Set_DDL_viscosity	phreeqcpp/Surface.h	/^	void Set_DDL_viscosity(LDBLE t) {DDL_viscosity = t;}$/;"	f	class:cxxSurface
Set_Dw	phreeqcpp/SurfaceComp.h	/^	void Set_Dw(LDBLE d) {this->Dw = d;}$/;"	f	class:cxxSurfaceComp
Set_Exchange	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Exchange(int n_user, cxxExchange & entity)$/;"	f	class:cxxStorageBin
Set_Exchange	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Exchange(int n_user, cxxExchange * entity)$/;"	f	class:cxxStorageBin
Set_Exchange	phreeqcpp/System.h	/^	void Set_Exchange(cxxExchange * entity)$/;"	f	class:cxxSystem
Set_FirstCallToUSER_GRAPH	phreeqcpp/ChartObject.h	/^	void Set_FirstCallToUSER_GRAPH(bool b)$/;"	f	class:ChartObject
Set_GasPhase	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_GasPhase(int n_user, cxxGasPhase & entity)$/;"	f	class:cxxStorageBin
Set_GasPhase	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_GasPhase(int n_user, cxxGasPhase * entity)$/;"	f	class:cxxStorageBin
Set_GasPhase	phreeqcpp/System.h	/^	void Set_GasPhase(cxxGasPhase * entity)$/;"	f	class:cxxSystem
Set_Kinetics	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Kinetics(int n_user, cxxKinetics & entity)$/;"	f	class:cxxStorageBin
Set_Kinetics	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Kinetics(int n_user, cxxKinetics * entity)$/;"	f	class:cxxStorageBin
Set_Kinetics	phreeqcpp/System.h	/^	void Set_Kinetics(cxxKinetics * entity)$/;"	f	class:cxxSystem
Set_Mix	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Mix(int n_user, cxxMix & entity)$/;"	f	class:cxxStorageBin
Set_Mix	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Mix(int n_user, cxxMix * entity)$/;"	f	class:cxxStorageBin
Set_Mix	phreeqcpp/System.h	/^	void Set_Mix(cxxMix * entity)$/;"	f	class:cxxSystem
Set_PPassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_PPassemblage(int n_user, cxxPPassemblage & entity)$/;"	f	class:cxxStorageBin
Set_PPassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_PPassemblage(int n_user, cxxPPassemblage * entity)$/;"	f	class:cxxStorageBin
Set_PPassemblage	phreeqcpp/System.h	/^	void Set_PPassemblage(cxxPPassemblage * entity)$/;"	f	class:cxxSystem
Set_P_escapecode	phreeqcpp/PBasic.h	/^	void Set_P_escapecode(int code) {P_escapecode = code;};$/;"	f	class:PBasic
Set_PhreeqcPtr	phreeqcpp/UserPunch.h	/^	void Set_PhreeqcPtr(Phreeqc * p) {this->PhreeqcPtr = p;}$/;"	f	class:UserPunch
Set_Pressure	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Pressure(int n_user, cxxPressure & entity)$/;"	f	class:cxxStorageBin
Set_Pressure	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Pressure(int n_user, cxxPressure * entity)$/;"	f	class:cxxStorageBin
Set_Pressure	phreeqcpp/System.h	/^	void Set_Pressure(cxxPressure * entity)$/;"	f	class:cxxSystem
Set_Reaction	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Reaction(int n_user, cxxReaction & entity)$/;"	f	class:cxxStorageBin
Set_Reaction	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Reaction(int n_user, cxxReaction * entity)$/;"	f	class:cxxStorageBin
Set_Reaction	phreeqcpp/System.h	/^	void Set_Reaction(cxxReaction * entity)$/;"	f	class:cxxSystem
Set_SSassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_SSassemblage(int n_user, cxxSSassemblage & entity)$/;"	f	class:cxxStorageBin
Set_SSassemblage	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_SSassemblage(int n_user, cxxSSassemblage * entity)$/;"	f	class:cxxStorageBin
Set_SSassemblage	phreeqcpp/System.h	/^	void Set_SSassemblage(cxxSSassemblage * entity)$/;"	f	class:cxxSystem
Set_SSs	phreeqcpp/SSassemblage.h	/^	void Set_SSs(std::map < std::string, cxxSS > & ss) {SSs = ss;}$/;"	f	class:cxxSSassemblage
Set_Solution	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Solution(int n_user, cxxSolution & entity)$/;"	f	class:cxxStorageBin
Set_Solution	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Solution(int n_user, cxxSolution * entity)$/;"	f	class:cxxStorageBin
Set_Solution	phreeqcpp/System.h	/^	void Set_Solution(cxxSolution * entity)$/;"	f	class:cxxSystem
Set_StorageBinList	phreeqcpp/dumper.h	/^	void Set_StorageBinList(StorageBinList sbl) { this->binList = sbl; };$/;"	f	class:dumper
Set_Surface	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Surface(int n_user, cxxSurface & entity)$/;"	f	class:cxxStorageBin
Set_Surface	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Surface(int n_user, cxxSurface * entity)$/;"	f	class:cxxStorageBin
Set_Surface	phreeqcpp/System.h	/^	void Set_Surface(cxxSurface * entity)$/;"	f	class:cxxSystem
Set_System	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_System(cxxUse *use_ptr)$/;"	f	class:cxxStorageBin
Set_System	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_System(int i)$/;"	f	class:cxxStorageBin
Set_Temperature	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Temperature(int n_user, cxxTemperature & entity)$/;"	f	class:cxxStorageBin
Set_Temperature	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::Set_Temperature(int n_user, cxxTemperature * entity)$/;"	f	class:cxxStorageBin
Set_Temperature	phreeqcpp/System.h	/^	void Set_Temperature(cxxTemperature * entity)$/;"	f	class:cxxSystem
Set_a0	phreeqcpp/SS.h	/^	void Set_a0(LDBLE t) {a0 = t;}$/;"	f	class:cxxSS
Set_a1	phreeqcpp/SS.h	/^	void Set_a1(LDBLE t) {a1 = t;}$/;"	f	class:cxxSS
Set_accumulate	phreeqcpp/common/PHRQ_io.h	/^	void Set_accumulate(bool tf) $/;"	f	class:PHRQ_io
Set_active	phreeqcpp/ChartObject.h	/^	void Set_active(bool tf)$/;"	f	class:ChartObject
Set_active	phreeqcpp/SelectedOutput.h	/^	inline void Set_active(bool tf)                                   {this->active = tf;}$/;"	f	class:SelectedOutput
Set_add_formula	phreeqcpp/PPassemblageComp.h	/^	void Set_add_formula(const char * s)$/;"	f	class:cxxPPassemblageComp
Set_advect_in	phreeqcpp/Use.h	/^	void Set_advect_in(bool tf)           {advect_in = tf;}$/;"	f	class:cxxUse
Set_ag0	phreeqcpp/SS.h	/^	void Set_ag0(LDBLE t) {ag0 = t;}$/;"	f	class:cxxSS
Set_ag1	phreeqcpp/SS.h	/^	void Set_ag1(LDBLE t) {ag1 = t;}$/;"	f	class:cxxSS
Set_ah2o	phreeqcpp/Solution.h	/^	void Set_ah2o(LDBLE l_ah2o)                         {this->ah2o = l_ah2o;}$/;"	f	class:cxxSolution
Set_alk	phreeqcpp/SelectedOutput.h	/^	inline void Set_alk(bool tf)                                      {this->alk = tf;                     this->set_alk = true;}$/;"	f	class:SelectedOutput
Set_append	phreeqcpp/dumper.h	/^	void Set_append(bool app)			{ this->append = app; };$/;"	f	class:dumper
Set_as	phreeqcpp/ISolutionComp.h	/^	void Set_as(const char *l_as)$/;"	f	class:cxxISolutionComp
Set_axis_scale	phreeqcpp/ChartObject.cpp	/^ChartObject::Set_axis_scale(CParser & parser)$/;"	f	class:ChartObject
Set_bad_step_max	phreeqcpp/cxxKinetics.h	/^	void Set_bad_step_max(int t) {bad_step_max = t;}$/;"	f	class:cxxKinetics
Set_base_error_count	phreeqcpp/common/PHRQ_base.h	/^	void Set_base_error_count(int i)$/;"	f	class:PHRQ_base
Set_batch	phreeqcpp/ChartObject.h	/^	void Set_batch(chart_batch_type bt) {this->batch = bt;}$/;"	f	class:ChartObject
Set_batch_background	phreeqcpp/ChartObject.h	/^	void Set_batch_background(bool tf) {this->batch_background = tf;}$/;"	f	class:ChartObject
Set_batch_fn	phreeqcpp/ChartObject.h	/^	void Set_batch_fn(std::string fn)$/;"	f	class:ChartObject
Set_batch_grid	phreeqcpp/ChartObject.h	/^	void Set_batch_grid(bool tf) {this->batch_grid = tf;}$/;"	f	class:ChartObject
Set_capacitance0	phreeqcpp/SurfaceCharge.h	/^	void Set_capacitance0(LDBLE d) {this->capacitance[0] = d;}$/;"	f	class:cxxSurfaceCharge
Set_capacitance1	phreeqcpp/SurfaceCharge.h	/^	void Set_capacitance1(LDBLE d) {this->capacitance[1] = d;}$/;"	f	class:cxxSurfaceCharge
Set_cb	phreeqcpp/Solution.h	/^	void Set_cb(LDBLE l_cb)                             {this->cb = l_cb;}$/;"	f	class:cxxSolution
Set_charge_balance	phreeqcpp/ExchComp.h	/^	void Set_charge_balance(LDBLE d)$/;"	f	class:cxxExchComp
Set_charge_balance	phreeqcpp/SelectedOutput.h	/^	inline void Set_charge_balance(bool tf)                           {this->charge_balance = tf;          this->set_charge_balance = true;}$/;"	f	class:SelectedOutput
Set_charge_balance	phreeqcpp/SurfaceCharge.h	/^	void Set_charge_balance(LDBLE d) {this->charge_balance = d;}$/;"	f	class:cxxSurfaceCharge
Set_charge_balance	phreeqcpp/SurfaceComp.h	/^	void Set_charge_balance(LDBLE d) {this->charge_balance = d;}$/;"	f	class:cxxSurfaceComp
Set_charge_name	phreeqcpp/SurfaceComp.h	/^	void Set_charge_name(const char * f) {this->charge_name = f ? f : "";}$/;"	f	class:cxxSurfaceComp
Set_coef	phreeqcpp/SolutionIsotope.h	/^	void Set_coef(LDBLE t)   {this->coef = t;}$/;"	f	class:cxxSolutionIsotope
Set_colnr	phreeqcpp/ChartObject.h	/^	void Set_colnr(int i)$/;"	f	class:ChartObject
Set_color	phreeqcpp/CurveObject.h	/^	void Set_color(std::string s)$/;"	f	class:CurveObject
Set_comps	phreeqcpp/ISolution.h	/^	void Set_comps(std::map < std::string, cxxISolutionComp > &c) {this->comps = c;}$/;"	f	class:cxxISolution
Set_connect_simulations	phreeqcpp/ChartObject.h	/^	void Set_connect_simulations(bool val)$/;"	f	class:ChartObject
Set_count	phreeqcpp/Pressure.h	/^	void Set_count(int i) {count = i;}$/;"	f	class:cxxPressure
Set_count	phreeqcpp/cxxKinetics.h	/^	void Set_count(int i) {count = i;}$/;"	f	class:cxxKinetics
Set_countSteps	phreeqcpp/Reaction.h	/^	void Set_countSteps(int i) {countSteps = i;}$/;"	f	class:cxxReaction
Set_countTemps	phreeqcpp/Temperature.h	/^	void Set_countTemps(int i) {countTemps = i;}$/;"	f	class:cxxTemperature
Set_curve_added	phreeqcpp/ChartObject.h	/^	void Set_curve_added(bool tf)$/;"	f	class:ChartObject
Set_cvode_order	phreeqcpp/cxxKinetics.h	/^	void Set_cvode_order(int t) {cvode_order = t;}$/;"	f	class:cxxKinetics
Set_cvode_steps	phreeqcpp/cxxKinetics.h	/^	void Set_cvode_steps(int t) {cvode_steps = t;}$/;"	f	class:cxxKinetics
Set_debye_lengths	phreeqcpp/Surface.h	/^	void Set_debye_lengths(LDBLE t) {debye_lengths = t;}$/;"	f	class:cxxSurface
Set_default_pe	phreeqcpp/ISolution.h	/^	void Set_default_pe(const char * pe)               {default_pe = pe;}$/;"	f	class:cxxISolution
Set_defined	phreeqcpp/StorageBinList.h	/^	void Set_defined(bool tf) { this->defined = tf; };$/;"	f	class:StorageBinListItem
Set_delta	phreeqcpp/PPassemblageComp.h	/^	void Set_delta(LDBLE t) {this->delta = t;}$/;"	f	class:cxxPPassemblageComp
Set_delta	phreeqcpp/SScomp.h	/^	void Set_delta(LDBLE t) {this->delta = t;}$/;"	f	class:cxxSScomp
Set_density	phreeqcpp/Solution.h	/^	void Set_density(LDBLE l_density)                   {this->density = l_density;}$/;"	f	class:cxxSolution
Set_description	phreeqcpp/ISolutionComp.h	/^	void Set_description(const char *l_description)$/;"	f	class:cxxISolutionComp
Set_description	phreeqcpp/NumKeyword.h	/^	void Set_description(const char *str)$/;"	f	class:cxxNumKeyword
Set_description	phreeqcpp/NumKeyword.h	/^	void Set_description(std::string str)$/;"	f	class:cxxNumKeyword
Set_detach	phreeqcpp/ChartObject.h	/^	void Set_detach(bool tf)$/;"	f	class:ChartObject
Set_dg	phreeqcpp/SurfaceCharge.h	/^	void Set_dg(LDBLE t) {dg = t;}$/;"	f	class:cxxSurfDL
Set_dg_g_moles	phreeqcpp/SurfaceCharge.h	/^	void Set_dg_g_moles(LDBLE t) {dg_g_moles = t;}$/;"	f	class:cxxSpeciesDL
Set_dh2o_moles	phreeqcpp/SurfaceCharge.h	/^	void Set_dh2o_moles(LDBLE t) {dh2o_moles = t;}$/;"	f	class:cxxSpeciesDL
Set_diffuse_layer_totals	phreeqcpp/SurfaceCharge.h	/^	void Set_diffuse_layer_totals(cxxNameDouble & nd) {this->diffuse_layer_totals = nd;}$/;"	f	class:cxxSurfaceCharge
Set_dissolve_only	phreeqcpp/PPassemblageComp.h	/^	void Set_dissolve_only(bool tf) {this->dissolve_only = tf;}$/;"	f	class:cxxPPassemblageComp
Set_dist	phreeqcpp/SelectedOutput.h	/^	inline void Set_dist(bool tf)                                     {this->dist = tf;                    this->set_dist = true;}$/;"	f	class:SelectedOutput
Set_dl_type	phreeqcpp/Surface.h	/^	void Set_dl_type(DIFFUSE_LAYER_TYPE t) {dl_type = t;}$/;"	f	class:cxxSurface
Set_dn	phreeqcpp/SS.h	/^	void Set_dn(LDBLE t) {this->dn = t;}$/;"	f	class:cxxSS
Set_dn	phreeqcpp/SScomp.h	/^	void Set_dn(LDBLE t) {this->dn = t;}$/;"	f	class:cxxSScomp
Set_dnb	phreeqcpp/SScomp.h	/^	void Set_dnb(LDBLE t) {this->dnb = t;}$/;"	f	class:cxxSScomp
Set_dnc	phreeqcpp/SScomp.h	/^	void Set_dnc(LDBLE t) {this->dnc = t;}$/;"	f	class:cxxSScomp
Set_done	phreeqcpp/ChartObject.h	/^	void Set_done(bool b)$/;"	f	class:ChartObject
Set_drelated_moles	phreeqcpp/SurfaceCharge.h	/^	void Set_drelated_moles(LDBLE t) {drelated_moles = t;}$/;"	f	class:cxxSpeciesDL
Set_dump_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_dump_on(bool tf)						{this->dump_on = tf;};$/;"	f	class:PHRQ_io
Set_dump_ostream	phreeqcpp/common/PHRQ_io.h	/^	void Set_dump_ostream(std::ostream * out)		{this->dump_ostream = out;};$/;"	f	class:PHRQ_io
Set_dx_moles	phreeqcpp/SurfaceCharge.h	/^	void Set_dx_moles(LDBLE t) {dx_moles = t;}$/;"	f	class:cxxSpeciesDL
Set_dz	phreeqcpp/global_structures.h	/^	void   Set_dz(LDBLE *d)$/;"	f	class:cxxChemRxn
Set_echo_destination	phreeqcpp/common/PHRQ_io.h	/^	void Set_echo_destination(ECHO_OPTION eo)   {this->echo_destination = eo;};$/;"	f	class:PHRQ_io
Set_echo_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_echo_on(bool tf)					{this->echo_on = tf;};$/;"	f	class:PHRQ_io
Set_elementList	phreeqcpp/Reaction.h	/^	void Set_elementList(cxxNameDouble nd) {this->elementList = nd;}$/;"	f	class:cxxReaction
Set_eltList	phreeqcpp/PPassemblage.h	/^	void Set_eltList(cxxNameDouble & nd) {this->eltList = nd;}$/;"	f	class:cxxPPassemblage
Set_elt_name	phreeqcpp/SolutionIsotope.h	/^	void Set_elt_name(const char *cstring)$/;"	f	class:cxxSolutionIsotope
Set_end_timer	phreeqcpp/ChartObject.h	/^	void Set_end_timer(bool b)$/;"	f	class:ChartObject
Set_equalIncrements	phreeqcpp/Pressure.h	/^	void Set_equalIncrements(bool tf) {equalIncrements = tf;}$/;"	f	class:cxxPressure
Set_equalIncrements	phreeqcpp/Reaction.h	/^	void Set_equalIncrements(bool tf) {equalIncrements = tf;}$/;"	f	class:cxxReaction
Set_equalIncrements	phreeqcpp/Temperature.h	/^	void Set_equalIncrements(bool tf) {equalIncrements = tf;}$/;"	f	class:cxxTemperature
Set_equalIncrements	phreeqcpp/cxxKinetics.h	/^	void Set_equalIncrements(bool tf) {equalIncrements = tf;}$/;"	f	class:cxxKinetics
Set_equation_name	phreeqcpp/ISolutionComp.h	/^	void Set_equation_name(const char *l_equation_name)$/;"	f	class:cxxISolutionComp
Set_error_file	phreeqcpp/common/PHRQ_io.h	/^	void Set_error_file(FILE * out)				{this->error_file = out;}$/;"	f	class:PHRQ_io
Set_error_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_error_on(bool tf)						{this->error_on = tf;}$/;"	f	class:PHRQ_io
Set_error_ostream	phreeqcpp/common/PHRQ_io.h	/^	void Set_error_ostream(std::ostream * out)		{this->error_ostream = out;}$/;"	f	class:PHRQ_io
Set_exchange_comps	phreeqcpp/Exchange.h	/^	void Set_exchange_comps(std::vector<cxxExchComp> &c) {this->exchange_comps = c;}$/;"	f	class:cxxExchange
Set_exchange_in	phreeqcpp/Use.h	/^	void Set_exchange_in(bool tf)         {exchange_in = tf;}$/;"	f	class:cxxUse
Set_exchange_ptr	phreeqcpp/Use.h	/^	void Set_exchange_ptr(cxxExchange * p)                   {this->exchange_ptr = p;}$/;"	f	class:cxxUse
Set_file_name	phreeqcpp/SelectedOutput.cpp	/^SelectedOutput::Set_file_name(int n)$/;"	f	class:SelectedOutput
Set_file_name	phreeqcpp/SelectedOutput.h	/^	inline void Set_file_name(std::string s)                          {this->file_name = s;}$/;"	f	class:SelectedOutput
Set_file_name	phreeqcpp/dumper.h	/^	void Set_file_name(std::string fn)	{ this->file_name = fn; };$/;"	f	class:dumper
Set_force_equality	phreeqcpp/PPassemblageComp.h	/^	void Set_force_equality(bool tf) {this->force_equality = tf;}$/;"	f	class:cxxPPassemblageComp
Set_formula	phreeqcpp/ExchComp.h	/^	void Set_formula(const char *cstring)$/;"	f	class:cxxExchComp
Set_formula	phreeqcpp/SurfaceComp.h	/^	void Set_formula(const char * f) {this->formula = f ? f : "";}$/;"	f	class:cxxSurfaceComp
Set_formula_z	phreeqcpp/ExchComp.h	/^	void Set_formula_z(LDBLE d)$/;"	f	class:cxxExchComp
Set_formula_z	phreeqcpp/SurfaceComp.h	/^	void Set_formula_z(LDBLE t) {this->formula_z = t;}$/;"	f	class:cxxSurfaceComp
Set_fraction_x	phreeqcpp/SScomp.h	/^	void Set_fraction_x(LDBLE t) {this->fraction_x = t;}$/;"	f	class:cxxSScomp
Set_g	phreeqcpp/SurfaceCharge.h	/^	void Set_g(LDBLE t) {g = t;}$/;"	f	class:cxxSurfDL
Set_g_map	phreeqcpp/SurfaceCharge.h	/^	void Set_g_map(std::map<LDBLE, cxxSurfDL> & t) {g_map = t;}$/;"	f	class:cxxSurfaceCharge
Set_g_moles	phreeqcpp/SurfaceCharge.h	/^	void Set_g_moles(LDBLE t) {g_moles = t;}$/;"	f	class:cxxSpeciesDL
Set_gas_comps	phreeqcpp/GasPhase.h	/^	void Set_gas_comps(const std::vector<cxxGasComp> v) {gas_comps = v;};$/;"	f	class:cxxGasPhase
Set_gas_phase_in	phreeqcpp/Use.h	/^	void Set_gas_phase_in(bool tf)        {gas_phase_in = tf;}$/;"	f	class:cxxUse
Set_gas_phase_ptr	phreeqcpp/Use.h	/^	void Set_gas_phase_ptr(cxxGasPhase * p)                  {this->gas_phase_ptr = p;}$/;"	f	class:cxxUse
Set_gfw	phreeqcpp/ISolutionComp.h	/^	void Set_gfw(LDBLE l_gfw)$/;"	f	class:cxxISolutionComp
Set_grams	phreeqcpp/SurfaceCharge.h	/^	void Set_grams(LDBLE d) {this->grams = d;}$/;"	f	class:cxxSurfaceCharge
Set_graph_initial_solutions	phreeqcpp/ChartObject.h	/^	void Set_graph_initial_solutions(bool val)$/;"	f	class:ChartObject
Set_graph_x	phreeqcpp/ChartObject.h	/^	void Set_graph_x(LDBLE d)$/;"	f	class:ChartObject
Set_hInfiniteLoop	phreeqcpp/PBasic.h	/^	void Set_hInfiniteLoop(HANDLE h) {hInfiniteLoop = h;};$/;"	f	class:PBasic
Set_have_punch_name	phreeqcpp/SelectedOutput.h	/^	inline void Set_have_punch_name(bool tf)                          {this->have_punch_name = tf;}$/;"	f	class:SelectedOutput
Set_headings	phreeqcpp/UserPunch.h	/^	void Set_headings(std::vector <std::string> & h) {this->headings = h;}$/;"	f	class:UserPunch
Set_high_precision	phreeqcpp/SelectedOutput.h	/^	inline void Set_high_precision(bool tf)                           {this->high_precision = tf;          this->set_high_precision = true;}$/;"	f	class:SelectedOutput
Set_id	phreeqcpp/CurveObject.h	/^	void Set_id(std::string s)$/;"	f	class:CurveObject
Set_init_moles	phreeqcpp/SScomp.h	/^	void Set_init_moles(LDBLE t) {this->init_moles = t;}$/;"	f	class:cxxSScomp
Set_initial_data	phreeqcpp/Solution.h	/^	void Set_initial_data(const cxxISolution * id)$/;"	f	class:cxxSolution
Set_initial_moles	phreeqcpp/GasComp.h	/^	void Set_initial_moles(LDBLE t) {this->initial_moles = t;}$/;"	f	class:cxxGasComp
Set_initial_moles	phreeqcpp/KineticsComp.h	/^	void Set_initial_moles(LDBLE t) {initial_moles = t;}	$/;"	f	class:cxxKineticsComp
Set_initial_moles	phreeqcpp/PPassemblageComp.h	/^	void Set_initial_moles(LDBLE t) {this->initial_moles = t;}$/;"	f	class:cxxPPassemblageComp
Set_initial_moles	phreeqcpp/SScomp.h	/^	void Set_initial_moles(LDBLE t) {this->initial_moles = t;}$/;"	f	class:cxxSScomp
Set_input_case	phreeqcpp/SS.h	/^	void Set_input_case(SS_PARAMETER_TYPE t) {this->input_case = t;}$/;"	f	class:cxxSS
Set_input_conc	phreeqcpp/ISolutionComp.h	/^	void Set_input_conc(LDBLE l_input_conc)$/;"	f	class:cxxISolutionComp
Set_inverse	phreeqcpp/SelectedOutput.h	/^	inline void Set_inverse(bool tf)                                  {this->inverse = tf;                 this->set_inverse = true;}$/;"	f	class:SelectedOutput
Set_inverse_in	phreeqcpp/Use.h	/^	void Set_inverse_in(bool tf)          {inverse_in = tf;}$/;"	f	class:cxxUse
Set_inverse_ptr	phreeqcpp/Use.h	/^	void Set_inverse_ptr(struct inverse * p)                 {this->inverse_ptr = p;}$/;"	f	class:cxxUse
Set_io	phreeqcpp/common/PHRQ_base.h	/^	void Set_io(PHRQ_io * p_io)$/;"	f	class:PHRQ_base
Set_io_error_count	phreeqcpp/common/PHRQ_io.h	/^	void Set_io_error_count(int i)				{this->io_error_count = i;};$/;"	f	class:PHRQ_io
Set_isotope_name	phreeqcpp/SolutionIsotope.h	/^	void Set_isotope_name(const char *cstring)$/;"	f	class:cxxSolutionIsotope
Set_isotope_number	phreeqcpp/SolutionIsotope.h	/^	void Set_isotope_number(LDBLE d)$/;"	f	class:cxxSolutionIsotope
Set_isotopes	phreeqcpp/Solution.h	/^	void Set_isotopes(const std::map < std::string, cxxSolutionIsotope > &iso ) {this->isotopes = iso;}	$/;"	f	class:cxxSolution
Set_kinetics_in	phreeqcpp/Use.h	/^	void Set_kinetics_in(bool tf)         {kinetics_in = tf;}$/;"	f	class:cxxUse
Set_kinetics_ptr	phreeqcpp/Use.h	/^	void Set_kinetics_ptr(cxxKinetics * p)                   {this->kinetics_ptr = p;}$/;"	f	class:cxxUse
Set_la	phreeqcpp/ExchComp.h	/^	void Set_la(LDBLE d)$/;"	f	class:cxxExchComp
Set_la	phreeqcpp/SurfaceComp.h	/^	void Set_la(LDBLE t) {this->la = t;}$/;"	f	class:cxxSurfaceComp
Set_la_psi	phreeqcpp/SurfaceCharge.h	/^	void Set_la_psi(LDBLE d) {this->la_psi = d;}$/;"	f	class:cxxSurfaceCharge
Set_line_w	phreeqcpp/CurveObject.h	/^	void Set_line_w(LDBLE f)$/;"	f	class:CurveObject
Set_log10_fraction_x	phreeqcpp/SScomp.h	/^	void Set_log10_fraction_x(LDBLE t) {this->log10_fraction_x = t;}$/;"	f	class:cxxSScomp
Set_log10_lambda	phreeqcpp/SScomp.h	/^	void Set_log10_lambda(LDBLE t) {this->log10_lambda = t;}$/;"	f	class:cxxSScomp
Set_log_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_log_on(bool tf)						{this->log_on = tf;}$/;"	f	class:PHRQ_io
Set_log_ostream	phreeqcpp/common/PHRQ_io.h	/^	void Set_log_ostream(std::ostream * out)		{this->log_ostream = out;}$/;"	f	class:PHRQ_io
Set_logk	phreeqcpp/global_structures.h	/^	void   Set_logk(LDBLE *d)$/;"	f	class:cxxChemRxn
Set_m	phreeqcpp/KineticsComp.h	/^	void Set_m(LDBLE t) {m = t;}	$/;"	f	class:cxxKineticsComp
Set_m0	phreeqcpp/KineticsComp.h	/^	void Set_m0(LDBLE t) {m0 = t;}	$/;"	f	class:cxxKineticsComp
Set_mass_water	phreeqcpp/Solution.h	/^	void Set_mass_water(LDBLE l_mass_water)             {this->mass_water = l_mass_water;}$/;"	f	class:cxxSolution
Set_mass_water	phreeqcpp/SurfaceCharge.h	/^	void Set_mass_water(LDBLE d) {this->mass_water = d;}$/;"	f	class:cxxSurfaceCharge
Set_master_activity	phreeqcpp/Solution.cxx	/^cxxSolution::Set_master_activity(char *string, LDBLE d)$/;"	f	class:cxxSolution
Set_master_element	phreeqcpp/SurfaceComp.h	/^	void Set_master_element(const char * f) {this->master_element = f ? f : "";}$/;"	f	class:cxxSurfaceComp
Set_miscibility	phreeqcpp/SS.h	/^	void Set_miscibility(bool t) {miscibility = t;}$/;"	f	class:cxxSS
Set_mix_in	phreeqcpp/Use.h	/^	void Set_mix_in(bool tf)              {mix_in = tf;}$/;"	f	class:cxxUse
Set_mix_ptr	phreeqcpp/Use.h	/^	void Set_mix_ptr(cxxMix * p)                             {this->mix_ptr = p;}$/;"	f	class:cxxUse
Set_moles	phreeqcpp/GasComp.h	/^	void Set_moles(LDBLE t) {this->moles = t;}$/;"	f	class:cxxGasComp
Set_moles	phreeqcpp/ISolutionComp.h	/^	void Set_moles(LDBLE l_moles)$/;"	f	class:cxxISolutionComp
Set_moles	phreeqcpp/KineticsComp.h	/^	void Set_moles(LDBLE t) {moles = t;}$/;"	f	class:cxxKineticsComp
Set_moles	phreeqcpp/PPassemblageComp.h	/^	void Set_moles(LDBLE t) {this->moles = t;}$/;"	f	class:cxxPPassemblageComp
Set_moles	phreeqcpp/SScomp.h	/^	void Set_moles(LDBLE t) {this->moles = t;}$/;"	f	class:cxxSScomp
Set_moles	phreeqcpp/SurfaceComp.h	/^	void Set_moles(LDBLE t) {this->moles = t;}$/;"	f	class:cxxSurfaceComp
Set_moles_of_reaction	phreeqcpp/KineticsComp.h	/^	void Set_moles_of_reaction(const cxxNameDouble nd) {moles_of_reaction = nd;}$/;"	f	class:cxxKineticsComp
Set_mu	phreeqcpp/SelectedOutput.h	/^	inline void Set_mu(bool tf)                                       {this->mu = tf;                      this->set_mu = true;}$/;"	f	class:SelectedOutput
Set_mu	phreeqcpp/Solution.h	/^	void Set_mu(LDBLE l_mu)   {this->mu = l_mu;}$/;"	f	class:cxxSolution
Set_nErrLineNumber	phreeqcpp/PBasic.h	/^	void Set_nErrLineNumber(int i) {nErrLineNumber = i;};$/;"	f	class:PBasic
Set_nIDErrPrompt	phreeqcpp/PBasic.h	/^	void Set_nIDErrPrompt(UINT u) {nIDErrPrompt = u;};$/;"	f	class:PBasic
Set_n_exchange_user	phreeqcpp/Use.h	/^	void Set_n_exchange_user(int i)       {n_exchange_user = i;}$/;"	f	class:cxxUse
Set_n_gas_phase_user	phreeqcpp/Use.h	/^	void Set_n_gas_phase_user(int i)      {n_gas_phase_user = i;}$/;"	f	class:cxxUse
Set_n_inverse_user	phreeqcpp/Use.h	/^	void Set_n_inverse_user(int i)        {n_inverse_user = i;}$/;"	f	class:cxxUse
Set_n_kinetics_user	phreeqcpp/Use.h	/^	void Set_n_kinetics_user(int i)       {n_kinetics_user = i;}$/;"	f	class:cxxUse
Set_n_mix_user	phreeqcpp/Use.h	/^	void Set_n_mix_user(int i)            {n_mix_user = i;}$/;"	f	class:cxxUse
Set_n_mix_user_orig	phreeqcpp/Use.h	/^	void Set_n_mix_user_orig(int i)       {n_mix_user_orig = i;}$/;"	f	class:cxxUse
Set_n_pp_assemblage_user	phreeqcpp/Use.h	/^	void Set_n_pp_assemblage_user(int i)  {n_pp_assemblage_user = i;}$/;"	f	class:cxxUse
Set_n_pressure_user	phreeqcpp/Use.h	/^	void Set_n_pressure_user(int i)       {n_pressure_user = i;}$/;"	f	class:cxxUse
Set_n_reaction_user	phreeqcpp/Use.h	/^	void Set_n_reaction_user(int i)       {n_reaction_user = i;}$/;"	f	class:cxxUse
Set_n_solution	phreeqcpp/Exchange.h	/^	void Set_n_solution(int i) {this->n_solution = i;}$/;"	f	class:cxxExchange
Set_n_solution	phreeqcpp/GasPhase.h	/^	void Set_n_solution(int i) {this->n_solution = i;};$/;"	f	class:cxxGasPhase
Set_n_solution	phreeqcpp/Surface.h	/^	void Set_n_solution(int i) {n_solution = i;}$/;"	f	class:cxxSurface
Set_n_solution_user	phreeqcpp/Use.h	/^	void Set_n_solution_user(int i)       {n_solution_user = i;}$/;"	f	class:cxxUse
Set_n_ss_assemblage_user	phreeqcpp/Use.h	/^	void Set_n_ss_assemblage_user(int i)  {n_ss_assemblage_user = i;}$/;"	f	class:cxxUse
Set_n_surface_user	phreeqcpp/Use.h	/^	void Set_n_surface_user(int i)        {n_surface_user = i;}$/;"	f	class:cxxUse
Set_n_temperature_user	phreeqcpp/Use.h	/^	void Set_n_temperature_user(int i)    {n_temperature_user = i;}$/;"	f	class:cxxUse
Set_n_user	phreeqcpp/NumKeyword.h	/^	void Set_n_user(int user)$/;"	f	class:cxxNumKeyword
Set_n_user_both	phreeqcpp/NumKeyword.h	/^	void Set_n_user_both(int user_end)$/;"	f	class:cxxNumKeyword
Set_n_user_end	phreeqcpp/NumKeyword.h	/^	void Set_n_user_end(int user_end)$/;"	f	class:cxxNumKeyword
Set_name	phreeqcpp/PPassemblageComp.h	/^	void Set_name(const char * s)$/;"	f	class:cxxPPassemblageComp
Set_name	phreeqcpp/SS.h	/^	void Set_name (const char * s)$/;"	f	class:cxxSS
Set_name	phreeqcpp/SS.h	/^	void Set_name (const std::string & s) {this->name = s;}$/;"	f	class:cxxSS
Set_name	phreeqcpp/SScomp.h	/^	void Set_name(std::string s) {this->name = s;}$/;"	f	class:cxxSScomp
Set_name	phreeqcpp/SurfaceCharge.h	/^	void Set_name(const char * f) {this->name = f ? f : "";}$/;"	f	class:cxxSurfaceCharge
Set_namecoef	phreeqcpp/KineticsComp.h	/^	void Set_namecoef(const cxxNameDouble nd) {namecoef = nd;}$/;"	f	class:cxxKineticsComp
Set_new_def	phreeqcpp/Exchange.h	/^	void Set_new_def(bool tf) {this->new_def = tf;}$/;"	f	class:cxxExchange
Set_new_def	phreeqcpp/GasPhase.h	/^	void Set_new_def(bool tf) {this->new_def = tf;};$/;"	f	class:cxxGasPhase
Set_new_def	phreeqcpp/PPassemblage.h	/^	void Set_new_def(bool tf) {this->new_def = tf;}$/;"	f	class:cxxPPassemblage
Set_new_def	phreeqcpp/SSassemblage.h	/^	void Set_new_def(bool tf) {new_def = tf;}$/;"	f	class:cxxSSassemblage
Set_new_def	phreeqcpp/SelectedOutput.h	/^	inline void Set_new_def(bool tf)                                  {this->new_def = tf;}$/;"	f	class:SelectedOutput
Set_new_def	phreeqcpp/Solution.h	/^	void Set_new_def(bool p)  {this->new_def = p;}$/;"	f	class:cxxSolution
Set_new_def	phreeqcpp/Surface.h	/^	void Set_new_def(bool tf) {new_def = tf;}$/;"	f	class:cxxSurface
Set_new_ug	phreeqcpp/ChartObject.h	/^	void Set_new_ug(bool b)$/;"	f	class:ChartObject
Set_on	phreeqcpp/dumper.h	/^	void Set_on(bool tf)						{ this->on = tf; };$/;"	f	class:dumper
Set_only_counter_ions	phreeqcpp/Surface.h	/^	void Set_only_counter_ions(bool tf) {only_counter_ions = tf;}$/;"	f	class:cxxSurface
Set_output_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_output_on(bool tf)						{this->output_on = tf;};$/;"	f	class:PHRQ_io
Set_output_ostream	phreeqcpp/common/PHRQ_io.h	/^	void Set_output_ostream(std::ostream * out)		{this->output_ostream = out;};$/;"	f	class:PHRQ_io
Set_p	phreeqcpp/SS.h	/^	void Set_p(const std::vector<LDBLE> & t) {this->p = t;}$/;"	f	class:cxxSS
Set_p_read	phreeqcpp/GasComp.h	/^	void Set_p_read(LDBLE t) {this->p_read = t;}$/;"	f	class:cxxGasComp
Set_parse_all	phreeqcpp/PBasic.h	/^	void Set_parse_all(bool tf) {parse_all = tf;};$/;"	f	class:PBasic
Set_parse_whole_program	phreeqcpp/PBasic.h	/^	void Set_parse_whole_program(bool tf) {parse_whole_program = tf;};$/;"	f	class:PBasic
Set_patm	phreeqcpp/Solution.h	/^	void Set_patm(LDBLE p)    {this->patm = p;}$/;"	f	class:cxxSolution
Set_pe	phreeqcpp/SelectedOutput.h	/^	inline void Set_pe(bool tf)                                       {this->pe = tf;                      this->set_pe = true;}$/;"	f	class:SelectedOutput
Set_pe	phreeqcpp/Solution.h	/^	void Set_pe(LDBLE l_pe)   {this->pe = l_pe;}$/;"	f	class:cxxSolution
Set_pe_reaction	phreeqcpp/ISolutionComp.h	/^	void Set_pe_reaction(const std::string & pe_r)$/;"	f	class:cxxISolutionComp
Set_pe_reactions	phreeqcpp/ISolution.h	/^	void Set_pe_reactions(std::map < std::string, cxxChemRxn >  &pe) {this->pe_reactions = pe;}$/;"	f	class:cxxISolution
Set_percent_error	phreeqcpp/SelectedOutput.h	/^	inline void Set_percent_error(bool tf)                            {this->percent_error = tf;           this->set_percent_error = true;}$/;"	f	class:SelectedOutput
Set_ph	phreeqcpp/SelectedOutput.h	/^	inline void Set_ph(bool tf)                                       {this->ph = tf;                      this->set_ph = true;}$/;"	f	class:SelectedOutput
Set_ph	phreeqcpp/Solution.h	/^	void Set_ph(LDBLE pH)     {this->ph = pH;}$/;"	f	class:cxxSolution
Set_phase_name	phreeqcpp/ExchComp.h	/^	void Set_phase_name(const char *cstring)$/;"	f	class:cxxExchComp
Set_phase_name	phreeqcpp/GasComp.h	/^	void Set_phase_name(std::string s) {this->phase_name = s;}$/;"	f	class:cxxGasComp
Set_phase_name	phreeqcpp/SurfaceComp.h	/^	void Set_phase_name(const char * f) {this->phase_name = f ? f : "";}$/;"	f	class:cxxSurfaceComp
Set_phase_proportion	phreeqcpp/ExchComp.h	/^	void Set_phase_proportion(LDBLE d)$/;"	f	class:cxxExchComp
Set_phase_proportion	phreeqcpp/SurfaceComp.h	/^	void Set_phase_proportion(LDBLE d) {this->phase_proportion = d;}$/;"	f	class:cxxSurfaceComp
Set_phase_si	phreeqcpp/ISolutionComp.h	/^	void Set_phase_si(int l_phase_si)$/;"	f	class:cxxISolutionComp
Set_phreeqc	phreeqcpp/ChartObject.h	/^	void Set_phreeqc(Phreeqc * ptr)$/;"	f	class:ChartObject
Set_phreeqci_gui	phreeqcpp/PBasic.h	/^	void Set_phreeqci_gui(bool tf) {phreeqci_gui = tf;};$/;"	f	class:PBasic
Set_pitzer_exchange_gammas	phreeqcpp/Exchange.cxx	/^cxxExchange::Set_pitzer_exchange_gammas(bool b)$/;"	f	class:cxxExchange
Set_point_added	phreeqcpp/ChartObject.h	/^	void Set_point_added(bool tf)$/;"	f	class:ChartObject
Set_pp_assemblage_comps	phreeqcpp/PPassemblage.h	/^	void  Set_pp_assemblage_comps(std::map <std::string, cxxPPassemblageComp > & c) $/;"	f	class:cxxPPassemblage
Set_pp_assemblage_in	phreeqcpp/Use.h	/^	void Set_pp_assemblage_in(bool tf)    {pp_assemblage_in = tf;}$/;"	f	class:cxxUse
Set_pp_assemblage_ptr	phreeqcpp/Use.h	/^	void Set_pp_assemblage_ptr(cxxPPassemblage * p)          {this->pp_assemblage_ptr = p;}$/;"	f	class:cxxUse
Set_pr_in	phreeqcpp/GasPhase.h	/^	void Set_pr_in(bool tf) {pr_in = tf;};$/;"	f	class:cxxGasPhase
Set_precipitate_only	phreeqcpp/PPassemblageComp.h	/^	void Set_precipitate_only(bool tf) {this->precipitate_only = tf;}$/;"	f	class:cxxPPassemblageComp
Set_pressure_in	phreeqcpp/Use.h	/^	void Set_pressure_in(bool tf)         {pressure_in = tf;}$/;"	f	class:cxxUse
Set_pressure_ptr	phreeqcpp/Use.h	/^	void Set_pressure_ptr(cxxPressure * p)                   {this->pressure_ptr = p;}$/;"	f	class:cxxUse
Set_prev_advection_step	phreeqcpp/ChartObject.h	/^	void Set_prev_advection_step(int i)$/;"	f	class:ChartObject
Set_prev_sim_no	phreeqcpp/ChartObject.h	/^	void Set_prev_sim_no(int i)$/;"	f	class:ChartObject
Set_prev_transport_step	phreeqcpp/ChartObject.h	/^	void Set_prev_transport_step(int i)$/;"	f	class:ChartObject
Set_psi_to_z	phreeqcpp/SurfaceCharge.h	/^	void Set_psi_to_z(LDBLE t) {psi_to_z = t;}$/;"	f	class:cxxSurfDL
Set_punch_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_punch_on(bool tf)						{this->punch_on = tf;}$/;"	f	class:PHRQ_io
Set_punch_ostream	phreeqcpp/SelectedOutput.h	/^	inline void Set_punch_ostream(std::ostream * os)                  {this->punch_ostream = os;}$/;"	f	class:SelectedOutput
Set_punch_ostream	phreeqcpp/common/PHRQ_io.h	/^	void Set_punch_ostream(std::ostream * out)		{this->punch_ostream = out;}$/;"	f	class:PHRQ_io
Set_rate	phreeqcpp/UserPunch.h	/^	void Set_rate(struct rate * r) {this->rate = r;}$/;"	f	class:UserPunch
Set_rate_name	phreeqcpp/ExchComp.h	/^	void Set_rate_name(const char *cstring)$/;"	f	class:cxxExchComp
Set_rate_name	phreeqcpp/KineticsComp.h	/^	void Set_rate_name(const char * s)$/;"	f	class:cxxKineticsComp
Set_rate_name	phreeqcpp/SurfaceComp.h	/^	void Set_rate_name(const char * f) {this->rate_name = f ? f : "";}$/;"	f	class:cxxSurfaceComp
Set_rate_new_def	phreeqcpp/ChartObject.cpp	/^ChartObject::Set_rate_new_def(bool tf)$/;"	f	class:ChartObject
Set_rate_struct	phreeqcpp/ChartObject.cpp	/^ChartObject::Set_rate_struct(void)$/;"	f	class:ChartObject
Set_ratio	phreeqcpp/SolutionIsotope.h	/^	void Set_ratio(LDBLE t)             {this->ratio = t;}$/;"	f	class:cxxSolutionIsotope
Set_ratio_uncertainty	phreeqcpp/SolutionIsotope.h	/^	void Set_ratio_uncertainty(LDBLE t) {this->ratio_uncertainty = t;}$/;"	f	class:cxxSolutionIsotope
Set_ratio_uncertainty_defined	phreeqcpp/SolutionIsotope.h	/^	void Set_ratio_uncertainty_defined(bool tf) {this->ratio_uncertainty_defined = tf;}$/;"	f	class:cxxSolutionIsotope
Set_reaction_in	phreeqcpp/Use.h	/^	void Set_reaction_in(bool tf)         {reaction_in = tf;}$/;"	f	class:cxxUse
Set_reaction_ptr	phreeqcpp/Use.h	/^	void Set_reaction_ptr(cxxReaction * p)                   {this->reaction_ptr = p;}$/;"	f	class:cxxUse
Set_rk	phreeqcpp/cxxKinetics.h	/^	void Set_rk(int t) {rk = t;}$/;"	f	class:cxxKinetics
Set_run_cells	phreeqcpp/runner.h	/^	void Set_run_cells(bool tf) { this->run_cells = tf; };$/;"	f	class:runner
Set_run_cells_one_step	phreeqcpp/Phreeqc.h	/^	void Set_run_cells_one_step(const bool tf) {this->run_cells_one_step = tf;}$/;"	f	class:Phreeqc
Set_rxn	phreeqcpp/SelectedOutput.h	/^	inline void Set_rxn(bool tf)                                      {this->rxn = tf;                     this->set_rxn = true;}$/;"	f	class:SelectedOutput
Set_screen_on	phreeqcpp/common/PHRQ_io.h	/^	void Set_screen_on(bool tf)						{this->screen_on = tf;};$/;"	f	class:PHRQ_io
Set_si	phreeqcpp/PPassemblageComp.h	/^	void Set_si(LDBLE t) {this->si = t;}$/;"	f	class:cxxPPassemblageComp
Set_si_org	phreeqcpp/PPassemblageComp.h	/^	void Set_si_org(LDBLE t) {this->si_org = t;}$/;"	f	class:cxxPPassemblageComp
Set_sigma0	phreeqcpp/SurfaceCharge.h	/^	void Set_sigma0(LDBLE d) {this->sigma0 = d;}$/;"	f	class:cxxSurfaceCharge
Set_sigma1	phreeqcpp/SurfaceCharge.h	/^	void Set_sigma1(LDBLE d) {this->sigma1 = d;}$/;"	f	class:cxxSurfaceCharge
Set_sigma2	phreeqcpp/SurfaceCharge.h	/^	void Set_sigma2(LDBLE d) {this->sigma2 = d;}$/;"	f	class:cxxSurfaceCharge
Set_sigmaddl	phreeqcpp/SurfaceCharge.h	/^	void Set_sigmaddl(LDBLE d) {this->sigmaddl = d;}$/;"	f	class:cxxSurfaceCharge
Set_sim	phreeqcpp/SelectedOutput.h	/^	inline void Set_sim(bool tf)                                      {this->sim = tf;                     this->set_sim = true;}$/;"	f	class:SelectedOutput
Set_sites_units	phreeqcpp/Surface.h	/^	void Set_sites_units(SITES_UNITS u) {sites_units = u;}$/;"	f	class:cxxSurface
Set_soln	phreeqcpp/SelectedOutput.h	/^	inline void Set_soln(bool tf)                                     {this->soln = tf;                    this->set_soln = true;}$/;"	f	class:SelectedOutput
Set_soln_vol	phreeqcpp/Solution.h	/^	void Set_soln_vol(LDBLE t)                          {this->soln_vol = t;}$/;"	f	class:cxxSolution
Set_solution_equilibria	phreeqcpp/Exchange.h	/^	void Set_solution_equilibria(bool tf) {this->solution_equilibria = tf;}$/;"	f	class:cxxExchange
Set_solution_equilibria	phreeqcpp/GasPhase.h	/^	void Set_solution_equilibria(bool tf) {this->solution_equilibria = tf;};$/;"	f	class:cxxGasPhase
Set_solution_equilibria	phreeqcpp/Surface.h	/^	void Set_solution_equilibria(bool tf) {solution_equilibria = tf;}$/;"	f	class:cxxSurface
Set_solution_in	phreeqcpp/Use.h	/^	void Set_solution_in(bool tf)         {solution_in = tf;}$/;"	f	class:cxxUse
Set_solution_ptr	phreeqcpp/Use.h	/^	void Set_solution_ptr(cxxSolution * p)                   {this->solution_ptr = p;}$/;"	f	class:cxxUse
Set_specific_area	phreeqcpp/SurfaceCharge.h	/^	void Set_specific_area(LDBLE d) {this->specific_area = d;}$/;"	f	class:cxxSurfaceCharge
Set_spinodal	phreeqcpp/SS.h	/^	void Set_spinodal(bool t) {spinodal = t;}$/;"	f	class:cxxSS
Set_ss_assemblage_in	phreeqcpp/Use.h	/^	void Set_ss_assemblage_in(bool tf)    {ss_assemblage_in = tf;}$/;"	f	class:cxxUse
Set_ss_assemblage_ptr	phreeqcpp/Use.h	/^	void Set_ss_assemblage_ptr(cxxSSassemblage * p)     {this->ss_assemblage_ptr = p;}$/;"	f	class:cxxUse
Set_ss_comps	phreeqcpp/SS.h	/^	void Set_ss_comps(const std::vector<cxxSScomp> & comps) {ss_comps = comps;}$/;"	f	class:cxxSS
Set_ss_in	phreeqcpp/SS.h	/^	void Set_ss_in(bool t) {ss_in = t;}$/;"	f	class:cxxSS
Set_start_time	phreeqcpp/runner.h	/^	void Set_start_time(LDBLE st) { this->start_time = st; };$/;"	f	class:runner
Set_state	phreeqcpp/SelectedOutput.h	/^	inline void Set_state(bool tf)                                    {this->state = tf;                   this->set_state = true;}$/;"	f	class:SelectedOutput
Set_step	phreeqcpp/SelectedOutput.h	/^	inline void Set_step(bool tf)                                     {this->step = tf;                    this->set_step = true;}$/;"	f	class:SelectedOutput
Set_step_divide	phreeqcpp/cxxKinetics.h	/^	void Set_step_divide(LDBLE t) {step_divide = t;}$/;"	f	class:cxxKinetics
Set_steps	phreeqcpp/Reaction.h	/^	void Set_steps(std::vector<LDBLE> &v) {steps = v;}$/;"	f	class:cxxReaction
Set_surface_charges	phreeqcpp/Surface.h	/^	void Set_surface_charges(std::vector < cxxSurfaceCharge > &sc) {this->surface_charges = sc;}$/;"	f	class:cxxSurface
Set_surface_comps	phreeqcpp/Surface.h	/^	void Set_surface_comps(std::vector < cxxSurfaceComp > &sc) {this->surface_comps = sc;}$/;"	f	class:cxxSurface
Set_surface_in	phreeqcpp/Use.h	/^	void Set_surface_in(bool tf)          {surface_in = tf;}$/;"	f	class:cxxUse
Set_surface_ptr	phreeqcpp/Use.h	/^	void Set_surface_ptr(cxxSurface * p)                     {this->surface_ptr = p;}$/;"	f	class:cxxUse
Set_symbol	phreeqcpp/CurveObject.h	/^	void Set_symbol(std::string s)$/;"	f	class:CurveObject
Set_symbol_size	phreeqcpp/CurveObject.h	/^	void Set_symbol_size(LDBLE f)$/;"	f	class:CurveObject
Set_tc	phreeqcpp/Solution.h	/^	void Set_tc(LDBLE l_tc)   {this->tc = l_tc;}$/;"	f	class:cxxSolution
Set_temp	phreeqcpp/SelectedOutput.h	/^	inline void Set_temp(bool tf)                                     {this->temp = tf;                    this->set_temp = true;}$/;"	f	class:SelectedOutput
Set_temperature	phreeqcpp/GasPhase.h	/^	void Set_temperature(LDBLE t) {temperature = t;};$/;"	f	class:cxxGasPhase
Set_temperature_in	phreeqcpp/Use.h	/^	void Set_temperature_in(bool tf)      {temperature_in = tf;}$/;"	f	class:cxxUse
Set_temperature_ptr	phreeqcpp/Use.h	/^	void Set_temperature_ptr(cxxTemperature * p)             {this->temperature_ptr = p;}$/;"	f	class:cxxUse
Set_thickness	phreeqcpp/Surface.h	/^	void Set_thickness(LDBLE t) {thickness = t;}$/;"	f	class:cxxSurface
Set_time	phreeqcpp/SelectedOutput.h	/^	inline void Set_time(bool tf)                                     {this->time = tf;                    this->set_time = true;}$/;"	f	class:SelectedOutput
Set_time_step	phreeqcpp/runner.h	/^	void Set_time_step(LDBLE ts) { this->time_step = ts; };$/;"	f	class:runner
Set_tk	phreeqcpp/SS.h	/^	void Set_tk(LDBLE t) {this->tk = t;}$/;"	f	class:cxxSS
Set_tokens	phreeqcpp/global_structures.h	/^	void Set_tokens(const std::vector<struct rxn_token> &t) {this->tokens = t;}$/;"	f	class:cxxChemRxn
Set_tol	phreeqcpp/KineticsComp.h	/^	void Set_tol(LDBLE t) {tol = t;}	$/;"	f	class:cxxKineticsComp
Set_total	phreeqcpp/Solution.cxx	/^cxxSolution::Set_total(char *string, LDBLE d)$/;"	f	class:cxxSolution
Set_total	phreeqcpp/SolutionIsotope.h	/^	void Set_total(LDBLE d)	{this->total = d;}$/;"	f	class:cxxSolutionIsotope
Set_total_alkalinity	phreeqcpp/Solution.h	/^	void Set_total_alkalinity(LDBLE l_total_alkalinity) {this->total_alkalinity = l_total_alkalinity;}$/;"	f	class:cxxSolution
Set_total_h	phreeqcpp/Solution.h	/^	void Set_total_h(LDBLE l_total_h)                   {this->total_h = l_total_h;}$/;"	f	class:cxxSolution
Set_total_moles	phreeqcpp/GasPhase.h	/^	void Set_total_moles(LDBLE t) {total_moles = t;};$/;"	f	class:cxxGasPhase
Set_total_moles	phreeqcpp/SS.h	/^	void Set_total_moles(LDBLE t) {total_moles = t;}$/;"	f	class:cxxSS
Set_total_o	phreeqcpp/Solution.h	/^	void Set_total_o(LDBLE l_total_o)                   {this->total_o = l_total_o;}$/;"	f	class:cxxSolution
Set_total_p	phreeqcpp/GasPhase.h	/^	void Set_total_p(LDBLE t) {total_p = t;};$/;"	f	class:cxxGasPhase
Set_totals	phreeqcpp/ExchComp.h	/^	void Set_totals(cxxNameDouble nd)$/;"	f	class:cxxExchComp
Set_totals	phreeqcpp/ExchComp.h	/^	void Set_totals(struct elt_list *e_l)$/;"	f	class:cxxExchComp
Set_totals	phreeqcpp/ExchComp.h	/^	void Set_totals(struct elt_list *e_l, int count)$/;"	f	class:cxxExchComp
Set_totals	phreeqcpp/Solution.h	/^	void Set_totals(cxxNameDouble & nd)$/;"	f	class:cxxSolution
Set_totals	phreeqcpp/SurfaceComp.h	/^	void Set_totals(cxxNameDouble & nd) {this->totals = nd;}$/;"	f	class:cxxSurfaceComp
Set_totals	phreeqcpp/cxxKinetics.h	/^	void Set_totals(const cxxNameDouble &nd) {totals = nd;}$/;"	f	class:cxxKinetics
Set_trans_in	phreeqcpp/Use.h	/^	void Set_trans_in(bool tf)            {trans_in = tf;}$/;"	f	class:cxxUse
Set_transport	phreeqcpp/Surface.h	/^	void Set_transport(bool tf) {transport = tf;}$/;"	f	class:cxxSurface
Set_type	phreeqcpp/GasPhase.h	/^	void Set_type(GP_TYPE t) {type = t;};$/;"	f	class:cxxGasPhase
Set_type	phreeqcpp/Surface.h	/^	void Set_type(SURFACE_TYPE t) {this->type = t;}$/;"	f	class:cxxSurface
Set_units	phreeqcpp/ISolution.h	/^	void Set_units(const char * l_units)$/;"	f	class:cxxISolution
Set_units	phreeqcpp/ISolution.h	/^	void Set_units(std::string l_units)               {units = l_units;}$/;"	f	class:cxxISolution
Set_units	phreeqcpp/ISolutionComp.h	/^	void Set_units(const char *l_units)$/;"	f	class:cxxISolutionComp
Set_units	phreeqcpp/Reaction.h	/^	void Set_units(const char * s)$/;"	f	class:cxxReaction
Set_use_cvode	phreeqcpp/cxxKinetics.h	/^	void Set_use_cvode(bool tf) {use_cvode = tf;}$/;"	f	class:cxxKinetics
Set_user_punch	phreeqcpp/SelectedOutput.h	/^	inline void Set_user_punch(bool tf)                               {this->user_punch = tf;              this->set_user_punch = true;}$/;"	f	class:SelectedOutput
Set_user_punch_new_def	phreeqcpp/SelectedOutput.h	/^	inline void Set_user_punch_new_def(bool tf)                       {this->user_punch_new_def = tf;}$/;"	f	class:SelectedOutput
Set_v_m	phreeqcpp/GasPhase.h	/^	void Set_v_m(LDBLE v) {v_m = v;};$/;"	f	class:cxxGasPhase
Set_volume	phreeqcpp/GasPhase.h	/^	void Set_volume(LDBLE v) {volume = v;};$/;"	f	class:cxxGasPhase
Set_water	phreeqcpp/SelectedOutput.h	/^	inline void Set_water(bool tf)                                    {this->water = tf;                   this->set_water = true;}$/;"	f	class:SelectedOutput
Set_x_ratio_uncertainty	phreeqcpp/SolutionIsotope.h	/^	void Set_x_ratio_uncertainty(LDBLE t)   {this->x_ratio_uncertainty = t;}$/;"	f	class:cxxSolutionIsotope
Set_xb1	phreeqcpp/SS.h	/^	void Set_xb1(LDBLE t) {xb1 = t;}$/;"	f	class:cxxSS
Set_xb2	phreeqcpp/SS.h	/^	void Set_xb2(LDBLE t) {xb2 = t;}$/;"	f	class:cxxSS
Set_y_axis	phreeqcpp/CurveObject.h	/^	void Set_y_axis(int f)$/;"	f	class:CurveObject
ShowChart	phreeqcpp/Phreeqc.h	/^	int ProcessMessages, ShowProgress, ShowProgressWindow, ShowChart;$/;"	m	class:Phreeqc
ShowChart	phreeqcpp/Phreeqc.h	/^	int ShowChart;$/;"	m	class:Phreeqc
ShowProgress	phreeqcpp/Phreeqc.h	/^	int ProcessMessages, ShowProgress, ShowProgressWindow, ShowChart;$/;"	m	class:Phreeqc
ShowProgressWindow	phreeqcpp/Phreeqc.h	/^	int ProcessMessages, ShowProgress, ShowProgressWindow, ShowChart;$/;"	m	class:Phreeqc
Simplify_redox	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::Simplify_redox(void) const$/;"	f	class:cxxNameDouble
Simplify_redox	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::Simplify_redox(void)$/;"	f	class:cxxNameDouble
Solution	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
Solutions	phreeqcpp/StorageBin.h	/^	std::map < int, cxxSolution > Solutions;$/;"	m	class:cxxStorageBin
Sort_comps	phreeqcpp/Exchange.cxx	/^Sort_comps(void)$/;"	f	class:cxxExchange
Sort_comps	phreeqcpp/Surface.cxx	/^Sort_comps(void)$/;"	f	class:cxxSurface
Ss_phase	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
StorageBinList	phreeqcpp/StorageBinList.cpp	/^StorageBinList::StorageBinList(CParser & parser, PHRQ_io *io)$/;"	f	class:StorageBinList
StorageBinList	phreeqcpp/StorageBinList.cpp	/^StorageBinList::StorageBinList(PHRQ_io *io)$/;"	f	class:StorageBinList
StorageBinList	phreeqcpp/StorageBinList.h	/^class StorageBinList: public PHRQ_base$/;"	c
StorageBinListItem	phreeqcpp/StorageBinList.cpp	/^StorageBinListItem::StorageBinListItem(CParser & parser)$/;"	f	class:StorageBinListItem
StorageBinListItem	phreeqcpp/StorageBinList.cpp	/^StorageBinListItem::StorageBinListItem(void)$/;"	f	class:StorageBinListItem
StorageBinListItem	phreeqcpp/StorageBinList.h	/^class StorageBinListItem$/;"	c
StringInput	IPhreeqc.hpp	/^	std::string                                   StringInput;$/;"	m	class:IPhreeqc
Surface	phreeqcpp/global_structures.h	/^{ Solution, Reaction, Exchange, Surface, Gas_phase, Pure_phase, Ss_phase,$/;"	e	enum:entity_type
Surfaces	phreeqcpp/StorageBin.h	/^	std::map < int, cxxSurface > Surfaces;$/;"	m	class:cxxStorageBin
Symbol_map	phreeqcpp/ChartObject.h	/^	std::map<std::string, int> Symbol_map;$/;"	m	class:ChartObject
TCUR	phreeqcpp/cvode.h	/^		HU, HCUR, TCUR, TOLSF$/;"	e	enum:__anon12
TEMPERATURE_H_INCLUDED	phreeqcpp/Temperature.h	/^#define TEMPERATURE_H_INCLUDED$/;"	d
THREE	phreeqcpp/cvode.cpp	/^#define THREE /;"	d	file:
THRESH	phreeqcpp/cvode.cpp	/^#define THRESH /;"	d	file:
TINY	phreeqcpp/cvode.cpp	/^#define TINY /;"	d	file:
TOKEN_TYPE	phreeqcpp/common/Parser.h	/^	enum TOKEN_TYPE$/;"	g	class:CParser
TOL	phreeqcpp/global_structures.h	/^#define TOL /;"	d
TOLSF	phreeqcpp/cvode.h	/^		HU, HCUR, TCUR, TOLSF$/;"	e	enum:__anon12
TOO_MUCH_ACC	phreeqcpp/cvode.h	/^		TOO_MUCH_ACC = -4, ERR_FAILURE = -5, CONV_FAILURE = -6,$/;"	e	enum:__anon9
TOO_MUCH_WORK	phreeqcpp/cvode.h	/^	{ SUCCESS = 0, CVODE_NO_MEM = -1, ILL_INPUT = -2, TOO_MUCH_WORK = -3,$/;"	e	enum:__anon9
TRANSPORT	phreeqcpp/global_structures.h	/^#define TRANSPORT	/;"	d
TRUE	phreeqcpp/global_structures.h	/^#define TRUE /;"	d
TRUE	phreeqcpp/sundialstypes.h	/^#define TRUE /;"	d
TRY_AGAIN_CVODE	phreeqcpp/cvode.cpp	/^#define TRY_AGAIN_CVODE /;"	d	file:
TT_DIGIT	phreeqcpp/common/Parser.h	/^		TT_DIGIT = 6,$/;"	e	enum:CParser::TOKEN_TYPE
TT_DOUBLE	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: TT_DOUBLE /;"	v	module:IPhreeqc
TT_DOUBLE	Var.h	/^	TT_DOUBLE = 3,  \/*!< dVal is valid *\/$/;"	e	enum:__anon29
TT_EMPTY	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: TT_EMPTY /;"	v	module:IPhreeqc
TT_EMPTY	Var.h	/^	TT_EMPTY  = 0,  \/*!< VAR contains no data *\/$/;"	e	enum:__anon29
TT_EMPTY	phreeqcpp/common/Parser.h	/^		TT_EMPTY = 2,$/;"	e	enum:CParser::TOKEN_TYPE
TT_ERROR	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: TT_ERROR /;"	v	module:IPhreeqc
TT_ERROR	Var.h	/^	TT_ERROR  = 1,  \/*!< vresult is valid *\/$/;"	e	enum:__anon29
TT_LONG	Var.h	/^	TT_LONG   = 2,  \/*!< lVal is valid *\/$/;"	e	enum:__anon29
TT_LOWER	phreeqcpp/common/Parser.h	/^		TT_LOWER = 5,$/;"	e	enum:CParser::TOKEN_TYPE
TT_STRING	IPhreeqc_interface.F90	/^INTEGER(KIND=4),PARAMETER :: TT_STRING /;"	v	module:IPhreeqc
TT_STRING	Var.h	/^	TT_STRING = 4   \/*!< sVal is valid *\/$/;"	e	enum:__anon29
TT_UNKNOWN	phreeqcpp/common/Parser.h	/^		TT_UNKNOWN = 7$/;"	e	enum:CParser::TOKEN_TYPE
TT_UPPER	phreeqcpp/common/Parser.h	/^		TT_UPPER = 4,$/;"	e	enum:CParser::TOKEN_TYPE
TWELVE	phreeqcpp/cvode.cpp	/^#define TWELVE /;"	d	file:
TWO	phreeqcpp/cvdense.cpp	/^#define TWO /;"	d	file:
TWO	phreeqcpp/cvode.cpp	/^#define TWO /;"	d	file:
TWO	phreeqcpp/sundialsmath.cpp	/^#define TWO /;"	d	file:
TYPE_ALPHAS	phreeqcpp/global_structures.h	/^  TYPE_PSI, TYPE_ETHETA, TYPE_ALPHAS, TYPE_MU, TYPE_ETA, TYPE_Other,$/;"	e	enum:__anon20
TYPE_B0	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TYPE_B1	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TYPE_B2	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TYPE_C0	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TYPE_ETA	phreeqcpp/global_structures.h	/^  TYPE_PSI, TYPE_ETHETA, TYPE_ALPHAS, TYPE_MU, TYPE_ETA, TYPE_Other,$/;"	e	enum:__anon20
TYPE_ETHETA	phreeqcpp/global_structures.h	/^  TYPE_PSI, TYPE_ETHETA, TYPE_ALPHAS, TYPE_MU, TYPE_ETA, TYPE_Other,$/;"	e	enum:__anon20
TYPE_LAMDA	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TYPE_MU	phreeqcpp/global_structures.h	/^  TYPE_PSI, TYPE_ETHETA, TYPE_ALPHAS, TYPE_MU, TYPE_ETA, TYPE_Other,$/;"	e	enum:__anon20
TYPE_Other	phreeqcpp/global_structures.h	/^  TYPE_PSI, TYPE_ETHETA, TYPE_ALPHAS, TYPE_MU, TYPE_ETA, TYPE_Other,$/;"	e	enum:__anon20
TYPE_PSI	phreeqcpp/global_structures.h	/^  TYPE_PSI, TYPE_ETHETA, TYPE_ALPHAS, TYPE_MU, TYPE_ETA, TYPE_Other,$/;"	e	enum:__anon20
TYPE_SIT_EPSILON	phreeqcpp/global_structures.h	/^  TYPE_SIT_EPSILON, TYPE_SIT_EPSILON_MU$/;"	e	enum:__anon20
TYPE_SIT_EPSILON_MU	phreeqcpp/global_structures.h	/^  TYPE_SIT_EPSILON, TYPE_SIT_EPSILON_MU$/;"	e	enum:__anon20
TYPE_THETA	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TYPE_ZETA	phreeqcpp/global_structures.h	/^{ TYPE_B0, TYPE_B1, TYPE_B2, TYPE_C0, TYPE_THETA, TYPE_LAMDA, TYPE_ZETA,$/;"	e	enum:__anon20
TZ	phreeqcpp/Phreeqc.h	/^	LDBLE GASCON, TZ, AA;$/;"	m	class:Phreeqc
T_A1	phreeqcpp/global_structures.h	/^	T_A1,$/;"	e	enum:__anon16
T_A2	phreeqcpp/global_structures.h	/^	T_A2,$/;"	e	enum:__anon16
T_A3	phreeqcpp/global_structures.h	/^	T_A3,$/;"	e	enum:__anon16
T_A4	phreeqcpp/global_structures.h	/^	T_A4,$/;"	e	enum:__anon16
T_A5	phreeqcpp/global_structures.h	/^	T_A5,$/;"	e	enum:__anon16
T_A6	phreeqcpp/global_structures.h	/^	T_A6,$/;"	e	enum:__anon16
Temperature	phreeqcpp/global_structures.h	/^	Kinetics, Mix, Temperature, Pressure, UnKnown$/;"	e	enum:entity_type
Temperature_for_step	phreeqcpp/Temperature.cxx	/^Temperature_for_step(int step_number)$/;"	f	class:cxxTemperature
Temperatures	phreeqcpp/StorageBin.h	/^	std::map < int, cxxTemperature > Temperatures;$/;"	m	class:cxxStorageBin
TransferAll	phreeqcpp/StorageBinList.cpp	/^void StorageBinList::TransferAll(StorageBinListItem &source)$/;"	f	class:StorageBinList
U	phreeqcpp/global_structures.h	/^	} U;$/;"	m	struct:pitz_param	typeref:union:pitz_param::__anon21
U0	phreeqcpp/PBasic.h	/^		} U0;$/;"	m	union:looprec::__anon27	typeref:struct:looprec::__anon27::__anon28
U0	phreeqcpp/PBasic.h	/^		} U0;$/;"	m	union:varrec::__anon22	typeref:struct:varrec::__anon22::__anon23
U1	phreeqcpp/PBasic.h	/^		} U1;$/;"	m	union:varrec::__anon22	typeref:struct:varrec::__anon22::__anon24
UNKNOWN	phreeqcpp/global_structures.h	/^#define UNKNOWN /;"	d
UNKNOWN_DL	phreeqcpp/Surface.h	/^	{ UNKNOWN_DL, NO_EDL, DDL, CD_MUSIC, CCM };$/;"	e	enum:cxxSurface::SURFACE_TYPE
UPPER	phreeqcpp/global_structures.h	/^#define UPPER /;"	d
USERPUNCH_H_INCLUDED	phreeqcpp/UserPunch.h	/^#define USERPUNCH_H_INCLUDED$/;"	d
USE_H_INCLUDED	phreeqcpp/Use.h	/^#define USE_H_INCLUDED$/;"	d
UTILITIES_H_INCLUDED	phreeqcpp/common/Utils.h	/^#define UTILITIES_H_INCLUDED$/;"	d
UU	phreeqcpp/PBasic.h	/^	} UU;$/;"	m	class:valrec	typeref:union:valrec::__anon26
UU	phreeqcpp/PBasic.h	/^	} UU;$/;"	m	struct:looprec	typeref:union:looprec::__anon27
UU	phreeqcpp/PBasic.h	/^	} UU;$/;"	m	struct:tokenrec	typeref:union:tokenrec::__anon25
UU	phreeqcpp/PBasic.h	/^	} UU;$/;"	m	struct:varrec	typeref:union:varrec::__anon22
UnKnown	phreeqcpp/global_structures.h	/^	Kinetics, Mix, Temperature, Pressure, UnKnown$/;"	e	enum:entity_type
UnLoadDatabase	IPhreeqc.cpp	/^void IPhreeqc::UnLoadDatabase(void)$/;"	f	class:IPhreeqc
UnitRoundoff	phreeqcpp/sundialsmath.cpp	/^UnitRoundoff(void)$/;"	f
Update	phreeqcpp/Solution.cxx	/^cxxSolution::Update(LDBLE h_tot, LDBLE o_tot, LDBLE charge, const cxxNameDouble &const_nd)$/;"	f	class:cxxSolution
Update	phreeqcpp/Solution.cxx	/^cxxSolution::Update(const cxxNameDouble &const_nd)$/;"	f	class:cxxSolution
UpdateComponents	IPhreeqc.hpp	/^	bool                       UpdateComponents;$/;"	m	class:IPhreeqc
Update_activities	phreeqcpp/Solution.cxx	/^cxxSolution::Update_activities(const cxxNameDouble &original_tot)$/;"	f	class:cxxSolution
Use2cxxStorageBin	phreeqcpp/structures.cpp	/^Use2cxxStorageBin(cxxStorageBin & sb)$/;"	f	class:Phreeqc
UserPunch	phreeqcpp/UserPunch.cpp	/^UserPunch::UserPunch(int n, PHRQ_io *io)$/;"	f	class:UserPunch
UserPunch	phreeqcpp/UserPunch.h	/^class UserPunch:public cxxNumKeyword$/;"	c
UserPunch_map	phreeqcpp/Phreeqc.h	/^	std::map <int, UserPunch> UserPunch_map;$/;"	m	class:Phreeqc
Utilities	phreeqcpp/Phreeqc.h	/^namespace Utilities$/;"	n
Utilities	phreeqcpp/common/Utils.h	/^namespace Utilities$/;"	n
VAR	Var.h	/^} VAR;$/;"	t	typeref:struct:__anon31
VAR_TYPE	Var.h	/^} VAR_TYPE;$/;"	t	typeref:enum:__anon29
VAR_UNION_NAME	Var.h	/^	} VAR_UNION_NAME;$/;"	m	struct:__anon31	typeref:union:__anon31::__anon32
VAR_UNION_NAME	Var.h	/^#define VAR_UNION_NAME /;"	d
VAR_UNION_NAME	Var.h	/^#define VAR_UNION_NAME$/;"	d
VCopy_Serial	phreeqcpp/nvector_serial.cpp	/^VCopy_Serial(N_Vector x, N_Vector z)$/;"	f	file:
VDiff_Serial	phreeqcpp/nvector_serial.cpp	/^VDiff_Serial(N_Vector x, N_Vector y, N_Vector z)$/;"	f	file:
VERSION	Makefile	/^VERSION = 3.3.7-11094$/;"	m
VERSION_STRING	Version.h	/^#define VERSION_STRING /;"	d
VER_MAJOR	Version.h	/^#define VER_MAJOR /;"	d
VER_MINOR	Version.h	/^#define VER_MINOR /;"	d
VER_NUM	Version.h	/^#define VER_NUM /;"	d
VER_PATCH	Version.h	/^#define VER_PATCH /;"	d
VER_REVISION	Version.h	/^#define VER_REVISION /;"	d
VISIT	phreeqcpp/global_structures.h	/^{ preorder, postorder, endorder, leaf } VISIT;$/;"	t	typeref:enum:__anon18
VLEST	phreeqcpp/dw.cpp	/^VLEST(LDBLE T)$/;"	f	class:Phreeqc
VLin1_Serial	phreeqcpp/nvector_serial.cpp	/^VLin1_Serial(realtype a, N_Vector x, N_Vector y, N_Vector z)$/;"	f	file:
VLin2_Serial	phreeqcpp/nvector_serial.cpp	/^VLin2_Serial(realtype a, N_Vector x, N_Vector y, N_Vector z)$/;"	f	file:
VNeg_Serial	phreeqcpp/nvector_serial.cpp	/^VNeg_Serial(N_Vector x, N_Vector z)$/;"	f	file:
VOLUME	phreeqcpp/global_structures.h	/^#define VOLUME /;"	d
VP	phreeqcpp/Phreeqc.h	/^	LDBLE VP, DW0;$/;"	m	class:Phreeqc
VRESULT	Var.h	/^} VRESULT;$/;"	t	typeref:enum:__anon30
VR_BADVARTYPE	Var.h	/^	VR_BADVARTYPE    = -2,  \/*!< Failure, Invalid VAR type *\/$/;"	e	enum:__anon30
VR_INVALIDARG	Var.h	/^	VR_INVALIDARG    = -3,  \/*!< Failure, Invalid argument *\/$/;"	e	enum:__anon30
VR_INVALIDCOL	Var.h	/^	VR_INVALIDCOL    = -5   \/*!< Failure, Invalid column *\/$/;"	e	enum:__anon30
VR_INVALIDROW	Var.h	/^	VR_INVALIDROW    = -4,  \/*!< Failure, Invalid row *\/$/;"	e	enum:__anon30
VR_OK	Var.h	/^	VR_OK            =  0,  \/*!< Success *\/$/;"	e	enum:__anon30
VR_OUTOFMEMORY	Var.h	/^	VR_OUTOFMEMORY   = -1,  \/*!< Failure, Out of memory *\/$/;"	e	enum:__anon30
VScaleBy_Serial	phreeqcpp/nvector_serial.cpp	/^VScaleBy_Serial(realtype a, N_Vector x)$/;"	f	file:
VScaleDiff_Serial	phreeqcpp/nvector_serial.cpp	/^VScaleDiff_Serial(realtype c, N_Vector x, N_Vector y, N_Vector z)$/;"	f	file:
VScaleSum_Serial	phreeqcpp/nvector_serial.cpp	/^VScaleSum_Serial(realtype c, N_Vector x, N_Vector y, N_Vector z)$/;"	f	file:
VSum_Serial	phreeqcpp/nvector_serial.cpp	/^VSum_Serial(N_Vector x, N_Vector y, N_Vector z)$/;"	f	file:
V_m	phreeqcpp/global_structures.h	/^	LDBLE V_m;$/;"	m	struct:unknown
V_solutes	phreeqcpp/Phreeqc.h	/^	LDBLE V_solutes, rho_0, rho_0_sat, kappa_0, p_sat\/*, ah2o_x0*\/;$/;"	m	class:Phreeqc
VarAllocString	Var.c	/^char* VarAllocString(const char* pSrc)$/;"	f
VarClear	Var.c	/^VRESULT VarClear(VAR* pvar)$/;"	f
VarCopy	Var.c	/^VRESULT VarCopy(VAR* pvarDest, const VAR* pvarSrc)$/;"	f
VarFreeString	Var.c	/^void VarFreeString(char* pSrc)$/;"	f
VarInit	Var.c	/^void VarInit(VAR* pvar)$/;"	f
Vaxpy_Serial	phreeqcpp/nvector_serial.cpp	/^Vaxpy_Serial(realtype a, N_Vector x, N_Vector y)$/;"	f	file:
Vectorize	phreeqcpp/SSassemblage.cxx	/^Vectorize(void)$/;"	f	class:cxxSSassemblage
Vectorize	phreeqcpp/cxxMix.cxx	/^void cxxMix::Vectorize(std::vector<int> &n, std::vector<LDBLE> &f)$/;"	f	class:cxxMix
Version	IPhreeqc.hpp	/^	static std::string Version;$/;"	m	class:IPhreeqc
WarningLines	IPhreeqc.hpp	/^	std::vector< std::string > WarningLines;$/;"	m	class:IPhreeqc
WarningReporter	IPhreeqc.hpp	/^	IErrorReporter            *WarningReporter;$/;"	m	class:IPhreeqc
WarningString	IPhreeqc.hpp	/^	std::string                WarningString;$/;"	m	class:IPhreeqc
WarningStringOn	IPhreeqc.hpp	/^	bool                       WarningStringOn;$/;"	m	class:IPhreeqc
Y	phreeqcpp/Phreeqc.h	/^	LDBLE Z, DZ, Y;$/;"	m	class:Phreeqc
Y2	phreeqcpp/Form1.h	/^			 bool Y2, Y2show;$/;"	m	class:zdg_ui2::Form1
Y2show	phreeqcpp/Form1.h	/^			 bool Y2, Y2show;$/;"	m	class:zdg_ui2::Form1
Z	phreeqcpp/Phreeqc.h	/^	LDBLE Z, DZ, Y;$/;"	m	class:Phreeqc
ZBrn	phreeqcpp/Phreeqc.h	/^	LDBLE ZBrn; \/\/ Born function (-1\/eps_r + 1) * 41.84004, for supcrt calc'n of molal volume$/;"	m	class:Phreeqc
ZERO	phreeqcpp/cvdense.cpp	/^#define ZERO /;"	d	file:
ZERO	phreeqcpp/cvode.cpp	/^#define ZERO /;"	d	file:
ZERO	phreeqcpp/dense.cpp	/^#define ZERO /;"	d	file:
ZERO	phreeqcpp/nvector_serial.cpp	/^#define ZERO /;"	d	file:
ZERO	phreeqcpp/smalldense.cpp	/^#define ZERO /;"	d	file:
ZERO	phreeqcpp/sundialsmath.cpp	/^#define ZERO /;"	d	file:
ZERO_TOL	phreeqcpp/model.cpp	/^#define ZERO_TOL /;"	d	file:
ZERO_TOL	phreeqcpp/tidy.cpp	/^#define ZERO_TOL /;"	d	file:
_ASSERTE	phreeqcpp/PBasic.cpp	/^#define _ASSERTE /;"	d	file:
_CRTDBG_MAP_ALLOC	phreeqcpp/Phreeqc.h	/^#define _CRTDBG_MAP_ALLOC$/;"	d
_CRTDBG_MAP_ALLOC	phreeqcpp/phqalloc.cpp	/^#define _CRTDBG_MAP_ALLOC$/;"	d	file:
_CaseCheck	phreeqcpp/PBasic.cpp	/^_CaseCheck(void)$/;"	f	class:PBasic
_DenseMat	phreeqcpp/dense.h	/^	typedef struct _DenseMat$/;"	s
_EscIO	phreeqcpp/PBasic.cpp	/^_EscIO(int code)$/;"	f	class:PBasic
_Escape	phreeqcpp/PBasic.cpp	/^_Escape(int code)$/;"	f	class:PBasic
_INC_CVDENSE_H	phreeqcpp/cvdense.h	/^#define _INC_CVDENSE_H$/;"	d
_INC_CVODE_H	phreeqcpp/cvode.h	/^#define _INC_CVODE_H$/;"	d
_INC_DEBUG_H	Debug.h	/^#define _INC_DEBUG_H$/;"	d
_INC_DENSE_H	phreeqcpp/dense.h	/^#define _INC_DENSE_H$/;"	d
_INC_GLOBAL_STRUCTURES_H	phreeqcpp/global_structures.h	/^#define _INC_GLOBAL_STRUCTURES_H$/;"	d
_INC_IPHREEQC_CALLBACKS_H	IPhreeqcCallbacks.h	/^#define _INC_IPHREEQC_CALLBACKS_H$/;"	d
_INC_ISFINITE_H	phreeqcpp/Phreeqc.h	/^#define _INC_ISFINITE_H$/;"	d
_INC_KEYWORDS_H	phreeqcpp/PhreeqcKeywords/Keywords.h	/^#define _INC_KEYWORDS_H$/;"	d
_INC_NVECTOR_SERIAL_H	phreeqcpp/nvector_serial.h	/^#define _INC_NVECTOR_SERIAL_H$/;"	d
_INC_PBasic_H	phreeqcpp/PBasic.h	/^#define _INC_PBasic_H$/;"	d
_INC_PHREEQC_H	phreeqcpp/Phreeqc.h	/^#define _INC_PHREEQC_H$/;"	d
_INC_PHRQTYPE_H	phreeqcpp/common/phrqtype.h	/^#define _INC_PHRQTYPE_H$/;"	d
_INC_SELECTEDOUTPUT_H	CSelectedOutput.hxx	/^#define _INC_SELECTEDOUTPUT_H$/;"	d
_INC_SUNDIALSTYPES_H	phreeqcpp/sundialstypes.h	/^#define _INC_SUNDIALSTYPES_H$/;"	d
_INC_UTILITIES_NAMESPACE_H	phreeqcpp/Phreeqc.h	/^#define _INC_UTILITIES_NAMESPACE_H$/;"	d
_M_EnvSerialContent	phreeqcpp/nvector_serial.h	/^	struct _M_EnvSerialContent$/;"	s
_N_VectorSerialContent	phreeqcpp/nvector_serial.h	/^	struct _N_VectorSerialContent$/;"	s
_NilCheck	phreeqcpp/PBasic.cpp	/^_NilCheck(void)$/;"	f	class:PBasic
_OutMem	phreeqcpp/PBasic.cpp	/^_OutMem(void)$/;"	f	class:PBasic
_PHRQBASE_H	phreeqcpp/common/PHRQ_base.h	/^#define _PHRQBASE_H$/;"	d
_PHRQIO_H	phreeqcpp/common/PHRQ_io.h	/^#define _PHRQIO_H$/;"	d
_ShowEscape	phreeqcpp/PBasic.cpp	/^_ShowEscape(char *buf, int code, int ior, char *prefix)$/;"	f	class:PBasic
__ERROR_REPORTER_HXX_INC	ErrorReporter.hxx	/^#define __ERROR_REPORTER_HXX_INC$/;"	d
__FWRAP__H	fwrap.h	/^#define __FWRAP__H$/;"	d
__IPHREEQC_INTERFACE__H	IPhreeqc_interface_F.h	/^#define __IPHREEQC_INTERFACE__H$/;"	d
__VAR_H_INC	Var.h	/^#define __VAR_H_INC$/;"	d
_cvdense_h	phreeqcpp/cvdense.h	/^#define _cvdense_h$/;"	d
_cvode_h	phreeqcpp/cvode.h	/^#define _cvode_h$/;"	d
_dense_h	phreeqcpp/dense.h	/^#define _dense_h$/;"	d
_generic_M_Env	phreeqcpp/nvector.h	/^	struct _generic_M_Env$/;"	s
_generic_N_Vector	phreeqcpp/nvector.h	/^	struct _generic_N_Vector$/;"	s
_generic_N_Vector_Ops	phreeqcpp/nvector.h	/^	struct _generic_N_Vector_Ops$/;"	s
_smalldense_h	phreeqcpp/smalldense.h	/^#define _smalldense_h$/;"	d
_string_duplicate	phreeqcpp/utilities.cpp	/^_string_duplicate(const char *token, const char *szFileName, int nLine)$/;"	f	class:Phreeqc
_sundialsmath_h	phreeqcpp/sundialsmath.h	/^#define _sundialsmath_h$/;"	d
_sundialstypes_h	phreeqcpp/sundialstypes.h	/^#define _sundialstypes_h$/;"	d
a	phreeqcpp/global_structures.h	/^	LDBLE a;					\/* activity *\/$/;"	m	struct:spec
a	phreeqcpp/global_structures.h	/^	LDBLE a[6];$/;"	m	struct:pitz_param
a0	phreeqcpp/Phreeqc.h	/^	LDBLE a0, a1, kc, kb;$/;"	m	class:Phreeqc
a0	phreeqcpp/SS.h	/^	LDBLE a0, a1;$/;"	m	class:cxxSS
a1	phreeqcpp/Phreeqc.h	/^	LDBLE a0, a1, kc, kb;$/;"	m	class:Phreeqc
a1	phreeqcpp/SS.h	/^	LDBLE a0, a1;$/;"	m	class:cxxSS
a_aa_sum	phreeqcpp/Phreeqc.h	/^	LDBLE a_aa_sum, b2, b_sum, R_TK;$/;"	m	class:Phreeqc
a_f	phreeqcpp/global_structures.h	/^	LDBLE dha, dhb, a_f;		\/* WATEQ Debye Huckel a and b-dot; active_fraction coef for exchange species *\/$/;"	m	struct:species
abs_builddir	Makefile	/^abs_builddir = \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/src$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/src$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC$/;"	m
abstol	phreeqcpp/cvode.cpp	/^#define abstol /;"	d	file:
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_FC	Makefile	/^ac_ct_FC = $/;"	m
accumulate	phreeqcpp/common/PHRQ_io.h	/^	bool accumulate;$/;"	m	class:PHRQ_io
accumulate	phreeqcpp/common/Parser.h	/^	bool accumulate;$/;"	m	class:CParser
accumulated	phreeqcpp/common/PHRQ_io.h	/^	std::string accumulated;$/;"	m	class:PHRQ_io
accumulated	phreeqcpp/common/Parser.h	/^	std::string accumulated;$/;"	m	class:CParser
acnrm	phreeqcpp/cvode.cpp	/^#define acnrm /;"	d	file:
acor	phreeqcpp/cvode.cpp	/^#define acor /;"	d	file:
active	phreeqcpp/ChartObject.h	/^	bool active;$/;"	m	class:ChartObject
active	phreeqcpp/SelectedOutput.h	/^	bool active;$/;"	m	class:SelectedOutput
active_charts	phreeqcpp/ChartHandler.h	/^	int active_charts;$/;"	m	class:ChartHandler
activities	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > activities;$/;"	m	class:SelectedOutput
activities	phreeqcpp/global_structures.h	/^	struct name_species *activities;$/;"	m	struct:punch	typeref:struct:punch::name_species
activity	phreeqcpp/basicsubs.cpp	/^activity(const char *species_name)$/;"	f	class:Phreeqc
activity_coefficient	phreeqcpp/basicsubs.cpp	/^activity_coefficient(const char *species_name)$/;"	f	class:Phreeqc
add	phreeqcpp/ExchComp.cxx	/^cxxExchComp::add(const cxxExchComp & addee, LDBLE extensive)$/;"	f	class:cxxExchComp
add	phreeqcpp/Exchange.cxx	/^cxxExchange::add(const cxxExchange & addee, LDBLE extensive)$/;"	f	class:cxxExchange
add	phreeqcpp/GasComp.cxx	/^cxxGasComp::add(const cxxGasComp & addee, LDBLE extensive)$/;"	f	class:cxxGasComp
add	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::add(const cxxKineticsComp & addee, LDBLE extensive)$/;"	f	class:cxxKineticsComp
add	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::add(const char *token, LDBLE total)$/;"	f	class:cxxNameDouble
add	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::add(const cxxPPassemblage & addee, LDBLE extensive)$/;"	f	class:cxxPPassemblage
add	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::add(const cxxPPassemblageComp & addee, LDBLE extensive)$/;"	f	class:cxxPPassemblageComp
add	phreeqcpp/SS.cxx	/^cxxSS::add(const cxxSS & addee_in, LDBLE extensive)$/;"	f	class:cxxSS
add	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::add(const cxxSSassemblage & addee, LDBLE extensive)$/;"	f	class:cxxSSassemblage
add	phreeqcpp/Solution.cxx	/^cxxSolution::add(const cxxSolution & addee, LDBLE extensive)$/;"	f	class:cxxSolution
add	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::add(const cxxSolutionIsotope & isotope_ptr,$/;"	f	class:cxxSolutionIsotope
add	phreeqcpp/Surface.cxx	/^cxxSurface::add(const cxxSurface & addee_in, LDBLE extensive)$/;"	f	class:cxxSurface
add	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::add(const cxxSurfaceCharge & addee, LDBLE extensive)$/;"	f	class:cxxSurfaceCharge
add	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::add(const cxxSurfaceComp & addee, LDBLE extensive)$/;"	f	class:cxxSurfaceComp
add	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::add(const cxxKinetics & addee, LDBLE extensive)$/;"	f	class:cxxKinetics
addPair	phreeqcpp/common/Parser.cxx	/^CParser::STATUS_TYPE CParser::addPair(std::map < std::string, T >&totals,$/;"	f	class:CParser
add_all_components_tally	phreeqcpp/tally.cpp	/^add_all_components_tally(void)$/;"	f	class:Phreeqc
add_cd_music_charge_balances	phreeqcpp/prep.cpp	/^add_cd_music_charge_balances(int n)$/;"	f	class:Phreeqc
add_cd_music_factors	phreeqcpp/prep.cpp	/^add_cd_music_factors(int n)$/;"	f	class:Phreeqc
add_elt_list	phreeqcpp/utilities.cpp	/^add_elt_list(const cxxNameDouble & nd, LDBLE coef)$/;"	f	class:Phreeqc
add_elt_list	phreeqcpp/utilities.cpp	/^add_elt_list(struct elt_list *elt_list_ptr, LDBLE coef)$/;"	f	class:Phreeqc
add_elt_list_multi_surf	phreeqcpp/utilities.cpp	/^add_elt_list_multi_surf(struct elt_list *elt_list_ptr, LDBLE coef, struct element *surf_elt_ptr)$/;"	f	class:Phreeqc
add_exchange	phreeqcpp/step.cpp	/^add_exchange(cxxExchange *exchange_ptr)$/;"	f	class:Phreeqc
add_extensive	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::add_extensive(const cxxNameDouble & addee, LDBLE factor)$/;"	f	class:cxxNameDouble
add_formula	phreeqcpp/PPassemblageComp.h	/^	std::string add_formula;$/;"	m	class:cxxPPassemblageComp
add_formula	phreeqcpp/global_structures.h	/^	const char **add_formula;$/;"	m	struct:model
add_formula	phreeqcpp/global_structures.h	/^	const char *add_formula;$/;"	m	struct:tally
add_gas_phase	phreeqcpp/step.cpp	/^add_gas_phase(cxxGasPhase *gas_phase_ptr)$/;"	f	class:Phreeqc
add_intensive	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::add_intensive(const cxxNameDouble & addee, LDBLE f1,$/;"	f	class:cxxNameDouble
add_isotopes	phreeqcpp/isotopes.cpp	/^add_isotopes(cxxSolution &solution_ref)$/;"	f	class:Phreeqc
add_kinetics	phreeqcpp/step.cpp	/^add_kinetics(cxxKinetics *kinetics_ptr)$/;"	f	class:Phreeqc
add_log_activities	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::add_log_activities(const cxxNameDouble & addee, LDBLE f1,$/;"	f	class:cxxNameDouble
add_logk	phreeqcpp/global_structures.h	/^	struct name_coef *add_logk;$/;"	m	struct:logk	typeref:struct:logk::name_coef
add_logk	phreeqcpp/global_structures.h	/^	struct name_coef *add_logk;$/;"	m	struct:phase	typeref:struct:phase::name_coef
add_logk	phreeqcpp/global_structures.h	/^	struct name_coef *add_logk;$/;"	m	struct:species	typeref:struct:species::name_coef
add_logks	phreeqcpp/tidy.cpp	/^add_logks(struct logk *logk_ptr, int repeats)$/;"	f	class:Phreeqc
add_mix	phreeqcpp/step.cpp	/^add_mix(cxxMix *mix_ptr)$/;"	f	class:Phreeqc
add_other_logk	phreeqcpp/tidy.cpp	/^add_other_logk(LDBLE * source_k, int count_add_logk,$/;"	f	class:Phreeqc
add_potential_factor	phreeqcpp/prep.cpp	/^add_potential_factor(void)$/;"	f	class:Phreeqc
add_pp_assemblage	phreeqcpp/step.cpp	/^add_pp_assemblage(cxxPPassemblage *pp_assemblage_ptr)$/;"	f	class:Phreeqc
add_psi_master_species	phreeqcpp/read.cpp	/^add_psi_master_species(char *token)$/;"	f	class:Phreeqc
add_reaction	phreeqcpp/step.cpp	/^add_reaction(cxxReaction *reaction_ptr, int step_number, LDBLE step_fraction)$/;"	f	class:Phreeqc
add_row	phreeqcpp/spread.cpp	/^add_row(struct spread_row *spread_row_ptr)$/;"	f	class:Phreeqc
add_solution	phreeqcpp/step.cpp	/^add_solution(cxxSolution *solution_ptr, LDBLE extensive, LDBLE intensive)$/;"	f	class:Phreeqc
add_ss_assemblage	phreeqcpp/step.cpp	/^add_ss_assemblage(cxxSSassemblage *ss_assemblage_ptr)$/;"	f	class:Phreeqc
add_surface	phreeqcpp/step.cpp	/^add_surface(cxxSurface *surface_ptr)$/;"	f	class:Phreeqc
add_surface_charge_balance	phreeqcpp/prep.cpp	/^add_surface_charge_balance(void)$/;"	f	class:Phreeqc
add_to_file	phreeqcpp/inverse.cpp	/^add_to_file(const char *filename, const char *string)$/;"	f	class:Phreeqc
add_trivial_eqns	phreeqcpp/model.cpp	/^add_trivial_eqns(int rows, int cols, LDBLE * matrix)$/;"	f	class:Phreeqc
adjust_setup_pure_phases	phreeqcpp/prep.cpp	/^adjust_setup_pure_phases(void)$/;"	f	class:Phreeqc
adjust_setup_solution	phreeqcpp/prep.cpp	/^adjust_setup_solution(void)$/;"	f	class:Phreeqc
adjust_step_size	phreeqcpp/model.cpp	/^adjust_step_size(void)$/;"	f	class:Phreeqc
advect_in	phreeqcpp/Use.h	/^	bool advect_in;$/;"	m	class:cxxUse
advection	phreeqcpp/advection.cpp	/^advection(void)$/;"	f	class:Phreeqc
advection_kin_time	phreeqcpp/Phreeqc.h	/^	LDBLE advection_kin_time;$/;"	m	class:Phreeqc
advection_kin_time_defined	phreeqcpp/Phreeqc.h	/^	LDBLE advection_kin_time_defined;$/;"	m	class:Phreeqc
advection_print	phreeqcpp/Phreeqc.h	/^	int *advection_punch, *advection_print;$/;"	m	class:Phreeqc
advection_punch	phreeqcpp/Phreeqc.h	/^	int *advection_punch, *advection_print;$/;"	m	class:Phreeqc
advection_step	phreeqcpp/Phreeqc.h	/^	int advection_step;$/;"	m	class:Phreeqc
advection_warnings	phreeqcpp/Phreeqc.h	/^	int advection_warnings;$/;"	m	class:Phreeqc
ag0	phreeqcpp/SS.h	/^	LDBLE ag0, ag1;$/;"	m	class:cxxSS
ag1	phreeqcpp/SS.h	/^	LDBLE ag0, ag1;$/;"	m	class:cxxSS
ah2o	phreeqcpp/Solution.h	/^	LDBLE ah2o;$/;"	m	class:cxxSolution
ah2o_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *ah2o_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
ah2o_x	phreeqcpp/Phreeqc.h	/^	LDBLE ah2o_x;$/;"	m	class:Phreeqc
alk	phreeqcpp/SelectedOutput.h	/^	bool alk;$/;"	m	class:SelectedOutput
alk	phreeqcpp/global_structures.h	/^	LDBLE alk;					\/* alkalinity of species, used for cec in exchange *\/$/;"	m	struct:species
alk	phreeqcpp/global_structures.h	/^	int alk;$/;"	m	struct:punch
alk	phreeqcpp/global_structures.h	/^ 	LDBLE alk;					\/* alkalinity of species *\/$/;"	m	struct:master
alkalinity	phreeqcpp/global_structures.h	/^	int alkalinity;$/;"	m	struct:prints
alkalinity_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *alkalinity_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
all	phreeqcpp/global_structures.h	/^	int all;$/;"	m	struct:prints
all_cells	phreeqcpp/Phreeqc.h	/^	int old_cells, max_cells, all_cells;$/;"	m	class:Phreeqc
alpha	phreeqcpp/global_structures.h	/^	LDBLE alpha;$/;"	m	struct:pitz_param
alpha_global	phreeqcpp/Phreeqc.h	/^	LDBLE z_global, xd_global, alpha_global;$/;"	m	class:Phreeqc
alphas	phreeqcpp/global_structures.h	/^		LDBLE alphas;$/;"	m	union:pitz_param::__anon21
always_full_pitzer	phreeqcpp/Phreeqc.h	/^	int full_pitzer, always_full_pitzer, ICON, IC;$/;"	m	class:Phreeqc
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/libtool.m4 \\$/;"	m
am__append_1	Makefile	/^am__append_1 = \\$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dist_source_DATA_DIST	Makefile	/^am__dist_source_DATA_DIST = $(top_srcdir)\/src\/README.Fortran \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	Makefile	/^am__include_HEADERS_DIST = $(top_srcdir)\/src\/IPhreeqc.h \\$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(sourcedir)" \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__libiphreeqc_la_SOURCES_DIST	Makefile	/^am__libiphreeqc_la_SOURCES_DIST = CSelectedOutput.cpp \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_CXXLD_	Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	Makefile	/^am__v_CXX_1 = $/;"	m
am__v_F77LD_	Makefile	/^am__v_F77LD_ = $(am__v_F77LD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_F77LD_0	Makefile	/^am__v_F77LD_0 = @echo "  F77LD   " $@;$/;"	m
am__v_F77LD_1	Makefile	/^am__v_F77LD_1 = $/;"	m
am__v_F77_	Makefile	/^am__v_F77_ = $(am__v_F77_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_F77_0	Makefile	/^am__v_F77_0 = @echo "  F77     " $@;$/;"	m
am__v_F77_1	Makefile	/^am__v_F77_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libiphreeqc_la_OBJECTS	Makefile	/^am_libiphreeqc_la_OBJECTS = CSelectedOutput.lo IPhreeqc.lo \\$/;"	m
andexpr	phreeqcpp/PBasic.cpp	/^andexpr(struct LOC_exec * LINK)$/;"	f	class:PBasic
anion_list	phreeqcpp/Phreeqc.h	/^	std::vector<int> s_list, cation_list, neutral_list, anion_list, ion_list, param_list;$/;"	m	class:Phreeqc
anions	phreeqcpp/Phreeqc.h	/^	struct species **spec, **cations, **anions, **neutrals;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::
append	phreeqcpp/dumper.h	/^	bool append;$/;"	m	class:dumper
aq_name	phreeqcpp/global_structures.h	/^	const char *aq_name;				\/* name of aqueous species in EX species *\/$/;"	m	struct:spec
aqueous_only	phreeqcpp/Phreeqc.h	/^	int aqueous_only;$/;"	m	class:Phreeqc
aqueous_vm	phreeqcpp/basicsubs.cpp	/^aqueous_vm(const char *species_name)$/;"	f	class:Phreeqc
arr	phreeqcpp/PBasic.h	/^			LDBLE *arr;$/;"	m	struct:varrec::__anon22::__anon23
array	phreeqcpp/Phreeqc.h	/^	LDBLE *array;$/;"	m	class:Phreeqc
array1	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
array_print	phreeqcpp/print.cpp	/^array_print(LDBLE * array_l, int row_count, int column_count,$/;"	f	class:Phreeqc
as	phreeqcpp/ISolutionComp.h	/^	  std::string as;$/;"	m	class:cxxISolutionComp
assemblage_totals	phreeqcpp/PPassemblage.h	/^	cxxNameDouble assemblage_totals;    \/\/ after totalize, total moles of elements in the PPassemblage$/;"	m	class:cxxPPassemblage
axis_scale_x	phreeqcpp/ChartObject.h	/^	LDBLE axis_scale_x[5];$/;"	m	class:ChartObject
axis_scale_y	phreeqcpp/ChartObject.h	/^	LDBLE axis_scale_y[5];$/;"	m	class:ChartObject
axis_scale_y2	phreeqcpp/ChartObject.h	/^	LDBLE axis_scale_y2[5];$/;"	m	class:ChartObject
axis_titles	phreeqcpp/ChartObject.h	/^	std::vector<std::string> axis_titles;$/;"	m	class:ChartObject
b0	phreeqcpp/global_structures.h	/^		LDBLE b0;$/;"	m	union:pitz_param::__anon21
b1	phreeqcpp/global_structures.h	/^		LDBLE b1;$/;"	m	union:pitz_param::__anon21
b2	phreeqcpp/Phreeqc.h	/^	LDBLE a_aa_sum, b2, b_sum, R_TK;$/;"	m	class:Phreeqc
b2	phreeqcpp/global_structures.h	/^		LDBLE b2;$/;"	m	union:pitz_param::__anon21
b_Av	phreeqcpp/global_structures.h	/^	b_Av,		\/* b in z^2 * A_v * log(1 + b * I^0.5) \/ (2 * b) *\/$/;"	e	enum:__anon16
b_sum	phreeqcpp/Phreeqc.h	/^	LDBLE a_aa_sum, b2, b_sum, R_TK;$/;"	m	class:Phreeqc
back_eq	phreeqcpp/Phreeqc.h	/^	int *iu, *is, *back_eq;$/;"	m	class:Phreeqc
back_eq_max	phreeqcpp/Phreeqc.h	/^		delta1_max, iu_max, is_max, back_eq_max;$/;"	m	class:Phreeqc
background	phreeqcpp/Form1.h	/^			 bool background, hints, grid;$/;"	m	class:zdg_ui2::Form1
bad	phreeqcpp/Phreeqc.h	/^	unsigned long *good, *bad, *minimal;$/;"	m	class:Phreeqc
bad_step_max	phreeqcpp/cxxKinetics.h	/^	int bad_step_max;$/;"	m	class:cxxKinetics
badsubscr	phreeqcpp/PBasic.cpp	/^	badsubscr(void)$/;"	f	class:PBasic
base_error_count	phreeqcpp/common/PHRQ_base.h	/^	int base_error_count;$/;"	m	class:PHRQ_base
basicCallback	phreeqcpp/Phreeqc.h	/^	class BasicCallback *basicCallback;$/;"	m	class:Phreeqc	typeref:class:Phreeqc::BasicCallback
basic_callback	phreeqcpp/basicsubs.cpp	/^basic_callback(double x1, double x2, char * str)$/;"	f	class:Phreeqc
basic_callback	phreeqcpp/basicsubs.cpp	/^basic_callback(double x1, double x2, const char * str)$/;"	f	class:Phreeqc
basic_callback_cookie	phreeqcpp/Phreeqc.h	/^	void *basic_callback_cookie;$/;"	m	class:Phreeqc
basic_callback_ptr	phreeqcpp/Phreeqc.h	/^	double (*basic_callback_ptr) (double x1, double x2, const char *str, void *cookie);$/;"	m	class:Phreeqc
basic_compile	phreeqcpp/PBasic.cpp	/^basic_compile(char *commands, void **lnbase, void **vbase, void **lpbase)$/;"	f	class:PBasic
basic_compile	phreeqcpp/basicsubs.cpp	/^basic_compile(char *commands, void **lnbase, void **vbase, void **lpbase)$/;"	f	class:Phreeqc
basic_fortran_callback_ptr	phreeqcpp/Phreeqc.h	/^	double (*basic_fortran_callback_ptr) (double *x1, double *x2, char *str, size_t l);$/;"	m	class:Phreeqc
basic_fortran_callback_ptr	phreeqcpp/Phreeqc.h	/^	double (*basic_fortran_callback_ptr) (double *x1, double *x2, const char *str, int l);$/;"	m	class:Phreeqc
basic_free	phreeqcpp/basicsubs.cpp	/^basic_free(void)$/;"	f	class:Phreeqc
basic_interpreter	phreeqcpp/Phreeqc.h	/^	PBasic * basic_interpreter;$/;"	m	class:Phreeqc
basic_main	phreeqcpp/PBasic.cpp	/^basic_main(char *commands)$/;"	f	class:PBasic
basic_renumber	phreeqcpp/PBasic.cpp	/^basic_renumber(char *commands, void **lnbase, void **vbase, void **lpbase)$/;"	f	class:PBasic
basic_run	phreeqcpp/PBasic.cpp	/^basic_run(char *commands, void *lnbase, void *vbase, void *lpbase)$/;"	f	class:PBasic
basic_run	phreeqcpp/basicsubs.cpp	/^basic_run(char *commands, void *lnbase, void *vbase, void *lpbase)$/;"	f	class:Phreeqc
batch	phreeqcpp/ChartObject.h	/^	chart_batch_type batch;$/;"	m	class:ChartObject
batch_background	phreeqcpp/ChartObject.h	/^	bool batch_background;$/;"	m	class:ChartObject
batch_fn	phreeqcpp/ChartObject.h	/^	std::string batch_fn;$/;"	m	class:ChartObject
batch_grid	phreeqcpp/ChartObject.h	/^	bool batch_grid;$/;"	m	class:ChartObject
bcon_first	phreeqcpp/Phreeqc.h	/^	int bcon_first;$/;"	m	class:Phreeqc
bcon_last	phreeqcpp/Phreeqc.h	/^	int bcon_last;$/;"	m	class:Phreeqc
binList	phreeqcpp/dumper.h	/^	StorageBinList binList;$/;"	m	class:dumper
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bit_print	phreeqcpp/inverse.cpp	/^bit_print(unsigned long bits, int l)$/;"	f	class:Phreeqc
boolean	phreeqcpp/readtr.cpp	/^typedef unsigned char boolean;$/;"	t	file:
boolean	phreeqcpp/spread.cpp	/^typedef unsigned char boolean;$/;"	t	file:
booleantype	phreeqcpp/sundialstypes.h	/^#define booleantype /;"	d
buf	phreeqcpp/PBasic.h	/^	tokenrec *stmttok, *datatok, *buf;$/;"	m	class:PBasic
build	Makefile	/^build = x86_64-apple-darwin15.5.0$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_fixed_volume_gas	phreeqcpp/gases.cpp	/^build_fixed_volume_gas(void)$/;"	f	class:Phreeqc
build_gas_phase	phreeqcpp/prep.cpp	/^build_gas_phase(void)$/;"	f	class:Phreeqc
build_jacobian_sums	phreeqcpp/prep.cpp	/^build_jacobian_sums(int k)$/;"	f	class:Phreeqc
build_mb_sums	phreeqcpp/prep.cpp	/^build_mb_sums(void)$/;"	f	class:Phreeqc
build_min_exch	phreeqcpp/prep.cpp	/^build_min_exch(void)$/;"	f	class:Phreeqc
build_min_surface	phreeqcpp/prep.cpp	/^build_min_surface(void)$/;"	f	class:Phreeqc
build_model	phreeqcpp/prep.cpp	/^build_model(void)$/;"	f	class:Phreeqc
build_os	Makefile	/^build_os = darwin15.5.0$/;"	m
build_pure_phases	phreeqcpp/prep.cpp	/^build_pure_phases(void)$/;"	f	class:Phreeqc
build_solution_phase_boundaries	phreeqcpp/prep.cpp	/^build_solution_phase_boundaries(void)$/;"	f	class:Phreeqc
build_species_list	phreeqcpp/prep.cpp	/^build_species_list(int n)$/;"	f	class:Phreeqc
build_ss_assemblage	phreeqcpp/prep.cpp	/^build_ss_assemblage(void)$/;"	f	class:Phreeqc
build_tally_table	phreeqcpp/tally.cpp	/^build_tally_table(void)$/;"	f	class:Phreeqc
build_triplet	Makefile	/^build_triplet = x86_64-apple-darwin15.5.0$/;"	m
build_vendor	Makefile	/^build_vendor = apple$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
c	phreeqcpp/global_structures.h	/^	LDBLE c;					\/* concentration for AQ, equivalent fraction for EX *\/$/;"	m	struct:spec
c0	phreeqcpp/global_structures.h	/^		LDBLE c0;$/;"	m	union:pitz_param::__anon21
c_params	phreeqcpp/KineticsComp.h	/^	  std::vector< std::string > c_params;  \/\/ Not used$/;"	m	class:cxxKineticsComp
cal	phreeqcpp/global_structures.h	/^typedef enum { kcal, cal, kjoules, joules } DELTA_H_UNIT;$/;"	e	enum:__anon14
calc_PR	phreeqcpp/gases.cpp	/^calc_PR(void)$/;"	f	class:Phreeqc
calc_PR	phreeqcpp/prep.cpp	/^calc_PR(std::vector<struct phase *> phase_ptrs, LDBLE P, LDBLE TK, LDBLE V_m)$/;"	f	class:Phreeqc
calc_SC	phreeqcpp/basicsubs.cpp	/^calc_SC(void)$/;"	f	class:Phreeqc
calc_alk	phreeqcpp/utilities.cpp	/^calc_alk(struct reaction * rxn_ptr)$/;"	f	class:Phreeqc
calc_all_donnan	phreeqcpp/integrate.cpp	/^calc_all_donnan(void)$/;"	f	class:Phreeqc
calc_all_g	phreeqcpp/integrate.cpp	/^calc_all_g(void)$/;"	f	class:Phreeqc
calc_delta_v	phreeqcpp/prep.cpp	/^calc_delta_v(reaction *r_ptr, bool phase)$/;"	f	class:Phreeqc
calc_dens	phreeqcpp/basicsubs.cpp	/^calc_dens(void)$/;"	f	class:Phreeqc
calc_dielectrics	phreeqcpp/utilities.cpp	/^calc_dielectrics(LDBLE tc, LDBLE pa)$/;"	f	class:Phreeqc
calc_dummy_kinetic_reaction_tally	phreeqcpp/tally.cpp	/^calc_dummy_kinetic_reaction_tally(cxxKinetics *kinetics_ptr)$/;"	f	class:Phreeqc
calc_final_kinetic_reaction	phreeqcpp/kinetics.cpp	/^calc_final_kinetic_reaction(cxxKinetics *kinetics_ptr)$/;"	f	class:Phreeqc
calc_fixed_volume_gas_pressures	phreeqcpp/gases.cpp	/^calc_fixed_volume_gas_pressures(void)$/;"	f	class:Phreeqc
calc_gas_pressures	phreeqcpp/model.cpp	/^calc_gas_pressures(void)$/;"	f	class:Phreeqc
calc_init_donnan	phreeqcpp/integrate.cpp	/^calc_init_donnan(void)$/;"	f	class:Phreeqc
calc_init_g	phreeqcpp/integrate.cpp	/^calc_init_g(void)$/;"	f	class:Phreeqc
calc_kinetic_reaction	phreeqcpp/kinetics.cpp	/^calc_kinetic_reaction(cxxKinetics *kinetics_ptr, LDBLE time_step)$/;"	f	class:Phreeqc
calc_lk_phase	phreeqcpp/prep.cpp	/^calc_lk_phase(phase *p_ptr, LDBLE TK, LDBLE pa)$/;"	f	class:Phreeqc
calc_logk_n	phreeqcpp/basicsubs.cpp	/^calc_logk_n(const char *name)$/;"	f	class:Phreeqc
calc_logk_p	phreeqcpp/basicsubs.cpp	/^calc_logk_p(const char *name)$/;"	f	class:Phreeqc
calc_logk_s	phreeqcpp/basicsubs.cpp	/^calc_logk_s(const char *name)$/;"	f	class:Phreeqc
calc_pitz_param	phreeqcpp/pitzer.cpp	/^calc_pitz_param(struct pitz_param *pz_ptr, LDBLE TK, LDBLE TR)$/;"	f	class:Phreeqc
calc_psi_avg	phreeqcpp/integrate.cpp	/^calc_psi_avg(cxxSurfaceCharge *charge_ptr, LDBLE surf_chrg_eq)$/;"	f	class:Phreeqc
calc_rho_0	phreeqcpp/utilities.cpp	/^calc_rho_0(LDBLE tc, LDBLE pa)$/;"	f	class:Phreeqc
calc_sit_param	phreeqcpp/sit.cpp	/^calc_sit_param(struct pitz_param *pz_ptr, LDBLE TK, LDBLE TR)$/;"	f	class:Phreeqc
calc_solution_volume	phreeqcpp/basicsubs.cpp	/^calc_solution_volume(void)$/;"	f	class:Phreeqc
calc_ss_fractions	phreeqcpp/model.cpp	/^calc_ss_fractions(void)$/;"	f	class:Phreeqc
calc_surface_charge	phreeqcpp/basicsubs.cpp	/^calc_surface_charge(const char *surface_name)$/;"	f	class:Phreeqc
calc_vm	phreeqcpp/prep.cpp	/^calc_vm(LDBLE tc, LDBLE pa)$/;"	f	class:Phreeqc
calculate_isotope_moles	phreeqcpp/isotopes.cpp	/^calculate_isotope_moles(struct element *elt_ptr,$/;"	f	class:Phreeqc
calculate_value	phreeqcpp/Phreeqc.h	/^	struct calculate_value **calculate_value;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::calculate_value
calculate_value	phreeqcpp/global_structures.h	/^struct calculate_value$/;"	s
calculate_value_alloc	phreeqcpp/isotopes.cpp	/^calculate_value_alloc(void)$/;"	f	class:Phreeqc
calculate_value_free	phreeqcpp/isotopes.cpp	/^calculate_value_free(struct calculate_value *calculate_value_ptr)$/;"	f	class:Phreeqc
calculate_value_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *calculate_value_hash_table;$/;"	m	class:Phreeqc
calculate_value_init	phreeqcpp/isotopes.cpp	/^calculate_value_init(struct calculate_value *calculate_value_ptr)$/;"	f	class:Phreeqc
calculate_value_search	phreeqcpp/isotopes.cpp	/^calculate_value_search(const char *name)$/;"	f	class:Phreeqc
calculate_value_store	phreeqcpp/isotopes.cpp	/^calculate_value_store(const char *name, int replace_if_found)$/;"	f	class:Phreeqc
calculate_values	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > calculate_values;$/;"	m	class:SelectedOutput
calculate_values	phreeqcpp/global_structures.h	/^	struct name_master *calculate_values;$/;"	m	struct:punch	typeref:struct:punch::name_master
calculate_values	phreeqcpp/isotopes.cpp	/^calculate_values(void)$/;"	f	class:Phreeqc
calculated	phreeqcpp/global_structures.h	/^	int calculated;$/;"	m	struct:calculate_value
calculating_deriv	phreeqcpp/Phreeqc.h	/^	int calculating_deriv;$/;"	m	class:Phreeqc
capacitance	phreeqcpp/SurfaceCharge.h	/^	LDBLE capacitance[2];$/;"	m	class:cxxSurfaceCharge
carbon	phreeqcpp/Phreeqc.h	/^	int carbon;$/;"	m	class:Phreeqc
carbon	phreeqcpp/global_structures.h	/^	LDBLE carbon;				\/* stoichiometric coefficient of carbon in species *\/$/;"	m	struct:species
carbon	phreeqcpp/global_structures.h	/^	int carbon;$/;"	m	struct:inverse
carbon_derivs	phreeqcpp/inverse.cpp	/^carbon_derivs(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
carbon_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *carbon_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
cation_list	phreeqcpp/Phreeqc.h	/^	std::vector<int> s_list, cation_list, neutral_list, anion_list, ion_list, param_list;$/;"	m	class:Phreeqc
cations	phreeqcpp/Phreeqc.h	/^	struct species **spec, **cations, **anions, **neutrals;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::
cb	phreeqcpp/Solution.h	/^	LDBLE cb;$/;"	m	class:cxxSolution
cb_x	phreeqcpp/Phreeqc.h	/^	LDBLE cb_x;$/;"	m	class:Phreeqc
cd_music	phreeqcpp/global_structures.h	/^	LDBLE cd_music[5];$/;"	m	struct:species
cell	phreeqcpp/Phreeqc.h	/^	int cell;$/;"	m	class:Phreeqc
cell	phreeqcpp/StorageBinList.h	/^	StorageBinListItem cell; \/\/ not included in GetAllItems$/;"	m	class:StorageBinList
cell_data	phreeqcpp/Phreeqc.h	/^	struct cell_data *cell_data;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::cell_data
cell_data	phreeqcpp/global_structures.h	/^struct cell_data$/;"	s
cell_no	phreeqcpp/Phreeqc.h	/^	int cell_no, mixrun;$/;"	m	class:Phreeqc
cell_no	phreeqcpp/global_structures.h	/^	int cell_no;$/;"	m	struct:Change_Surf
cell_pore_volume	phreeqcpp/Phreeqc.h	/^	LDBLE cell_pore_volume;$/;"	m	class:Phreeqc
cell_porosity	phreeqcpp/Phreeqc.h	/^	LDBLE cell_porosity;$/;"	m	class:Phreeqc
cell_saturation	phreeqcpp/Phreeqc.h	/^	LDBLE cell_saturation;$/;"	m	class:Phreeqc
cell_volume	phreeqcpp/Phreeqc.h	/^	LDBLE cell_volume;$/;"	m	class:Phreeqc
cells	phreeqcpp/runner.h	/^	StorageBinListItem cells;$/;"	m	class:runner
censor	phreeqcpp/Phreeqc.h	/^	LDBLE censor;$/;"	m	class:Phreeqc
change_hydrogen_in_elt_list	phreeqcpp/prep.cpp	/^change_hydrogen_in_elt_list(LDBLE charge)$/;"	f	class:Phreeqc
change_surf	phreeqcpp/Phreeqc.h	/^	struct Change_Surf *change_surf;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::Change_Surf
change_surf_alloc	phreeqcpp/structures.cpp	/^change_surf_alloc(int count)$/;"	f	class:Phreeqc
change_surf_count	phreeqcpp/Phreeqc.h	/^	int change_surf_count;$/;"	m	class:Phreeqc
char_vector	phreeqcpp/global_structures.h	/^	char **char_vector;$/;"	m	struct:spread_row
charge_balance	phreeqcpp/ExchComp.h	/^	LDBLE charge_balance;$/;"	m	class:cxxExchComp
charge_balance	phreeqcpp/SelectedOutput.h	/^	bool charge_balance;$/;"	m	class:SelectedOutput
charge_balance	phreeqcpp/SurfaceCharge.h	/^	LDBLE charge_balance;$/;"	m	class:cxxSurfaceCharge
charge_balance	phreeqcpp/SurfaceComp.h	/^	LDBLE charge_balance;$/;"	m	class:cxxSurfaceComp
charge_balance	phreeqcpp/global_structures.h	/^	int charge_balance;$/;"	m	struct:punch
charge_balance_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *charge_balance_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
charge_group_map	phreeqcpp/Phreeqc.h	/^	std::map <LDBLE, LDBLE> charge_group_map;$/;"	m	class:Phreeqc
charge_name	phreeqcpp/SurfaceComp.h	/^	std::string charge_name;$/;"	m	class:cxxSurfaceComp
chart_batch_type	phreeqcpp/ChartObject.h	/^	enum chart_batch_type$/;"	g	class:ChartObject
chart_handler	phreeqcpp/Phreeqc.h	/^	ChartHandler chart_handler;$/;"	m	class:Phreeqc
chart_map	phreeqcpp/ChartHandler.h	/^	std::map<int, ChartObject *> chart_map;$/;"	m	class:ChartHandler
chart_title	phreeqcpp/ChartObject.h	/^	std::string chart_title;$/;"	m	class:ChartObject
chart_type	phreeqcpp/ChartObject.h	/^	int chart_type;$/;"	m	class:ChartObject
chart_type	phreeqcpp/Phreeqc.h	/^	int chart_type;$/;"	m	class:Phreeqc
chartobject_ptr	phreeqcpp/Form1.h	/^			 ChartObject * chartobject_ptr;$/;"	m	class:zdg_ui2::Form1
chartobject_ptr	phreeqcpp/Form1.h	/^	public: ChartObject* chartobject_ptr;$/;"	m	class:zdg_ui2::ChartObj
check_database	IPhreeqc.cpp	/^void IPhreeqc::check_database(const char* sz_routine)$/;"	f	class:IPhreeqc
check_eqn	phreeqcpp/parse.cpp	/^check_eqn(int association)$/;"	f	class:Phreeqc
check_equation	phreeqcpp/global_structures.h	/^	int check_equation;			\/* switch to check equation for charge and element balance *\/$/;"	m	struct:phase
check_equation	phreeqcpp/global_structures.h	/^	int check_equation;			\/* switch to check equation for charge and element balance *\/$/;"	m	struct:species
check_gammas_pz	phreeqcpp/pitzer.cpp	/^check_gammas_pz(void)$/;"	f	class:Phreeqc
check_gammas_sit	phreeqcpp/sit.cpp	/^check_gammas_sit(void)$/;"	f	class:Phreeqc
check_isotopes	phreeqcpp/inverse.cpp	/^check_isotopes(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
check_key	phreeqcpp/common/PHRQ_io.cpp	/^check_key(std::string::iterator begin, std::string::iterator end)$/;"	f	class:PHRQ_io
check_key	phreeqcpp/common/Parser.cxx	/^CParser::check_key(std::string::iterator begin, std::string::iterator end)$/;"	f	class:CParser
check_key	phreeqcpp/read.cpp	/^check_key(const char *str)$/;"	f	class:Phreeqc
check_line	phreeqcpp/common/Parser.cxx	/^PHRQ_io::LINE_TYPE CParser::check_line(const std::string & str,$/;"	f	class:CParser
check_line	phreeqcpp/input.cpp	/^check_line(const char *string, int allow_empty, int allow_eof,$/;"	f	class:Phreeqc
check_line_impl	phreeqcpp/input.cpp	/^check_line_impl(const char *string, int allow_empty, int allow_eof,$/;"	f	class:Phreeqc
check_line_return	phreeqcpp/Phreeqc.h	/^	int check_line_return;  $/;"	m	class:Phreeqc
check_neg_log	phreeqcpp/Form1.h	/^	private: bool check_neg_log( int i, int i2)$/;"	f	class:zdg_ui2::Form1
check_pp_assemblage	phreeqcpp/step.cpp	/^check_pp_assemblage(cxxPPassemblage *pp_assemblage_ptr)$/;"	f	class:Phreeqc
check_residuals	phreeqcpp/model.cpp	/^check_residuals(void)$/;"	f	class:Phreeqc
check_same_model	phreeqcpp/prep.cpp	/^check_same_model(void)$/;"	f	class:Phreeqc
check_solns	phreeqcpp/inverse.cpp	/^check_solns(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
check_species_input	phreeqcpp/tidy.cpp	/^check_species_input(void)$/;"	f	class:Phreeqc
check_surfaces	phreeqcpp/transport.cpp	/^check_surfaces(cxxSurface *surface_ptr1, cxxSurface *surface_ptr2)$/;"	f	class:Phreeqc
check_units	phreeqcpp/common/Parser.cxx	/^CParser::STATUS_TYPE CParser::check_units(std::string & tot_units,$/;"	f	class:CParser
check_units	phreeqcpp/read.cpp	/^check_units(char *tot_units, int alkalinity, int check_compatibility,$/;"	f	class:Phreeqc
check_units	phreeqcpp/read.cpp	/^check_units(std::string &tot_units, bool alkalinity, bool check_compatibility,$/;"	f	class:Phreeqc
checkextra	phreeqcpp/PBasic.cpp	/^checkextra(struct LOC_exec *LINK)$/;"	f	class:PBasic
checking	phreeqcpp/PBasic.h	/^#define checking	/;"	d
chset	phreeqcpp/PBasic.cpp	/^typedef long chset[9];$/;"	t	file:
cl1	phreeqcpp/cl1.cpp	/^cl1(int k, int l, int m, int n,$/;"	f	class:Phreeqc
cl1_space	phreeqcpp/cl1.cpp	/^cl1_space(int check, int l_n2d, int klm, int l_nklmd)$/;"	f	class:Phreeqc
clean_up	phreeqcpp/structures.cpp	/^clean_up(void)$/;"	f	class:Phreeqc
cleanup_after_parser	phreeqcpp/read.cpp	/^cleanup_after_parser(CParser &parser)$/;"	f	class:Phreeqc
clear	phreeqcpp/prep.cpp	/^clear(void)$/;"	f	class:Phreeqc
clear_istream	phreeqcpp/common/PHRQ_io.cpp	/^clear_istream(void)$/;"	f	class:PHRQ_io
clear_master_activity	phreeqcpp/Solution.h	/^	void clear_master_activity()    	{this->master_activity.clear();}$/;"	f	class:cxxSolution
clear_totals	phreeqcpp/Solution.h	/^	void clear_totals()					{this->totals.clear();}$/;"	f	class:cxxSolution
clearloops	phreeqcpp/PBasic.cpp	/^clearloops(void)$/;"	f	class:PBasic
clearvar	phreeqcpp/PBasic.cpp	/^clearvar(varrec * v)$/;"	f	class:PBasic
clearvars	phreeqcpp/PBasic.cpp	/^clearvars(void)$/;"	f	class:PBasic
close_input_files	IPhreeqc.cpp	/^int IPhreeqc::close_input_files(void)$/;"	f	class:IPhreeqc
close_ostreams	phreeqcpp/common/PHRQ_io.cpp	/^close_ostreams(void)$/;"	f	class:PHRQ_io
close_output_files	IPhreeqc.cpp	/^int IPhreeqc::close_output_files(void)$/;"	f	class:IPhreeqc
cm3_per_mol	phreeqcpp/global_structures.h	/^typedef enum { cm3_per_mol, dm3_per_mol, m3_per_mol } DELTA_V_UNIT;$/;"	e	enum:__anon15
cmdbye	phreeqcpp/PBasic.cpp	/^cmdbye(void)$/;"	f	class:PBasic
cmdchange_por	phreeqcpp/PBasic.cpp	/^cmdchange_por(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdchange_surf	phreeqcpp/PBasic.cpp	/^cmdchange_surf(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmddata	phreeqcpp/PBasic.cpp	/^cmddata(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmddel	phreeqcpp/PBasic.cpp	/^cmddel(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmddim	phreeqcpp/PBasic.cpp	/^cmddim(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdelse	phreeqcpp/PBasic.cpp	/^cmdelse(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdend	phreeqcpp/PBasic.cpp	/^cmdend(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmderase	phreeqcpp/PBasic.cpp	/^cmderase(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdfor	phreeqcpp/PBasic.cpp	/^cmdfor(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdgosub	phreeqcpp/PBasic.cpp	/^cmdgosub(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdgoto	phreeqcpp/PBasic.cpp	/^cmdgoto(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdgotoxy	phreeqcpp/PBasic.cpp	/^cmdgotoxy(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdgraph_sy	phreeqcpp/PBasic.cpp	/^cmdgraph_sy(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdgraph_x	phreeqcpp/PBasic.cpp	/^cmdgraph_x(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdgraph_y	phreeqcpp/PBasic.cpp	/^cmdgraph_y(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdif	phreeqcpp/PBasic.cpp	/^cmdif(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdlet	phreeqcpp/PBasic.cpp	/^cmdlet(bool implied, struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdlist	phreeqcpp/PBasic.cpp	/^cmdlist(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdload	phreeqcpp/PBasic.cpp	/^cmdload(bool merging, char * name, struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdnew	phreeqcpp/PBasic.cpp	/^cmdnew(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdnext	phreeqcpp/PBasic.cpp	/^cmdnext(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdon	phreeqcpp/PBasic.cpp	/^cmdon(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdplot_xy	phreeqcpp/PBasic.cpp	/^cmdplot_xy(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdpoke	phreeqcpp/PBasic.cpp	/^cmdpoke(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdprint	phreeqcpp/PBasic.cpp	/^cmdprint(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdpunch	phreeqcpp/PBasic.cpp	/^cmdpunch(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdput	phreeqcpp/PBasic.cpp	/^cmdput(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdread	phreeqcpp/PBasic.cpp	/^cmdread(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdrenum	phreeqcpp/PBasic.cpp	/^cmdrenum(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdrestore	phreeqcpp/PBasic.cpp	/^cmdrestore(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdreturn	phreeqcpp/PBasic.cpp	/^cmdreturn(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdrun	phreeqcpp/PBasic.cpp	/^cmdrun(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdsave	phreeqcpp/PBasic.cpp	/^cmdsave(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdwend	phreeqcpp/PBasic.cpp	/^cmdwend(struct LOC_exec *LINK)$/;"	f	class:PBasic
cmdwhile	phreeqcpp/PBasic.cpp	/^cmdwhile(struct LOC_exec *LINK)$/;"	f	class:PBasic
co2	phreeqcpp/global_structures.h	/^	LDBLE co2;					\/* stoichiometric coefficient of C(4) in species *\/$/;"	m	struct:species
coef	phreeqcpp/SolutionIsotope.h	/^ 	LDBLE coef;					\/* coefficient of element in phase *\/$/;"	m	class:cxxSolutionIsotope
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;					\/* coefficient of species name *\/$/;"	m	struct:rxn_token_temp
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;					\/* number of element e's in eqn *\/$/;"	m	struct:elt_list
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;$/;"	m	struct:list0
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;$/;"	m	struct:list2
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;$/;"	m	struct:name_coef
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;$/;"	m	struct:rxn_token
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;$/;"	m	struct:species_list
coef	phreeqcpp/global_structures.h	/^	LDBLE coef;$/;"	m	struct:unknown_list
coef	phreeqcpp/global_structures.h	/^ 	LDBLE coef;					\/* coefficient of element in master species *\/$/;"	m	struct:master
coef	phreeqcpp/global_structures.h	/^ 	LDBLE coef;					\/* coefficient of element in phase *\/$/;"	m	struct:isotope
coef_in_master	phreeqcpp/tidy.cpp	/^coef_in_master(struct master * master_ptr)$/;"	f	class:Phreeqc
col_back	phreeqcpp/Phreeqc.h	/^	int *row_back, *col_back;$/;"	m	class:Phreeqc
col_epsilon	phreeqcpp/Phreeqc.h	/^	int col_phases, col_redox, col_epsilon, col_ph, col_water,$/;"	m	class:Phreeqc
col_isotopes	phreeqcpp/Phreeqc.h	/^		col_isotopes, col_phase_isotopes;$/;"	m	class:Phreeqc
col_name	phreeqcpp/Phreeqc.h	/^	const char **col_name, **row_name;$/;"	m	class:Phreeqc
col_ph	phreeqcpp/Phreeqc.h	/^	int col_phases, col_redox, col_epsilon, col_ph, col_water,$/;"	m	class:Phreeqc
col_phase_isotopes	phreeqcpp/Phreeqc.h	/^		col_isotopes, col_phase_isotopes;$/;"	m	class:Phreeqc
col_phases	phreeqcpp/Phreeqc.h	/^	int col_phases, col_redox, col_epsilon, col_ph, col_water,$/;"	m	class:Phreeqc
col_redox	phreeqcpp/Phreeqc.h	/^	int col_phases, col_redox, col_epsilon, col_ph, col_water,$/;"	m	class:Phreeqc
col_use	phreeqcpp/Form1.h	/^			 int col_use, symbol_use;$/;"	m	class:zdg_ui2::Form1
col_water	phreeqcpp/Phreeqc.h	/^	int col_phases, col_redox, col_epsilon, col_ph, col_water,$/;"	m	class:Phreeqc
colnr	phreeqcpp/ChartObject.h	/^	int colnr;$/;"	m	class:ChartObject
colnr	phreeqcpp/Phreeqc.h	/^	int colnr, rownr;$/;"	m	class:Phreeqc
color	phreeqcpp/CurveObject.h	/^	std::string id, color, symbol;$/;"	m	class:CurveObject
column	phreeqcpp/global_structures.h	/^	int column;$/;"	m	struct:inv_phases
command_tokens	phreeqcpp/PBasic.h	/^	static std::map<const std::string, BASIC_TOKEN> command_tokens;$/;"	m	class:PBasic
commands	phreeqcpp/global_structures.h	/^	char *commands;$/;"	m	struct:calculate_value
commands	phreeqcpp/global_structures.h	/^	char *commands;$/;"	m	struct:rate
comp_name	phreeqcpp/global_structures.h	/^	const char *comp_name;$/;"	m	struct:Change_Surf
comp_unknowns	phreeqcpp/global_structures.h	/^	struct unknown **comp_unknowns;	\/* list for CD_MUSIC of comps that contribute to 0 plane mass-balance term *\/$/;"	m	struct:unknown	typeref:struct:unknown::unknown
components	phreeqcpp/Form1.h	/^	private: System::ComponentModel::Container ^components;$/;"	m	class:zdg_ui2::Form1
comps	phreeqcpp/ISolution.h	/^	std::map < std::string, cxxISolutionComp > comps;$/;"	m	class:cxxISolution
compute_gfw	phreeqcpp/utilities.cpp	/^compute_gfw(const char *string, LDBLE * gfw)$/;"	f	class:Phreeqc
connect_simulations	phreeqcpp/ChartObject.h	/^	bool connect_simulations;$/;"	m	class:ChartObject
connect_simulations	phreeqcpp/Phreeqc.h	/^	int connect_simulations, graph_initial_solutions;$/;"	m	class:Phreeqc
const_iso	phreeqcpp/global_structures.h	/^struct const_iso$/;"	s
const_key	phreeqcpp/global_structures.h	/^ struct const_key$/;"	s
constraint	phreeqcpp/global_structures.h	/^	int constraint;$/;"	m	struct:inv_phases
content	phreeqcpp/nvector.h	/^		void *content;$/;"	m	struct:_generic_M_Env
content	phreeqcpp/nvector.h	/^		void *content;$/;"	m	struct:_generic_N_Vector
convergence_tolerance	phreeqcpp/Phreeqc.h	/^	LDBLE convergence_tolerance;$/;"	m	class:Phreeqc
convert_isotope	phreeqcpp/isotopes.cpp	/^convert_isotope(struct master_isotope * master_isotope_ptr, LDBLE ratio)$/;"	f	class:Phreeqc
convert_time	phreeqcpp/common/Utils.cxx	/^Utilities::convert_time(double t, std::string in, std::string out)$/;"	f	class:Utilities
convert_units	phreeqcpp/prep.cpp	/^convert_units(cxxSolution *solution_ptr)$/;"	f	class:Phreeqc
converted_ratio	phreeqcpp/global_structures.h	/^	LDBLE converted_ratio;$/;"	m	struct:isotope_ratio
copier	phreeqcpp/global_structures.h	/^struct copier$/;"	s
copier_add	phreeqcpp/structures.cpp	/^copier_add(struct copier *copier_ptr, int n_user, int start, int end)$/;"	f	class:Phreeqc
copier_free	phreeqcpp/structures.cpp	/^copier_free(struct copier *copier_ptr)$/;"	f	class:Phreeqc
copier_init	phreeqcpp/structures.cpp	/^copier_init(struct copier *copier_ptr)$/;"	f	class:Phreeqc
copy_defaults	phreeqcpp/spread.cpp	/^copy_defaults(struct defaults *dest_ptr, struct defaults *src_ptr)$/;"	f	class:Phreeqc
copy_entities	phreeqcpp/mainsubs.cpp	/^copy_entities(void)$/;"	f	class:Phreeqc
copy_exchange	phreeqcpp/Phreeqc.h	/^	struct copier copy_exchange;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_gas_phase	phreeqcpp/Phreeqc.h	/^	struct copier copy_gas_phase;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_kinetics	phreeqcpp/Phreeqc.h	/^	struct copier copy_kinetics;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_mix	phreeqcpp/Phreeqc.h	/^	struct copier copy_mix;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_pp_assemblage	phreeqcpp/Phreeqc.h	/^	struct copier copy_pp_assemblage;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_pressure	phreeqcpp/Phreeqc.h	/^	struct copier copy_pressure;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_reaction	phreeqcpp/Phreeqc.h	/^	struct copier copy_reaction;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_row	phreeqcpp/spread.cpp	/^copy_row(struct spread_row *spread_row_ptr)$/;"	f	class:Phreeqc
copy_solution	phreeqcpp/Phreeqc.h	/^	struct copier copy_solution;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_ss_assemblage	phreeqcpp/Phreeqc.h	/^	struct copier copy_ss_assemblage;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_surface	phreeqcpp/Phreeqc.h	/^	struct copier copy_surface;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_temperature	phreeqcpp/Phreeqc.h	/^	struct copier copy_temperature;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::copier
copy_title	phreeqcpp/common/Parser.cxx	/^CParser::TOKEN_TYPE CParser::copy_title(std::string & token,$/;"	f	class:CParser
copy_title	phreeqcpp/utilities.cpp	/^copy_title(char *token_ptr, char **ptr, int *length)$/;"	f	class:Phreeqc
copy_token	phreeqcpp/common/Parser.cxx	/^CParser::TOKEN_TYPE CParser::copy_token(std::string & token,$/;"	f	class:CParser
copy_token	phreeqcpp/utilities.cpp	/^copy_token(char *token_ptr, char **ptr, int *length)$/;"	f	class:Phreeqc
copy_token	phreeqcpp/utilities.cpp	/^copy_token(std::string &token, char **ptr)$/;"	f	class:Phreeqc
copy_token_tab	phreeqcpp/spread.cpp	/^copy_token_tab(char *token_ptr, char **ptr, int *length)$/;"	f	class:Phreeqc
copy_use	phreeqcpp/mainsubs.cpp	/^copy_use(int i)$/;"	f	class:Phreeqc
correct_disp	phreeqcpp/Phreeqc.h	/^	int correct_disp;$/;"	m	class:Phreeqc
count	phreeqcpp/Pressure.h	/^	int count;$/;"	m	class:cxxPressure
count	phreeqcpp/cxxKinetics.h	/^	int count;$/;"	m	class:cxxKinetics
count	phreeqcpp/global_structures.h	/^	int count;$/;"	m	struct:copier
count	phreeqcpp/global_structures.h	/^	int count;$/;"	m	struct:spread_row
countSteps	phreeqcpp/Reaction.h	/^	int countSteps;$/;"	m	class:cxxReaction
countTemps	phreeqcpp/Temperature.h	/^	int countTemps;$/;"	m	class:cxxTemperature
count_activities	phreeqcpp/global_structures.h	/^	int count_activities;$/;"	m	struct:punch
count_ad_cells	phreeqcpp/Phreeqc.h	/^	int count_ad_cells;$/;"	m	class:Phreeqc
count_ad_shifts	phreeqcpp/Phreeqc.h	/^	int count_ad_shifts;$/;"	m	class:Phreeqc
count_add_logk	phreeqcpp/global_structures.h	/^	int count_add_logk;$/;"	m	struct:logk
count_add_logk	phreeqcpp/global_structures.h	/^	int count_add_logk;$/;"	m	struct:phase
count_add_logk	phreeqcpp/global_structures.h	/^	int count_add_logk;$/;"	m	struct:species
count_anions	phreeqcpp/Phreeqc.h	/^	int count_cations, count_anions, count_neutrals;$/;"	m	class:Phreeqc
count_bad	phreeqcpp/Phreeqc.h	/^	int count_good, count_bad, count_minimal, count_calls;$/;"	m	class:Phreeqc
count_calculate_value	phreeqcpp/Phreeqc.h	/^	int count_calculate_value;$/;"	m	class:Phreeqc
count_calculate_values	phreeqcpp/global_structures.h	/^	int count_calculate_values;$/;"	m	struct:punch
count_calls	phreeqcpp/Phreeqc.h	/^	int count_good, count_bad, count_minimal, count_calls;$/;"	m	class:Phreeqc
count_cations	phreeqcpp/Phreeqc.h	/^	int count_cations, count_anions, count_neutrals;$/;"	m	class:Phreeqc
count_cells	phreeqcpp/Phreeqc.h	/^	int count_cells;$/;"	m	class:Phreeqc
count_comp_unknowns	phreeqcpp/global_structures.h	/^	int count_comp_unknowns;$/;"	m	struct:unknown
count_elements	phreeqcpp/Phreeqc.h	/^	int count_elements;$/;"	m	class:Phreeqc
count_elts	phreeqcpp/Phreeqc.h	/^	int count_elts;		\/* number of elements in elt_list = position of next *\/$/;"	m	class:Phreeqc
count_elts	phreeqcpp/global_structures.h	/^	int count_elts;$/;"	m	struct:inverse
count_exch_spec	phreeqcpp/global_structures.h	/^	int count_exch_spec;		\/* number of exchange species *\/$/;"	m	struct:sol_D
count_exchange	phreeqcpp/global_structures.h	/^	int count_exchange;$/;"	m	struct:model
count_force_solns	phreeqcpp/global_structures.h	/^	int count_force_solns;$/;"	m	struct:inverse
count_gas_phase	phreeqcpp/global_structures.h	/^	int count_gas_phase;$/;"	m	struct:model
count_gases	phreeqcpp/global_structures.h	/^	int count_gases;$/;"	m	struct:punch
count_good	phreeqcpp/Phreeqc.h	/^	int count_good, count_bad, count_minimal, count_calls;$/;"	m	class:Phreeqc
count_i_u	phreeqcpp/global_structures.h	/^	int count_i_u;$/;"	m	struct:inverse
count_inverse	phreeqcpp/Phreeqc.h	/^	int count_inverse;$/;"	m	class:Phreeqc
count_inverse_models	phreeqcpp/Phreeqc.h	/^	int count_inverse_models, count_pat_solutions;$/;"	m	class:Phreeqc
count_iso	phreeqcpp/global_structures.h	/^	int count_iso;$/;"	m	struct:defaults
count_iso_defaults	phreeqcpp/Phreeqc.cpp	/^const int Phreeqc::count_iso_defaults = (sizeof(iso_defaults) \/ sizeof(struct const_iso));$/;"	m	class:Phreeqc	file:
count_iso_defaults	phreeqcpp/Phreeqc.h	/^	static const int count_iso_defaults;$/;"	m	class:Phreeqc
count_isotope_alpha	phreeqcpp/Phreeqc.h	/^	int count_isotope_alpha;$/;"	m	class:Phreeqc
count_isotope_ratio	phreeqcpp/Phreeqc.h	/^	int count_isotope_ratio;$/;"	m	class:Phreeqc
count_isotope_unknowns	phreeqcpp/global_structures.h	/^	int count_isotope_unknowns;$/;"	m	struct:inverse
count_isotope_unknowns	phreeqcpp/inverse.cpp	/^count_isotope_unknowns(struct inverse *inv_ptr,$/;"	f	class:Phreeqc
count_isotopes	phreeqcpp/global_structures.h	/^	int count_isotopes;$/;"	m	struct:inv_phases
count_isotopes	phreeqcpp/global_structures.h	/^	int count_isotopes;$/;"	m	struct:inverse
count_isotopes	phreeqcpp/global_structures.h	/^	int count_isotopes;$/;"	m	struct:punch
count_kinetics	phreeqcpp/global_structures.h	/^	int count_kinetics;$/;"	m	struct:model
count_kinetics	phreeqcpp/global_structures.h	/^	int count_kinetics;$/;"	m	struct:punch
count_logk	phreeqcpp/Phreeqc.h	/^	int count_logk;$/;"	m	class:Phreeqc
count_m_s	phreeqcpp/Phreeqc.h	/^	int count_m_s;$/;"	m	class:Phreeqc
count_master	phreeqcpp/Phreeqc.h	/^	int count_master;$/;"	m	class:Phreeqc
count_master_isotope	phreeqcpp/Phreeqc.h	/^	int count_master_isotope;$/;"	m	class:Phreeqc
count_master_list	phreeqcpp/global_structures.h	/^	int count_master_list;$/;"	m	struct:inverse
count_mb_unknowns	phreeqcpp/Phreeqc.h	/^	int count_mb_unknowns;$/;"	m	class:Phreeqc
count_minimal	phreeqcpp/Phreeqc.h	/^	int count_good, count_bad, count_minimal, count_calls;$/;"	m	class:Phreeqc
count_molalities	phreeqcpp/global_structures.h	/^	int count_molalities;$/;"	m	struct:punch
count_neutrals	phreeqcpp/Phreeqc.h	/^	int count_cations, count_anions, count_neutrals;$/;"	m	class:Phreeqc
count_optimize	phreeqcpp/Phreeqc.h	/^	int count_rows, count_optimize;$/;"	m	class:Phreeqc
count_pat_solutions	phreeqcpp/Phreeqc.h	/^	int count_inverse_models, count_pat_solutions;$/;"	m	class:Phreeqc
count_pg	phreeqcpp/Phreeqc.h	/^	int count_pp, count_pg, count_ss;$/;"	m	class:Phreeqc
count_ph_uncertainties	phreeqcpp/global_structures.h	/^	int count_ph_uncertainties;$/;"	m	struct:inverse
count_phases	phreeqcpp/Phreeqc.h	/^	int count_phases;$/;"	m	class:Phreeqc
count_phases	phreeqcpp/global_structures.h	/^	int count_phases;$/;"	m	struct:inverse
count_pitz_param	phreeqcpp/Phreeqc.h	/^	int count_pitz_param, max_pitz_param;$/;"	m	class:Phreeqc
count_pp	phreeqcpp/Phreeqc.h	/^	int count_pp, count_pg, count_ss;$/;"	m	class:Phreeqc
count_pp_assemblage	phreeqcpp/global_structures.h	/^	int count_pp_assemblage;$/;"	m	struct:model
count_pure_phases	phreeqcpp/global_structures.h	/^	int count_pure_phases;$/;"	m	struct:punch
count_rate_p	phreeqcpp/Phreeqc.h	/^	int count_rate_p;$/;"	m	class:Phreeqc
count_rates	phreeqcpp/Phreeqc.h	/^	int count_rates;$/;"	m	class:Phreeqc
count_redox_rxns	phreeqcpp/global_structures.h	/^	int count_redox_rxns;$/;"	m	struct:inverse
count_rows	phreeqcpp/Phreeqc.h	/^	int count_rows, count_optimize;$/;"	m	class:Phreeqc
count_rows	phreeqcpp/global_structures.h	/^	int count_rows;$/;"	m	struct:spread_sheet
count_s	phreeqcpp/Phreeqc.h	/^	int count_s;$/;"	m	class:Phreeqc
count_s_s	phreeqcpp/global_structures.h	/^	int count_s_s;$/;"	m	struct:punch
count_s_x	phreeqcpp/Phreeqc.h	/^	int count_s_x;$/;"	m	class:Phreeqc
count_save_values	phreeqcpp/Phreeqc.h	/^	int count_save_values;$/;"	m	class:Phreeqc
count_shifts	phreeqcpp/Phreeqc.h	/^	int count_shifts;$/;"	m	class:Phreeqc
count_si	phreeqcpp/global_structures.h	/^	int count_si;$/;"	m	struct:punch
count_sit_param	phreeqcpp/Phreeqc.h	/^	int count_sit_param, max_sit_param;$/;"	m	class:Phreeqc
count_solns	phreeqcpp/global_structures.h	/^	int count_solns;$/;"	m	struct:inverse
count_spec	phreeqcpp/global_structures.h	/^	int count_spec;				\/* number of aqueous + exchange species *\/$/;"	m	struct:sol_D
count_species_list	phreeqcpp/Phreeqc.h	/^	int count_species_list;$/;"	m	class:Phreeqc
count_ss	phreeqcpp/Phreeqc.h	/^	int count_pp, count_pg, count_ss;$/;"	m	class:Phreeqc
count_ss_assemblage	phreeqcpp/global_structures.h	/^	int count_ss_assemblage;$/;"	m	struct:model
count_stag	phreeqcpp/global_structures.h	/^	int count_stag;$/;"	m	struct:stag_data
count_strings	phreeqcpp/Phreeqc.h	/^	int count_strings;$/;"	m	class:Phreeqc
count_subscripts	phreeqcpp/global_structures.h	/^	int count_subscripts;$/;"	m	struct:save_values
count_sum_delta	phreeqcpp/Phreeqc.h	/^	int count_sum_delta;	\/* number of elements in sum_delta *\/$/;"	m	class:Phreeqc
count_sum_jacob0	phreeqcpp/Phreeqc.h	/^	int count_sum_jacob0;	\/* number of elements in sum_jacob0 *\/$/;"	m	class:Phreeqc
count_sum_jacob1	phreeqcpp/Phreeqc.h	/^	int count_sum_jacob1;	\/* number of elements in sum_jacob1 *\/$/;"	m	class:Phreeqc
count_sum_jacob2	phreeqcpp/Phreeqc.h	/^	int count_sum_jacob2;	\/* number of elements in sum_jacob2 *\/$/;"	m	class:Phreeqc
count_sum_mb1	phreeqcpp/Phreeqc.h	/^	int count_sum_mb1;		\/* number of elements in sum_mb1 *\/$/;"	m	class:Phreeqc
count_sum_mb2	phreeqcpp/Phreeqc.h	/^	int count_sum_mb2;		\/* number of elements in sum_mb2 *\/$/;"	m	class:Phreeqc
count_surface_charge	phreeqcpp/global_structures.h	/^	int count_surface_charge;$/;"	m	struct:model
count_surface_comp	phreeqcpp/global_structures.h	/^	int count_surface_comp;$/;"	m	struct:model
count_sys	phreeqcpp/Phreeqc.h	/^	int count_sys, max_sys;$/;"	m	class:Phreeqc
count_tally_table_columns	phreeqcpp/Phreeqc.h	/^	int count_tally_table_columns;$/;"	m	class:Phreeqc
count_tally_table_rows	phreeqcpp/Phreeqc.h	/^	int count_tally_table_rows;$/;"	m	class:Phreeqc
count_theta_param	phreeqcpp/Phreeqc.h	/^	int count_theta_param, max_theta_param;$/;"	m	class:Phreeqc
count_total_steps	phreeqcpp/Phreeqc.h	/^	int count_total_steps;$/;"	m	class:Phreeqc
count_totals	phreeqcpp/global_structures.h	/^	int count_totals;$/;"	m	struct:punch
count_trxn	phreeqcpp/Phreeqc.h	/^	int count_trxn;		\/* number of reactants in trxn = position of next *\/$/;"	m	class:Phreeqc
count_uncertainties	phreeqcpp/global_structures.h	/^	int count_uncertainties;$/;"	m	struct:inv_elts
count_uncertainties	phreeqcpp/global_structures.h	/^	int count_uncertainties;$/;"	m	struct:inv_isotope
count_uncertainties	phreeqcpp/global_structures.h	/^	int count_uncertainties;$/;"	m	struct:inverse
count_unknowns	phreeqcpp/Phreeqc.h	/^	int count_unknowns;$/;"	m	class:Phreeqc
count_warnings	phreeqcpp/Phreeqc.h	/^	int count_warnings;$/;"	m	class:Phreeqc
crate	phreeqcpp/cvode.cpp	/^#define crate /;"	d	file:
create_file_name	IPhreeqc.cpp	/^std::string IPhreeqc::create_file_name(const char *prefix, const char *suffix)$/;"	f	class:IPhreeqc
csv_file_names	phreeqcpp/ChartObject.h	/^	std::vector<std::string> csv_file_names;$/;"	m	class:ChartObject
cu	phreeqcpp/Phreeqc.h	/^	LDBLE *normal, *ineq_array, *res, *cu, *zero, *delta1;$/;"	m	class:Phreeqc
cu_max	phreeqcpp/Phreeqc.h	/^	int normal_max, ineq_array_max, res_max, cu_max, zero_max,$/;"	m	class:Phreeqc
curline	phreeqcpp/PBasic.h	/^	long curline;$/;"	m	class:PBasic
current_bits	phreeqcpp/Phreeqc.h	/^	unsigned long soln_bits, phase_bits, current_bits, temp_bits;$/;"	m	class:Phreeqc
current_chart	phreeqcpp/ChartHandler.h	/^	ChartObject * current_chart;$/;"	m	class:ChartHandler
current_chart_n_user	phreeqcpp/ChartHandler.h	/^	int current_chart_n_user;$/;"	m	class:ChartHandler
current_mu	phreeqcpp/Phreeqc.h	/^	LDBLE current_mu;$/;"	m	class:Phreeqc
current_pa	phreeqcpp/Phreeqc.h	/^	LDBLE current_pa;$/;"	m	class:Phreeqc
current_selected_output	phreeqcpp/Phreeqc.h	/^	SelectedOutput * current_selected_output;$/;"	m	class:Phreeqc
current_tc	phreeqcpp/Phreeqc.h	/^	LDBLE current_tc;$/;"	m	class:Phreeqc
current_user_punch	phreeqcpp/Phreeqc.h	/^	UserPunch * current_user_punch;$/;"	m	class:Phreeqc
curve_added	phreeqcpp/ChartObject.h	/^	bool curve_added;$/;"	m	class:ChartObject
cv_L	phreeqcpp/cvode.h	/^		int cv_L;				\/* L = q + 1                               *\/$/;"	m	struct:CVodeMemRec
cv_N	phreeqcpp/cvode.h	/^		integertype cv_N;		\/* ODE system size             *\/$/;"	m	struct:CVodeMemRec
cv_abstol	phreeqcpp/cvode.h	/^		void *cv_abstol;		\/* ptr to absolute tolerance   *\/$/;"	m	struct:CVodeMemRec
cv_acnrm	phreeqcpp/cvode.h	/^		realtype cv_acnrm;		\/* | acor | wrms                        *\/$/;"	m	struct:CVodeMemRec
cv_acor	phreeqcpp/cvode.h	/^		N_Vector cv_acor;		\/* In the context of the solution of the        *\/$/;"	m	struct:CVodeMemRec
cv_crate	phreeqcpp/cvode.h	/^		realtype cv_crate;		\/* estimated corrector convergence rate *\/$/;"	m	struct:CVodeMemRec
cv_errfp	phreeqcpp/cvode.h	/^		FILE *cv_errfp;			\/* CVODE error messages are sent to errfp *\/$/;"	m	struct:CVodeMemRec
cv_eta	phreeqcpp/cvode.h	/^		realtype cv_eta;		\/* eta = hprime \/ h                      *\/$/;"	m	struct:CVodeMemRec
cv_etamax	phreeqcpp/cvode.h	/^		realtype cv_etamax;		\/* eta <= etamax     *\/$/;"	m	struct:CVodeMemRec
cv_etaq	phreeqcpp/cvode.h	/^		realtype cv_etaq;		\/* ratio of new to old h for order q          *\/$/;"	m	struct:CVodeMemRec
cv_etaqm1	phreeqcpp/cvode.h	/^		realtype cv_etaqm1;		\/* ratio of new to old h for order q-1        *\/$/;"	m	struct:CVodeMemRec
cv_etaqp1	phreeqcpp/cvode.h	/^		realtype cv_etaqp1;		\/* ratio of new to old h for order q+1        *\/$/;"	m	struct:CVodeMemRec
cv_ewt	phreeqcpp/cvode.h	/^		N_Vector cv_ewt;		\/* error weight vector                          *\/$/;"	m	struct:CVodeMemRec
cv_f	phreeqcpp/cvode.h	/^		RhsFn cv_f;				\/* y' = f(t,y(t))              *\/$/;"	m	struct:CVodeMemRec
cv_f_data	phreeqcpp/cvode.h	/^		void *cv_f_data;		\/* user pointer passed to f    *\/$/;"	m	struct:CVodeMemRec
cv_ftemp	phreeqcpp/cvode.h	/^		N_Vector cv_ftemp;		\/* temporary storage vector                     *\/$/;"	m	struct:CVodeMemRec
cv_gamma	phreeqcpp/cvode.h	/^		realtype cv_gamma;		\/* gamma = h * rl1              *\/$/;"	m	struct:CVodeMemRec
cv_gammap	phreeqcpp/cvode.h	/^		realtype cv_gammap;		\/* gamma at the last setup call *\/$/;"	m	struct:CVodeMemRec
cv_gamrat	phreeqcpp/cvode.h	/^		realtype cv_gamrat;		\/* gamma \/ gammap               *\/$/;"	m	struct:CVodeMemRec
cv_h	phreeqcpp/cvode.h	/^		realtype cv_h;			\/* current step size                     *\/$/;"	m	struct:CVodeMemRec
cv_hmax_inv	phreeqcpp/cvode.h	/^		realtype cv_hmax_inv;	\/* |h| <= 1\/hmax_inv *\/$/;"	m	struct:CVodeMemRec
cv_hmin	phreeqcpp/cvode.h	/^		realtype cv_hmin;		\/* |h| >= hmin       *\/$/;"	m	struct:CVodeMemRec
cv_hprime	phreeqcpp/cvode.h	/^		realtype cv_hprime;		\/* step size to be used on the next step *\/$/;"	m	struct:CVodeMemRec
cv_hscale	phreeqcpp/cvode.h	/^		realtype cv_hscale;		\/* value of h used in zn                 *\/$/;"	m	struct:CVodeMemRec
cv_hu	phreeqcpp/cvode.h	/^		realtype cv_hu;			\/* last successful h value used   *\/$/;"	m	struct:CVodeMemRec
cv_iopt	phreeqcpp/cvode.h	/^		long int *cv_iopt;		\/* long int optional input, output *\/$/;"	m	struct:CVodeMemRec
cv_iter	phreeqcpp/cvode.h	/^		int cv_iter;			\/* iter = FUNCTIONAL or NEWTON *\/$/;"	m	struct:CVodeMemRec
cv_itol	phreeqcpp/cvode.h	/^		int cv_itol;			\/* itol = SS or SV             *\/$/;"	m	struct:CVodeMemRec
cv_jcur	phreeqcpp/cvode.h	/^		booleantype cv_jcur;	\/* Is the Jacobian info used by   *\/$/;"	m	struct:CVodeMemRec
cv_l	phreeqcpp/cvode.h	/^		realtype cv_l[L_MAX];	\/* coefficients of l(x) (degree q poly)      *\/$/;"	m	struct:CVodeMemRec
cv_lfree	phreeqcpp/cvode.h	/^		void (*cv_lfree) (struct CVodeMemRec * cv_mem);$/;"	m	struct:CVodeMemRec
cv_linit	phreeqcpp/cvode.h	/^		int (*cv_linit) (struct CVodeMemRec * cv_mem);$/;"	m	struct:CVodeMemRec
cv_liw	phreeqcpp/cvode.h	/^		long int cv_liw;		\/* no. of integertype words in CVODE work vectors *\/$/;"	m	struct:CVodeMemRec
cv_lmem	phreeqcpp/cvode.h	/^		void *cv_lmem;$/;"	m	struct:CVodeMemRec
cv_lmm	phreeqcpp/cvode.h	/^		int cv_lmm;				\/* lmm = ADAMS or BDF          *\/$/;"	m	struct:CVodeMemRec
cv_lrw	phreeqcpp/cvode.h	/^		long int cv_lrw;		\/* number of realtype words in CVODE work vectors *\/$/;"	m	struct:CVodeMemRec
cv_lsetup	phreeqcpp/cvode.h	/^		int (*cv_lsetup) (struct CVodeMemRec * cv_mem, int convfail,$/;"	m	struct:CVodeMemRec
cv_lsolve	phreeqcpp/cvode.h	/^		int (*cv_lsolve) (struct CVodeMemRec * cv_mem, N_Vector b,$/;"	m	struct:CVodeMemRec
cv_machenv	phreeqcpp/cvode.h	/^		M_Env cv_machenv;$/;"	m	struct:CVodeMemRec
cv_maxcor	phreeqcpp/cvode.h	/^		int cv_maxcor;			\/* maximum number of corrector iterations for the     *\/$/;"	m	struct:CVodeMemRec
cv_mnewt	phreeqcpp/cvode.h	/^		int cv_mnewt;			\/* Newton iteration counter             *\/$/;"	m	struct:CVodeMemRec
cv_mxhnil	phreeqcpp/cvode.h	/^		int cv_mxhnil;			\/* maximum number of warning messages issued to the   *\/$/;"	m	struct:CVodeMemRec
cv_mxstep	phreeqcpp/cvode.h	/^		int cv_mxstep;			\/* maximum number of internal steps for one user call *\/$/;"	m	struct:CVodeMemRec
cv_ncfn	phreeqcpp/cvode.h	/^		long int cv_ncfn;		\/* number of corrector convergence failures   *\/$/;"	m	struct:CVodeMemRec
cv_netf	phreeqcpp/cvode.h	/^		long int cv_netf;		\/* number of error test failures              *\/$/;"	m	struct:CVodeMemRec
cv_nfe	phreeqcpp/cvode.h	/^		long int cv_nfe;		\/* number of f calls                          *\/$/;"	m	struct:CVodeMemRec
cv_nhnil	phreeqcpp/cvode.h	/^		int cv_nhnil;			\/* number of messages issued to the user that *\/$/;"	m	struct:CVodeMemRec
cv_nni	phreeqcpp/cvode.h	/^		long int cv_nni;		\/* number of Newton iterations performed      *\/$/;"	m	struct:CVodeMemRec
cv_nscon	phreeqcpp/cvode.h	/^		long int cv_nscon;		\/* counter for STALD method                   *\/$/;"	m	struct:CVodeMemRec
cv_nsetups	phreeqcpp/cvode.h	/^		long int cv_nsetups;	\/* number of setup calls                      *\/$/;"	m	struct:CVodeMemRec
cv_nst	phreeqcpp/cvode.h	/^		long int cv_nst;		\/* number of internal steps taken             *\/$/;"	m	struct:CVodeMemRec
cv_nstlp	phreeqcpp/cvode.h	/^		long int cv_nstlp;		\/* step number of last setup call *\/$/;"	m	struct:CVodeMemRec
cv_optIn	phreeqcpp/cvode.h	/^		booleantype cv_optIn;	\/* boolean input optIn             *\/$/;"	m	struct:CVodeMemRec
cv_q	phreeqcpp/cvode.h	/^		int cv_q;				\/* current order                           *\/$/;"	m	struct:CVodeMemRec
cv_qmax	phreeqcpp/cvode.h	/^		int cv_qmax;			\/* q <= qmax                                          *\/$/;"	m	struct:CVodeMemRec
cv_qprime	phreeqcpp/cvode.h	/^		int cv_qprime;			\/* order to be used on the next step       *\/$/;"	m	struct:CVodeMemRec
cv_qu	phreeqcpp/cvode.h	/^		int cv_qu;				\/* last successful q value used   *\/$/;"	m	struct:CVodeMemRec
cv_qwait	phreeqcpp/cvode.h	/^		int cv_qwait;			\/* number of internal steps to wait before *\/$/;"	m	struct:CVodeMemRec
cv_reltol	phreeqcpp/cvode.h	/^		realtype *cv_reltol;	\/* ptr to relative tolerance   *\/$/;"	m	struct:CVodeMemRec
cv_rl1	phreeqcpp/cvode.h	/^		realtype cv_rl1;		\/* 1 \/ l[1]                     *\/$/;"	m	struct:CVodeMemRec
cv_ropt	phreeqcpp/cvode.h	/^		realtype *cv_ropt;		\/* real optional input, output     *\/$/;"	m	struct:CVodeMemRec
cv_saved_tq5	phreeqcpp/cvode.h	/^		realtype cv_saved_tq5;	\/* saved value of tq[5]           *\/$/;"	m	struct:CVodeMemRec
cv_setupNonNull	phreeqcpp/cvode.h	/^		booleantype cv_setupNonNull;	\/* Does setup do something? *\/$/;"	m	struct:CVodeMemRec
cv_sldeton	phreeqcpp/cvode.h	/^		booleantype cv_sldeton;	\/* Is Stability Limit Detection on  *\/$/;"	m	struct:CVodeMemRec
cv_ssdat	phreeqcpp/cvode.h	/^		realtype cv_ssdat[6][4];	\/* scaled data array for STALD                *\/$/;"	m	struct:CVodeMemRec
cv_tau	phreeqcpp/cvode.h	/^		realtype cv_tau[L_MAX + 1];	\/* array of previous q+1 successful step     *\/$/;"	m	struct:CVodeMemRec
cv_tempv	phreeqcpp/cvode.h	/^		N_Vector cv_tempv;		\/* temporary storage vector                     *\/$/;"	m	struct:CVodeMemRec
cv_tn	phreeqcpp/cvode.h	/^		realtype cv_tn;			\/* current internal value of t           *\/$/;"	m	struct:CVodeMemRec
cv_tolsf	phreeqcpp/cvode.h	/^		realtype cv_tolsf;		\/* tolerance scale factor         *\/$/;"	m	struct:CVodeMemRec
cv_tq	phreeqcpp/cvode.h	/^		realtype cv_tq[NUM_TESTS + 1];	\/* array of test quantities indexed from     *\/$/;"	m	struct:CVodeMemRec
cv_uround	phreeqcpp/cvode.h	/^		realtype cv_uround;		\/* machine unit roundoff *\/$/;"	m	struct:CVodeMemRec
cv_y	phreeqcpp/cvode.h	/^		N_Vector cv_y;			\/* y is used as temporary storage by the solver *\/$/;"	m	struct:CVodeMemRec
cv_zn	phreeqcpp/cvode.h	/^		N_Vector cv_zn[L_MAX];	\/* Nordsieck array, of size N x (q+1).         *\/$/;"	m	struct:CVodeMemRec
cvode_error	phreeqcpp/Phreeqc.h	/^	int cvode_error;$/;"	m	class:Phreeqc
cvode_init	phreeqcpp/kinetics.cpp	/^cvode_init(void)$/;"	f	class:Phreeqc
cvode_kinetics_ptr	phreeqcpp/Phreeqc.h	/^	void *cvode_kinetics_ptr;$/;"	m	class:Phreeqc
cvode_last_good_time	phreeqcpp/Phreeqc.h	/^	realtype cvode_last_good_time;$/;"	m	class:Phreeqc
cvode_last_good_y	phreeqcpp/Phreeqc.h	/^	N_Vector cvode_last_good_y;$/;"	m	class:Phreeqc
cvode_n_reactions	phreeqcpp/Phreeqc.h	/^	int cvode_n_reactions;$/;"	m	class:Phreeqc
cvode_n_user	phreeqcpp/Phreeqc.h	/^	int cvode_n_user;$/;"	m	class:Phreeqc
cvode_order	phreeqcpp/cxxKinetics.h	/^	int cvode_order;$/;"	m	class:cxxKinetics
cvode_pp_assemblage_save	phreeqcpp/Phreeqc.h	/^	cxxPPassemblage *cvode_pp_assemblage_save;$/;"	m	class:Phreeqc
cvode_prev_good_time	phreeqcpp/Phreeqc.h	/^	realtype cvode_prev_good_time;$/;"	m	class:Phreeqc
cvode_prev_good_y	phreeqcpp/Phreeqc.h	/^	N_Vector cvode_prev_good_y;$/;"	m	class:Phreeqc
cvode_rate_sim_time	phreeqcpp/Phreeqc.h	/^	realtype cvode_rate_sim_time;$/;"	m	class:Phreeqc
cvode_rate_sim_time_start	phreeqcpp/Phreeqc.h	/^	realtype cvode_rate_sim_time_start;$/;"	m	class:Phreeqc
cvode_ss_assemblage_save	phreeqcpp/Phreeqc.h	/^	cxxSSassemblage *cvode_ss_assemblage_save;$/;"	m	class:Phreeqc
cvode_step_fraction	phreeqcpp/Phreeqc.h	/^	realtype cvode_step_fraction;$/;"	m	class:Phreeqc
cvode_steps	phreeqcpp/cxxKinetics.h	/^	int cvode_steps;$/;"	m	class:cxxKinetics
cvode_test	phreeqcpp/Phreeqc.h	/^	int cvode_test;$/;"	m	class:Phreeqc
cvode_update_reactants	phreeqcpp/kinetics.cpp	/^cvode_update_reactants(int i, int nsaver, bool save_it)$/;"	f	class:Phreeqc
cxxChemRxn	phreeqcpp/global_structures.h	/^	cxxChemRxn(struct reaction *rxn)$/;"	f	class:cxxChemRxn
cxxChemRxn	phreeqcpp/global_structures.h	/^	cxxChemRxn(void)$/;"	f	class:cxxChemRxn
cxxChemRxn	phreeqcpp/global_structures.h	/^class cxxChemRxn$/;"	c
cxxChemRxn2rxn	phreeqcpp/structures.cpp	/^cxxChemRxn2rxn(cxxChemRxn &cr)$/;"	f	class:Phreeqc
cxxExchComp	phreeqcpp/ExchComp.cxx	/^cxxExchComp::cxxExchComp(PHRQ_io *io)$/;"	f	class:cxxExchComp
cxxExchComp	phreeqcpp/ExchComp.cxx	/^cxxExchComp::cxxExchComp(std::vector < cxxExchComp > &ec_vector,$/;"	f	class:cxxExchComp
cxxExchComp	phreeqcpp/ExchComp.h	/^class cxxExchComp: public PHRQ_base$/;"	c
cxxExchange	phreeqcpp/Exchange.cxx	/^cxxExchange::cxxExchange(PHRQ_io *io)$/;"	f	class:cxxExchange
cxxExchange	phreeqcpp/Exchange.cxx	/^cxxExchange::cxxExchange(const std::map < int, cxxExchange > &entities,$/;"	f	class:cxxExchange
cxxExchange	phreeqcpp/Exchange.h	/^class cxxExchange:public cxxNumKeyword$/;"	c
cxxGasComp	phreeqcpp/GasComp.cxx	/^cxxGasComp::cxxGasComp(PHRQ_io *io)$/;"	f	class:cxxGasComp
cxxGasComp	phreeqcpp/GasComp.h	/^class cxxGasComp: public PHRQ_base$/;"	c
cxxGasPhase	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::cxxGasPhase(PHRQ_io * io)$/;"	f	class:cxxGasPhase
cxxGasPhase	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::cxxGasPhase(const std::map < int, cxxGasPhase > &entities,$/;"	f	class:cxxGasPhase
cxxGasPhase	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::cxxGasPhase(std::map < int, cxxGasPhase > &entity_map,$/;"	f	class:cxxGasPhase
cxxGasPhase	phreeqcpp/GasPhase.h	/^class cxxGasPhase:public cxxNumKeyword$/;"	c
cxxISolution	phreeqcpp/ISolution.cxx	/^cxxISolution::cxxISolution(PHRQ_io *io)$/;"	f	class:cxxISolution
cxxISolution	phreeqcpp/ISolution.h	/^class cxxISolution: public PHRQ_base$/;"	c
cxxISolutionComp	phreeqcpp/ISolutionComp.cxx	/^cxxISolutionComp::cxxISolutionComp(PHRQ_io *io):$/;"	f	class:cxxISolutionComp
cxxISolutionComp	phreeqcpp/ISolutionComp.h	/^class cxxISolutionComp: public PHRQ_base$/;"	c
cxxISolutionComp2conc	phreeqcpp/ISolutionComp.cxx	/^cxxISolutionComp::cxxISolutionComp2conc(Phreeqc * phreeqc_ptr, const std::map < std::string,$/;"	f	class:cxxISolutionComp
cxxKinetics	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::cxxKinetics(PHRQ_io *io)$/;"	f	class:cxxKinetics
cxxKinetics	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::cxxKinetics(const std::map < int, cxxKinetics > &entities,$/;"	f	class:cxxKinetics
cxxKinetics	phreeqcpp/cxxKinetics.h	/^class cxxKinetics:public cxxNumKeyword$/;"	c
cxxKineticsComp	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::cxxKineticsComp(PHRQ_io *io)$/;"	f	class:cxxKineticsComp
cxxKineticsComp	phreeqcpp/KineticsComp.h	/^class cxxKineticsComp: public PHRQ_base$/;"	c
cxxMix	phreeqcpp/cxxMix.cxx	/^cxxMix::cxxMix(PHRQ_io *io)$/;"	f	class:cxxMix
cxxMix	phreeqcpp/cxxMix.h	/^class cxxMix:public cxxNumKeyword$/;"	c
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble()$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble(const cxxNameDouble & old, LDBLE factor)$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble(std::map < std::string, cxxISolutionComp > &comps)$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble(struct elt_list *elt_list_ptr)$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble(struct elt_list *elt_list_ptr, int count)$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble(struct master_activity *ma, int count,$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::cxxNameDouble(struct name_coef *nc, int count)$/;"	f	class:cxxNameDouble
cxxNameDouble	phreeqcpp/NameDouble.h	/^class IPQ_DLL_EXPORT cxxNameDouble:public$/;"	c
cxxNumKeyword	phreeqcpp/NumKeyword.cxx	/^cxxNumKeyword::cxxNumKeyword(PHRQ_io *io)$/;"	f	class:cxxNumKeyword
cxxNumKeyword	phreeqcpp/NumKeyword.h	/^class cxxNumKeyword: public PHRQ_base$/;"	c
cxxPPassemblage	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::cxxPPassemblage(PHRQ_io * io)$/;"	f	class:cxxPPassemblage
cxxPPassemblage	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::cxxPPassemblage(const std::map < int,$/;"	f	class:cxxPPassemblage
cxxPPassemblage	phreeqcpp/PPassemblage.h	/^class cxxPPassemblage:public cxxNumKeyword$/;"	c
cxxPPassemblageComp	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::cxxPPassemblageComp(PHRQ_io *io)$/;"	f	class:cxxPPassemblageComp
cxxPPassemblageComp	phreeqcpp/PPassemblageComp.h	/^class cxxPPassemblageComp: public PHRQ_base$/;"	c
cxxPressure	phreeqcpp/Pressure.cxx	/^cxxPressure::cxxPressure(PHRQ_io *io)$/;"	f	class:cxxPressure
cxxPressure	phreeqcpp/Pressure.h	/^class cxxPressure:public cxxNumKeyword$/;"	c
cxxReaction	phreeqcpp/Reaction.cxx	/^cxxReaction::cxxReaction(PHRQ_io *io)$/;"	f	class:cxxReaction
cxxReaction	phreeqcpp/Reaction.h	/^class cxxReaction:public cxxNumKeyword$/;"	c
cxxSS	phreeqcpp/SS.cxx	/^cxxSS::cxxSS(PHRQ_io *io)$/;"	f	class:cxxSS
cxxSS	phreeqcpp/SS.h	/^class cxxSS: public PHRQ_base$/;"	c
cxxSSassemblage	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::cxxSSassemblage(PHRQ_io * io)$/;"	f	class:cxxSSassemblage
cxxSSassemblage	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::cxxSSassemblage(const std::map < int,$/;"	f	class:cxxSSassemblage
cxxSSassemblage	phreeqcpp/SSassemblage.h	/^class cxxSSassemblage:public cxxNumKeyword$/;"	c
cxxSScomp	phreeqcpp/SScomp.cxx	/^cxxSScomp::cxxSScomp(PHRQ_io *io)$/;"	f	class:cxxSScomp
cxxSScomp	phreeqcpp/SScomp.cxx	/^cxxSScomp::cxxSScomp(struct pure_phase * pure_phase_ptr, PHRQ_io *io)$/;"	f	class:cxxSScomp
cxxSScomp	phreeqcpp/SScomp.h	/^class cxxSScomp: public PHRQ_base$/;"	c
cxxSolution	phreeqcpp/Solution.cxx	/^cxxSolution::cxxSolution(PHRQ_io * io)$/;"	f	class:cxxSolution
cxxSolution	phreeqcpp/Solution.cxx	/^cxxSolution::cxxSolution(const cxxSolution &old_sol)$/;"	f	class:cxxSolution
cxxSolution	phreeqcpp/Solution.cxx	/^cxxSolution::cxxSolution(std::map < int, cxxSolution > &solutions,$/;"	f	class:cxxSolution
cxxSolution	phreeqcpp/Solution.h	/^class cxxSolution:public cxxNumKeyword$/;"	c
cxxSolutionIsotope	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::cxxSolutionIsotope(PHRQ_io *io)$/;"	f	class:cxxSolutionIsotope
cxxSolutionIsotope	phreeqcpp/SolutionIsotope.h	/^class cxxSolutionIsotope: public PHRQ_base$/;"	c
cxxSpeciesDL	phreeqcpp/SurfaceCharge.h	/^	cxxSpeciesDL()$/;"	f	class:cxxSpeciesDL
cxxSpeciesDL	phreeqcpp/SurfaceCharge.h	/^class cxxSpeciesDL$/;"	c
cxxStorageBin	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::cxxStorageBin(PHRQ_io *io)$/;"	f	class:cxxStorageBin
cxxStorageBin	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::cxxStorageBin(cxxUse &use_ref, PHRQ_io *io)$/;"	f	class:cxxStorageBin
cxxStorageBin	phreeqcpp/StorageBin.h	/^class cxxStorageBin: public PHRQ_base$/;"	c
cxxStorageBin2phreeqc	phreeqcpp/structures.cpp	/^cxxStorageBin2phreeqc(cxxStorageBin & sb)$/;"	f	class:Phreeqc
cxxStorageBin2phreeqc	phreeqcpp/structures.cpp	/^cxxStorageBin2phreeqc(cxxStorageBin & sb, int n)$/;"	f	class:Phreeqc
cxxStorageBin2system	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::cxxStorageBin2system(Phreeqc * phreeqc_ptr, int n)$/;"	f	class:cxxStorageBin
cxxSurfDL	phreeqcpp/SurfaceCharge.h	/^	cxxSurfDL()$/;"	f	class:cxxSurfDL
cxxSurfDL	phreeqcpp/SurfaceCharge.h	/^class cxxSurfDL$/;"	c
cxxSurface	phreeqcpp/Surface.cxx	/^cxxSurface::cxxSurface(PHRQ_io *io)$/;"	f	class:cxxSurface
cxxSurface	phreeqcpp/Surface.cxx	/^cxxSurface::cxxSurface(std::map < int, cxxSurface > &entities,$/;"	f	class:cxxSurface
cxxSurface	phreeqcpp/Surface.h	/^class cxxSurface:public cxxNumKeyword$/;"	c
cxxSurfaceCharge	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::cxxSurfaceCharge(PHRQ_io *io)$/;"	f	class:cxxSurfaceCharge
cxxSurfaceCharge	phreeqcpp/SurfaceCharge.h	/^class cxxSurfaceCharge: public PHRQ_base$/;"	c
cxxSurfaceComp	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::cxxSurfaceComp(PHRQ_io *io)$/;"	f	class:cxxSurfaceComp
cxxSurfaceComp	phreeqcpp/SurfaceComp.h	/^class cxxSurfaceComp: public PHRQ_base$/;"	c
cxxSystem	phreeqcpp/System.cxx	/^cxxSystem::cxxSystem(PHRQ_io *io)$/;"	f	class:cxxSystem
cxxSystem	phreeqcpp/System.h	/^class cxxSystem: public PHRQ_base $/;"	c
cxxTemperature	phreeqcpp/Temperature.cxx	/^cxxTemperature::cxxTemperature(PHRQ_io *io)$/;"	f	class:cxxTemperature
cxxTemperature	phreeqcpp/Temperature.h	/^class cxxTemperature:public cxxNumKeyword$/;"	c
cxxUse	phreeqcpp/Use.cpp	/^cxxUse::cxxUse()$/;"	f	class:cxxUse
cxxUse	phreeqcpp/Use.h	/^class cxxUse$/;"	c
dVal	Var.h	/^		double  dVal;      \/*!< valid when <code>(type == TT_DOUBLE)<\/code> *\/$/;"	m	union:__anon31::__anon32
d_J_data	phreeqcpp/cvdense.cpp	/^	void *d_J_data;				\/* J_data is passed to jac                *\/$/;"	m	struct:__anon2	file:
d_M	phreeqcpp/cvdense.cpp	/^	DenseMat d_M;				\/* M = I - gamma J, gamma = h \/ l1        *\/$/;"	m	struct:__anon2	file:
d_jac	phreeqcpp/cvdense.cpp	/^	CVDenseJacFn d_jac;			\/* jac = Jacobian routine to be called    *\/$/;"	m	struct:__anon2	file:
d_nje	phreeqcpp/cvdense.cpp	/^	long int d_nje;				\/* nje = no. of calls to jac              *\/$/;"	m	struct:__anon2	file:
d_nstlj	phreeqcpp/cvdense.cpp	/^	long int d_nstlj;			\/* nstlj = nst at last Jacobian eval.     *\/$/;"	m	struct:__anon2	file:
d_params	phreeqcpp/KineticsComp.h	/^	  std::vector< LDBLE > d_params;$/;"	m	class:cxxKineticsComp
d_pivots	phreeqcpp/cvdense.cpp	/^	integertype *d_pivots;		\/* pivots = pivot array for PM = LU       *\/$/;"	m	struct:__anon2	file:
d_savedJ	phreeqcpp/cvdense.cpp	/^	DenseMat d_savedJ;			\/* savedJ = old Jacobian                  *\/$/;"	m	struct:__anon2	file:
d_vector	phreeqcpp/global_structures.h	/^	LDBLE *d_vector;$/;"	m	struct:spread_row
dalk_dc	phreeqcpp/global_structures.h	/^	LDBLE *dalk_dc;$/;"	m	struct:inverse
dalk_dph	phreeqcpp/global_structures.h	/^	LDBLE *dalk_dph;$/;"	m	struct:inverse
dampen_ah2o	phreeqcpp/Phreeqc.h	/^	bool dampen_ah2o;$/;"	m	class:Phreeqc
data	phreeqcpp/dense.h	/^		realtype **data;$/;"	m	struct:_DenseMat
data	phreeqcpp/global_structures.h	/^	void *data;$/;"	m	struct:entry
data	phreeqcpp/nvector_serial.h	/^		realtype *data;$/;"	m	struct:_N_VectorSerialContent
database_file	IPhreeqc.hpp	/^	FILE *database_file;$/;"	m	class:IPhreeqc
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
dataline	phreeqcpp/PBasic.h	/^	linerec *stmtline, *dataline;$/;"	m	class:PBasic
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datatok	phreeqcpp/PBasic.h	/^	tokenrec *stmttok, *datatok, *buf;$/;"	m	class:PBasic
dbg_master	phreeqcpp/Phreeqc.h	/^	struct master **dbg_master;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::master
debug_diffuse_layer	phreeqcpp/Phreeqc.h	/^	int debug_diffuse_layer;$/;"	m	class:Phreeqc
debug_inverse	phreeqcpp/Phreeqc.h	/^	int debug_inverse;$/;"	m	class:Phreeqc
debug_model	phreeqcpp/Phreeqc.h	/^	int debug_model;$/;"	m	class:Phreeqc
debug_prep	phreeqcpp/Phreeqc.h	/^	int debug_prep;$/;"	m	class:Phreeqc
debug_set	phreeqcpp/Phreeqc.h	/^	int debug_set;$/;"	m	class:Phreeqc
debye_lengths	phreeqcpp/Surface.h	/^	LDBLE debye_lengths;$/;"	m	class:cxxSurface
default_Dw	phreeqcpp/Phreeqc.h	/^	LDBLE default_Dw;		\/* default species diffusion coefficient in water at 25oC, m2\/s *\/$/;"	m	class:Phreeqc
default_color	phreeqcpp/ChartObject.h	/^	int default_color;$/;"	m	class:ChartObject
default_color_csv	phreeqcpp/ChartObject.h	/^	int default_color_csv;$/;"	m	class:ChartObject
default_data_base	phreeqcpp/Phreeqc.h	/^	char *default_data_base;$/;"	m	class:Phreeqc
default_pe	phreeqcpp/ISolution.h	/^	const char * default_pe;$/;"	m	class:cxxISolution
default_pe_x	phreeqcpp/Phreeqc.h	/^	std::string default_pe_x;$/;"	m	class:Phreeqc
default_symbol	phreeqcpp/ChartObject.h	/^	int default_symbol;$/;"	m	class:ChartObject
default_symbol_csv	phreeqcpp/ChartObject.h	/^	int default_symbol_csv;$/;"	m	class:ChartObject
defaults	phreeqcpp/global_structures.h	/^	struct defaults defaults;$/;"	m	struct:spread_sheet	typeref:struct:spread_sheet::defaults
defaults	phreeqcpp/global_structures.h	/^struct defaults$/;"	s
defined	phreeqcpp/StorageBinList.h	/^	bool defined;$/;"	m	class:StorageBinListItem
delay_mass_water	phreeqcpp/Phreeqc.h	/^	int delay_mass_water;$/;"	m	class:Phreeqc
delete_entities	phreeqcpp/ReadClass.cxx	/^delete_entities(void)$/;"	f	class:Phreeqc
delete_info	phreeqcpp/Phreeqc.h	/^	StorageBinList delete_info;$/;"	m	class:Phreeqc
delete_istream_list	phreeqcpp/common/PHRQ_io.h	/^	std::list <bool> delete_istream_list;$/;"	m	class:PHRQ_io
delta	phreeqcpp/PPassemblageComp.h	/^	LDBLE delta;$/;"	m	class:cxxPPassemblageComp
delta	phreeqcpp/Phreeqc.h	/^	LDBLE *delta;$/;"	m	class:Phreeqc
delta	phreeqcpp/SScomp.h	/^	LDBLE delta;$/;"	m	class:cxxSScomp
delta	phreeqcpp/global_structures.h	/^	LDBLE delta;$/;"	m	struct:unknown
delta1	phreeqcpp/Phreeqc.h	/^	LDBLE *normal, *ineq_array, *res, *cu, *zero, *delta1;$/;"	m	class:Phreeqc
delta1_max	phreeqcpp/Phreeqc.h	/^		delta1_max, iu_max, is_max, back_eq_max;$/;"	m	class:Phreeqc
delta2	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
delta3	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
delta_h	phreeqcpp/global_structures.h	/^	delta_h,$/;"	e	enum:__anon16
delta_max	phreeqcpp/global_structures.h	/^	LDBLE delta_max;$/;"	m	struct:phase
delta_save	phreeqcpp/Phreeqc.h	/^		*delta_save;$/;"	m	class:Phreeqc
delta_v	phreeqcpp/global_structures.h	/^	LDBLE delta_v[9];			\/* delta_v[0] = [1] + [2]*T + [3]\/T + [4]*log10(T) + [5]\/T^2 + [6]*T^2 + [7]*P *\/$/;"	m	struct:phase
delta_v	phreeqcpp/global_structures.h	/^	delta_v,	\/* set in calc_delta_v: calculated molar volume-change of the reaction *\/$/;"	e	enum:__anon16
denaddI	phreeqcpp/smalldense.cpp	/^denaddI(realtype ** a, integertype n)$/;"	f
denalloc	phreeqcpp/smalldense.cpp	/^denalloc(integertype n)$/;"	f
denallocpiv	phreeqcpp/smalldense.cpp	/^denallocpiv(integertype n)$/;"	f
dencopy	phreeqcpp/smalldense.cpp	/^dencopy(realtype ** a, realtype ** b, integertype n)$/;"	f
denfree	phreeqcpp/smalldense.cpp	/^denfree(realtype ** a)$/;"	f
denfreepiv	phreeqcpp/smalldense.cpp	/^denfreepiv(integertype * p)$/;"	f
denprint	phreeqcpp/smalldense.cpp	/^denprint(realtype ** a, integertype n)$/;"	f
denscale	phreeqcpp/smalldense.cpp	/^denscale(realtype c, realtype ** a, integertype n)$/;"	f
density	phreeqcpp/Solution.h	/^	LDBLE density;$/;"	m	class:cxxSolution
density	phreeqcpp/global_structures.h	/^	LDBLE density;$/;"	m	struct:defaults
density_x	phreeqcpp/Phreeqc.h	/^	LDBLE density_x;$/;"	m	class:Phreeqc
denzero	phreeqcpp/smalldense.cpp	/^denzero(realtype ** a, integertype n)$/;"	f
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
description	phreeqcpp/ISolutionComp.h	/^	  std::string description;$/;"	m	class:cxxISolutionComp
description	phreeqcpp/NumKeyword.h	/^	std::string description;$/;"	m	class:cxxNumKeyword
description	phreeqcpp/global_structures.h	/^	char *description;$/;"	m	struct:inverse
description	phreeqcpp/global_structures.h	/^	const char *description;$/;"	m	struct:unknown
description_x	phreeqcpp/Phreeqc.h	/^	char *description_x;$/;"	m	class:Phreeqc
detach	phreeqcpp/ChartObject.h	/^	bool detach;$/;"	m	class:ChartObject
dg	phreeqcpp/SurfaceCharge.h	/^	LDBLE dg;$/;"	m	class:cxxSurfDL
dg	phreeqcpp/global_structures.h	/^	LDBLE dg;					\/* gamma term for jacobian *\/$/;"	m	struct:species
dg_g_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE dg_g_moles;			\/* g_moles*dgterm *\/$/;"	m	class:cxxSpeciesDL
dg_total_g	phreeqcpp/global_structures.h	/^	LDBLE dg_total_g;$/;"	m	struct:species
dgdP	phreeqcpp/Phreeqc.h	/^	LDBLE dgdP; \/\/ dg \/ dP, pressure derivative of g-function, for supcrt calc'n of molal volume$/;"	m	class:Phreeqc
dh2o_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE dh2o_moles;			\/* moles*g*Ws\/Waq *\/$/;"	m	class:cxxSpeciesDL
dha	phreeqcpp/global_structures.h	/^	LDBLE dha, dhb, a_f;		\/* WATEQ Debye Huckel a and b-dot; active_fraction coef for exchange species *\/$/;"	m	struct:species
dhb	phreeqcpp/global_structures.h	/^	LDBLE dha, dhb, a_f;		\/* WATEQ Debye Huckel a and b-dot; active_fraction coef for exchange species *\/$/;"	m	struct:species
diagonal_scale	phreeqcpp/Phreeqc.h	/^	int diagonal_scale;	\/* 0 not used, 1 used *\/$/;"	m	class:Phreeqc
dictionary	phreeqcpp/Serializer.h	/^	Dictionary dictionary;$/;"	m	class:Serializer
dictionary_map	phreeqcpp/Dictionary.h	/^	std::map<std::string, int> dictionary_map;$/;"	m	class:Dictionary
dictionary_oss	phreeqcpp/Dictionary.h	/^	std::ostringstream dictionary_oss;$/;"	m	class:Dictionary
diff_c	phreeqcpp/basicsubs.cpp	/^diff_c(const char *species_name)$/;"	f	class:Phreeqc
diff_layer_total	phreeqcpp/basicsubs.cpp	/^diff_layer_total(const char *total_name, const char *surface_name)$/;"	f	class:Phreeqc
diff_stag_surf	phreeqcpp/transport.cpp	/^diff_stag_surf(int mobile_cell)$/;"	f	class:Phreeqc
diff_tally_table	phreeqcpp/tally.cpp	/^diff_tally_table(void)$/;"	f	class:Phreeqc
diffc	phreeqcpp/Phreeqc.h	/^	LDBLE diffc;$/;"	m	class:Phreeqc
diffc_max	phreeqcpp/Phreeqc.h	/^	LDBLE diffc_max, diffc_tr, J_ij_sum;$/;"	m	class:Phreeqc
diffc_tr	phreeqcpp/Phreeqc.h	/^	LDBLE diffc_max, diffc_tr, J_ij_sum;$/;"	m	class:Phreeqc
diffuse_layer_totals	phreeqcpp/SurfaceCharge.h	/^	cxxNameDouble diffuse_layer_totals;$/;"	m	class:cxxSurfaceCharge
dims	phreeqcpp/PBasic.h	/^	long dims[maxdims];$/;"	m	struct:varrec
disp	phreeqcpp/global_structures.h	/^	LDBLE disp;$/;"	m	struct:cell_data
disp_surf	phreeqcpp/transport.cpp	/^disp_surf(LDBLE DDt)$/;"	f	class:Phreeqc
disposetokens	phreeqcpp/PBasic.cpp	/^disposetokens(tokenrec ** tok)$/;"	f	class:PBasic
dissolve_only	phreeqcpp/PPassemblageComp.h	/^	bool dissolve_only;$/;"	m	class:cxxPPassemblageComp
dissolve_only	phreeqcpp/global_structures.h	/^	int dissolve_only;$/;"	m	struct:unknown
dist	phreeqcpp/SelectedOutput.h	/^	bool dist;$/;"	m	class:SelectedOutput
dist	phreeqcpp/global_structures.h	/^	int dist;$/;"	m	struct:punch
dist_source_DATA	Makefile	/^dist_source_DATA = $(SRC)$/;"	m
dl_species_map	phreeqcpp/SurfaceCharge.h	/^	std::map<int, double> dl_species_map;$/;"	m	class:cxxSurfaceCharge
dl_type	phreeqcpp/Surface.h	/^	DIFFUSE_LAYER_TYPE dl_type;$/;"	m	class:cxxSurface
dl_type	phreeqcpp/global_structures.h	/^	cxxSurface::DIFFUSE_LAYER_TYPE dl_type;$/;"	m	struct:model
dl_type_x	phreeqcpp/Phreeqc.h	/^	cxxSurface::DIFFUSE_LAYER_TYPE dl_type_x;$/;"	m	class:Phreeqc
dm3_per_mol	phreeqcpp/global_structures.h	/^typedef enum { cm3_per_mol, dm3_per_mol, m3_per_mol } DELTA_V_UNIT;$/;"	e	enum:__anon15
dn	phreeqcpp/SS.h	/^	LDBLE dn;$/;"	m	class:cxxSS
dn	phreeqcpp/SScomp.h	/^	LDBLE dn, dnc, dnb;$/;"	m	class:cxxSScomp
dn	phreeqcpp/global_structures.h	/^	LDBLE dn, dnb, dnc;$/;"	m	struct:phase
dnb	phreeqcpp/SScomp.h	/^	LDBLE dn, dnc, dnb;$/;"	m	class:cxxSScomp
dnb	phreeqcpp/global_structures.h	/^	LDBLE dn, dnb, dnc;$/;"	m	struct:phase
dnc	phreeqcpp/SScomp.h	/^	LDBLE dn, dnc, dnb;$/;"	m	class:cxxSScomp
dnc	phreeqcpp/global_structures.h	/^	LDBLE dn, dnb, dnc;$/;"	m	struct:phase
do_initialize	phreeqcpp/mainsubs.cpp	/^do_initialize(void)$/;"	f	class:Phreeqc
do_mixes	phreeqcpp/mainsubs.cpp	/^Phreeqc::do_mixes(void)$/;"	f	class:Phreeqc
do_run	IPhreeqc.cpp	/^void IPhreeqc::do_run(const char* sz_routine, std::istream* pis, PFN_PRERUN_CALLBACK pfn_pre, PFN_POSTRUN_CALLBACK pfn_post, void *cookie)$/;"	f	class:IPhreeqc
do_status	phreeqcpp/mainsubs.cpp	/^do_status(void)$/;"	f	class:Phreeqc
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
done	phreeqcpp/ChartObject.h	/^	bool done;$/;"	m	class:ChartObject
done	phreeqcpp/global_structures.h	/^	int done;$/;"	m	struct:logk
doubles	phreeqcpp/Serializer.h	/^	std::vector<double> doubles;$/;"	m	class:Serializer
drelated_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE drelated_moles;		\/* for related phase *\/$/;"	m	class:cxxSpeciesDL
dummy	phreeqcpp/Phreeqc.h	/^	LDBLE dummy;$/;"	m	class:Phreeqc
dummy	phreeqcpp/global_structures.h	/^	int dummy;					\/* alignment *\/$/;"	m	struct:PHRQMemHeader
dump	phreeqcpp/ChartHandler.cpp	/^ChartHandler::dump(std::ostream & oss, unsigned int indent)$/;"	f	class:ChartHandler
dump	phreeqcpp/ChartObject.cpp	/^ChartObject::dump(std::ostream & oss, unsigned int indent)$/;"	f	class:ChartObject
dump	phreeqcpp/global_structures.h	/^	int dump;$/;"	m	struct:prints
dump	phreeqcpp/readtr.cpp	/^dump(void)$/;"	f	class:Phreeqc
dump_close	phreeqcpp/PHRQ_io_output.cpp	/^dump_close(void)$/;"	f	class:Phreeqc
dump_close	phreeqcpp/common/PHRQ_io.cpp	/^dump_close(void)$/;"	f	class:PHRQ_io
dump_cpp	phreeqcpp/readtr.cpp	/^dump_cpp(void)$/;"	f	class:Phreeqc
dump_entities	phreeqcpp/ReadClass.cxx	/^dump_entities(void)$/;"	f	class:Phreeqc
dump_file_name	phreeqcpp/Phreeqc.h	/^	char *dump_file_name;$/;"	m	class:Phreeqc
dump_file_name_cpp	phreeqcpp/Phreeqc.h	/^	std::string dump_file_name_cpp;$/;"	m	class:Phreeqc
dump_flush	phreeqcpp/PHRQ_io_output.cpp	/^dump_flush(void)$/;"	f	class:Phreeqc
dump_flush	phreeqcpp/common/PHRQ_io.cpp	/^dump_flush(void)$/;"	f	class:PHRQ_io
dump_in	phreeqcpp/Phreeqc.h	/^	int dump_in;$/;"	m	class:Phreeqc
dump_info	phreeqcpp/Phreeqc.h	/^	dumper dump_info;$/;"	m	class:Phreeqc
dump_modulus	phreeqcpp/Phreeqc.h	/^	int dump_modulus;$/;"	m	class:Phreeqc
dump_msg	phreeqcpp/PHRQ_io_output.cpp	/^dump_msg(const char * str)$/;"	f	class:Phreeqc
dump_msg	phreeqcpp/common/PHRQ_io.cpp	/^dump_msg(const char * str)$/;"	f	class:PHRQ_io
dump_netpath	phreeqcpp/inverse.cpp	/^dump_netpath(struct inverse *inverse_ptr)$/;"	f	class:Phreeqc
dump_netpath_pat	phreeqcpp/inverse.cpp	/^dump_netpath_pat(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
dump_on	phreeqcpp/common/PHRQ_io.h	/^	bool dump_on;$/;"	m	class:PHRQ_io
dump_open	phreeqcpp/PHRQ_io_output.cpp	/^dump_open(const char *file_name)$/;"	f	class:Phreeqc
dump_open	phreeqcpp/common/PHRQ_io.cpp	/^dump_open(const char *file_name, std::ios_base::openmode mode)$/;"	f	class:PHRQ_io
dump_ostream	phreeqcpp/ReadClass.cxx	/^dump_ostream(std::ostream& os)$/;"	f	class:Phreeqc
dump_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *dump_ostream;$/;"	m	class:PHRQ_io
dump_raw	phreeqcpp/ExchComp.cxx	/^cxxExchComp::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxExchComp
dump_raw	phreeqcpp/Exchange.cxx	/^cxxExchange::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxExchange
dump_raw	phreeqcpp/GasComp.cxx	/^cxxGasComp::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxGasComp
dump_raw	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxGasPhase
dump_raw	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxKineticsComp
dump_raw	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxNameDouble
dump_raw	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxPPassemblage
dump_raw	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxPPassemblageComp
dump_raw	phreeqcpp/Pressure.cxx	/^cxxPressure::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxPressure
dump_raw	phreeqcpp/Reaction.cxx	/^cxxReaction::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxReaction
dump_raw	phreeqcpp/SS.cxx	/^cxxSS::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSS
dump_raw	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxSSassemblage
dump_raw	phreeqcpp/SScomp.cxx	/^cxxSScomp::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSScomp
dump_raw	phreeqcpp/Solution.cxx	/^cxxSolution::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxSolution
dump_raw	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSolutionIsotope
dump_raw	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::dump_raw(std::ostream & s_oss, int n, unsigned int indent, int *n_out)$/;"	f	class:cxxStorageBin
dump_raw	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxStorageBin
dump_raw	phreeqcpp/Surface.cxx	/^cxxSurface::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxSurface
dump_raw	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSurfaceCharge
dump_raw	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::dump_raw(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSurfaceComp
dump_raw	phreeqcpp/Temperature.cxx	/^cxxTemperature::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxTemperature
dump_raw	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::dump_raw(std::ostream & s_oss, unsigned int indent, int * n_out) const$/;"	f	class:cxxKinetics
dump_raw	phreeqcpp/cxxMix.cxx	/^cxxMix::dump_raw(std::ostream & s_oss, unsigned int indent, int *n_out) const$/;"	f	class:cxxMix
dump_xml	phreeqcpp/ExchComp.cxx	/^cxxExchComp::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxExchComp
dump_xml	phreeqcpp/Exchange.cxx	/^cxxExchange::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxExchange
dump_xml	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxGasPhase
dump_xml	phreeqcpp/ISolution.cxx	/^cxxISolution::dump_xml(std::ostream & os, unsigned int indent) const const$/;"	f	class:cxxISolution
dump_xml	phreeqcpp/ISolutionComp.cxx	/^cxxISolutionComp::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxISolutionComp
dump_xml	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxKineticsComp
dump_xml	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxNameDouble
dump_xml	phreeqcpp/NumKeyword.cxx	/^cxxNumKeyword::dump_xml(std::ostream & os, unsigned int indent) const$/;"	f	class:cxxNumKeyword
dump_xml	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxPPassemblage
dump_xml	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxPPassemblageComp
dump_xml	phreeqcpp/Pressure.cxx	/^cxxPressure::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxPressure
dump_xml	phreeqcpp/Reaction.cxx	/^cxxReaction::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxReaction
dump_xml	phreeqcpp/SS.cxx	/^cxxSS::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxSS
dump_xml	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxSSassemblage
dump_xml	phreeqcpp/Solution.cxx	/^cxxSolution::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSolution
dump_xml	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSolutionIsotope
dump_xml	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxStorageBin
dump_xml	phreeqcpp/Surface.cxx	/^cxxSurface::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSurface
dump_xml	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSurfaceCharge
dump_xml	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::dump_xml(std::ostream & s_oss, unsigned int indent) const$/;"	f	class:cxxSurfaceComp
dump_xml	phreeqcpp/Temperature.cxx	/^cxxTemperature::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxTemperature
dump_xml	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxKinetics
dump_xml	phreeqcpp/cxxMix.cxx	/^cxxMix::dump_xml(std::ostream & s_oss, unsigned int indent) const const$/;"	f	class:cxxMix
dumper	phreeqcpp/dumper.cpp	/^dumper::dumper(CParser & parser, PHRQ_io *io)$/;"	f	class:dumper
dumper	phreeqcpp/dumper.cpp	/^dumper::dumper(PHRQ_io *io)$/;"	f	class:dumper
dumper	phreeqcpp/dumper.h	/^class dumper: public PHRQ_base$/;"	c
dup_print	phreeqcpp/utilities.cpp	/^dup_print(const char *ptr, int emphasis)$/;"	f	class:Phreeqc
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dw	phreeqcpp/global_structures.h	/^	LDBLE dw;					\/* tracer diffusion coefficient in water at 25oC, m2\/s *\/$/;"	m	struct:species
dx_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE dx_moles;$/;"	m	class:cxxSpeciesDL
dz	phreeqcpp/global_structures.h	/^	LDBLE dz[3];$/;"	m	class:cxxChemRxn
dz	phreeqcpp/global_structures.h	/^	LDBLE dz[3];$/;"	m	struct:reaction
dz	phreeqcpp/global_structures.h	/^	LDBLE dz[3];$/;"	m	struct:reaction_temp
dz	phreeqcpp/global_structures.h	/^	LDBLE dz[3];$/;"	m	struct:species
echo_destination	phreeqcpp/common/PHRQ_io.h	/^	ECHO_OPTION echo_destination;$/;"	m	class:PHRQ_io
echo_file	phreeqcpp/common/Parser.h	/^	ECHO_OPTION echo_file;$/;"	m	class:CParser
echo_input	phreeqcpp/global_structures.h	/^	int echo_input;$/;"	m	struct:prints
echo_msg	phreeqcpp/PHRQ_io_output.cpp	/^echo_msg(const char *str)$/;"	f	class:Phreeqc
echo_msg	phreeqcpp/common/PHRQ_base.cxx	/^echo_msg(const std::string & stdstr)$/;"	f	class:PHRQ_base
echo_msg	phreeqcpp/common/PHRQ_io.cpp	/^echo_msg(const char * str)$/;"	f	class:PHRQ_io
echo_on	phreeqcpp/common/PHRQ_io.h	/^	bool echo_on;$/;"	m	class:PHRQ_io
echo_stream	phreeqcpp/common/Parser.h	/^	ECHO_OPTION echo_stream;$/;"	m	class:CParser
edl_species	phreeqcpp/basicsubs.cpp	/^edl_species(const char *surf_name, LDBLE * count, char ***names, LDBLE ** moles, LDBLE * area, LDBLE * thickness)$/;"	f	class:Phreeqc
eh	phreeqcpp/global_structures.h	/^	int eh;$/;"	m	struct:prints
element	phreeqcpp/global_structures.h	/^struct element$/;"	s
elementList	phreeqcpp/Reaction.h	/^	cxxNameDouble elementList;$/;"	m	class:cxxReaction
element_compare	phreeqcpp/structures.cpp	/^element_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
element_h_one	phreeqcpp/Phreeqc.h	/^	struct element *element_h_one;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::element
element_store	phreeqcpp/structures.cpp	/^element_store(const char *element)$/;"	f	class:Phreeqc
elements	phreeqcpp/Phreeqc.h	/^	struct element **elements;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::element
elements_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *elements_hash_table;$/;"	m	class:Phreeqc
elseflag	phreeqcpp/PBasic.h	/^	bool gotoflag, elseflag;$/;"	m	struct:LOC_exec
elt	phreeqcpp/global_structures.h	/^	struct element *elt;		\/* pointer to element structure *\/$/;"	m	struct:elt_list	typeref:struct:elt_list::element
elt	phreeqcpp/global_structures.h	/^	struct element *elt;$/;"	m	struct:master_isotope	typeref:struct:master_isotope::element
elt	phreeqcpp/global_structures.h	/^ 	struct element *elt;		\/* element structure *\/$/;"	m	struct:master	typeref:struct:master::element
eltList	phreeqcpp/PPassemblage.h	/^	cxxNameDouble eltList;              \/\/ list of elements in phases (and alternate reactions)$/;"	m	class:cxxPPassemblage
elt_list	phreeqcpp/Phreeqc.h	/^	struct elt_list *elt_list;	\/* structure array of working space while reading equations$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::elt_list
elt_list	phreeqcpp/global_structures.h	/^struct elt_list$/;"	s
elt_list_NameDouble	phreeqcpp/structures.cpp	/^elt_list_NameDouble(void)$/;"	f	class:Phreeqc
elt_list_combine	phreeqcpp/structures.cpp	/^elt_list_combine(void)$/;"	f	class:Phreeqc
elt_list_compare	phreeqcpp/structures.cpp	/^elt_list_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
elt_list_dup	phreeqcpp/structures.cpp	/^elt_list_dup(struct elt_list *elt_list_ptr_old)$/;"	f	class:Phreeqc
elt_list_print	phreeqcpp/structures.cpp	/^elt_list_print(struct elt_list *elt_list_ptr)$/;"	f	class:Phreeqc
elt_list_save	phreeqcpp/structures.cpp	/^elt_list_save(void)$/;"	f	class:Phreeqc
elt_list_to_tally_table	phreeqcpp/tally.cpp	/^elt_list_to_tally_table(struct tally_buffer *buffer_ptr)$/;"	f	class:Phreeqc
elt_name	phreeqcpp/SolutionIsotope.h	/^	std::string elt_name;$/;"	m	class:cxxSolutionIsotope
elt_name	phreeqcpp/global_structures.h	/^	const char *elt_name;$/;"	m	struct:inv_isotope
elt_name	phreeqcpp/global_structures.h	/^ 	const char *elt_name;$/;"	m	struct:isotope
elts	phreeqcpp/global_structures.h	/^	struct inv_elts *elts;$/;"	m	struct:inverse	typeref:struct:inverse::inv_elts
empty	IPhreeqc.cpp	/^static const char empty[] = "";$/;"	v	file:
empty	phreeqcpp/global_structures.h	/^	int empty, string, number;$/;"	m	struct:spread_row
end	phreeqcpp/global_structures.h	/^	int *end;$/;"	m	struct:copier
end_timer	phreeqcpp/ChartObject.h	/^	bool end_timer;$/;"	m	class:ChartObject
endorder	phreeqcpp/global_structures.h	/^{ preorder, postorder, endorder, leaf } VISIT;$/;"	e	enum:__anon18
entity_exists	phreeqcpp/structures.cpp	/^entity_exists(const char *name, int n_user)$/;"	f	class:Phreeqc
entity_type	phreeqcpp/global_structures.h	/^enum entity_type$/;"	g
entry	phreeqcpp/global_structures.h	/^typedef struct entry$/;"	s
eps	phreeqcpp/global_structures.h	/^	  LDBLE eps;$/;"	m	union:pitz_param::__anon21
eps1	phreeqcpp/global_structures.h	/^	  LDBLE eps1;$/;"	m	union:pitz_param::__anon21
eps_r	phreeqcpp/Phreeqc.h	/^	LDBLE eps_r; \/\/ relative dielectric permittivity$/;"	m	class:Phreeqc
eq	phreeqcpp/global_structures.h	/^	LDBLE eq;$/;"	m	struct:Charge_Group
equal	phreeqcpp/utilities.cpp	/^equal(LDBLE a, LDBLE b, LDBLE eps)$/;"	f	class:Phreeqc
equalIncrements	phreeqcpp/Pressure.h	/^	bool equalIncrements;$/;"	m	class:cxxPressure
equalIncrements	phreeqcpp/Reaction.h	/^	bool equalIncrements;$/;"	m	class:cxxReaction
equalIncrements	phreeqcpp/Temperature.h	/^	bool equalIncrements;$/;"	m	class:cxxTemperature
equalIncrements	phreeqcpp/cxxKinetics.h	/^	bool equalIncrements;$/;"	m	class:cxxKinetics
equation_name	phreeqcpp/ISolutionComp.h	/^	  std::string equation_name;$/;"	m	class:cxxISolutionComp
equi_delay	phreeqcpp/Phreeqc.h	/^	int equi_delay;$/;"	m	class:Phreeqc
equi_phase	phreeqcpp/basicsubs.cpp	/^equi_phase(const char *phase_name)$/;"	f	class:Phreeqc
equi_phase_delta	phreeqcpp/basicsubs.cpp	/^equi_phase_delta(const char *phase_name)$/;"	f	class:Phreeqc
equiv	phreeqcpp/global_structures.h	/^	LDBLE equiv;				\/* equivalents in exchange species *\/$/;"	m	struct:species
equivalent_fraction	phreeqcpp/basicsubs.cpp	/^equivalent_fraction(const char *name, LDBLE *eq, std::string &elt_name)$/;"	f	class:Phreeqc
erm_ddl	phreeqcpp/global_structures.h	/^	LDBLE erm_ddl;				\/* enrichment factor in DDL *\/$/;"	m	struct:species
erm_ddl	phreeqcpp/global_structures.h	/^	LDBLE erm_ddl;				\/* enrichment factor in ddl *\/$/;"	m	struct:spec
err_str98	phreeqcpp/Phreeqc.h	/^	char err_str98[80];$/;"	m	class:Phreeqc
errfp	phreeqcpp/cvdense.cpp	/^#define errfp /;"	d	file:
errfp	phreeqcpp/cvode.cpp	/^#define errfp /;"	d	file:
error	phreeqcpp/Phreeqc.h	/^	LDBLE toler, error, max_pct, scaled_error;$/;"	m	class:Phreeqc
error_close	phreeqcpp/PHRQ_io_output.cpp	/^error_close(void)$/;"	f	class:Phreeqc
error_close	phreeqcpp/common/PHRQ_io.cpp	/^error_close(void)$/;"	f	class:PHRQ_io
error_file	phreeqcpp/common/PHRQ_io.h	/^	FILE * error_file;$/;"	m	class:PHRQ_io
error_flush	phreeqcpp/PHRQ_io_output.cpp	/^error_flush(void)$/;"	f	class:Phreeqc
error_flush	phreeqcpp/common/PHRQ_io.cpp	/^error_flush(void)$/;"	f	class:PHRQ_io
error_msg	IPhreeqc.cpp	/^void IPhreeqc::error_msg(const char *str, bool stop)$/;"	f	class:IPhreeqc
error_msg	phreeqcpp/PHRQ_io_output.cpp	/^error_msg(const char *err_str, bool stop)$/;"	f	class:Phreeqc
error_msg	phreeqcpp/common/PHRQ_base.cxx	/^error_msg(const std::string & stdstr, int stop)$/;"	f	class:PHRQ_base
error_msg	phreeqcpp/common/PHRQ_io.cpp	/^error_msg(const char *err_str, bool stop)$/;"	f	class:PHRQ_io
error_on	phreeqcpp/common/PHRQ_io.h	/^	bool error_on;$/;"	m	class:PHRQ_io
error_open	phreeqcpp/PHRQ_io_output.cpp	/^error_open(const char *file_name)$/;"	f	class:Phreeqc
error_open	phreeqcpp/common/PHRQ_io.cpp	/^error_open(const char *file_name, const char * mode)$/;"	f	class:PHRQ_io
error_open	phreeqcpp/common/PHRQ_io.cpp	/^error_open(const char *file_name, std::ios_base::openmode mode)$/;"	f	class:PHRQ_io
error_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *error_ostream;$/;"	m	class:PHRQ_io
error_string	phreeqcpp/Phreeqc.h	/^	const char * error_string;$/;"	m	class:Phreeqc
errormsg	phreeqcpp/PBasic.cpp	/^errormsg(const char * l_s)$/;"	f	class:PBasic
eta	phreeqcpp/cvode.cpp	/^#define eta /;"	d	file:
eta	phreeqcpp/global_structures.h	/^		LDBLE eta;$/;"	m	union:pitz_param::__anon21
etamax	phreeqcpp/cvode.cpp	/^#define etamax /;"	d	file:
etaq	phreeqcpp/cvode.cpp	/^#define etaq /;"	d	file:
etaqm1	phreeqcpp/cvode.cpp	/^#define etaqm1 /;"	d	file:
etaqp1	phreeqcpp/cvode.cpp	/^#define etaqp1 /;"	d	file:
etheta	phreeqcpp/global_structures.h	/^	LDBLE etheta;$/;"	m	struct:theta_param
ethetap	phreeqcpp/global_structures.h	/^	LDBLE ethetap;$/;"	m	struct:theta_param
ewt	phreeqcpp/cvdense.cpp	/^#define ewt /;"	d	file:
ewt	phreeqcpp/cvode.cpp	/^#define ewt /;"	d	file:
exch_comp	phreeqcpp/global_structures.h	/^	const char * exch_comp;$/;"	m	struct:unknown
exch_f	phreeqcpp/global_structures.h	/^	LDBLE exch_f;$/;"	m	struct:stag_data
exch_gflag	phreeqcpp/global_structures.h	/^	int exch_gflag;				\/* flag for preferred activity coef eqn *\/$/;"	m	struct:species
exch_total	phreeqcpp/global_structures.h	/^	LDBLE exch_total, x_max;	\/* total moles of X-, max X- in transport step in sol_D[1] *\/$/;"	m	struct:sol_D
exchange	phreeqcpp/StorageBinList.h	/^	StorageBinListItem exchange;$/;"	m	class:StorageBinList
exchange	phreeqcpp/System.h	/^	cxxExchange * exchange;$/;"	m	class:cxxSystem
exchange	phreeqcpp/global_structures.h	/^	int exchange;$/;"	m	struct:prints
exchange	phreeqcpp/global_structures.h	/^	int exchange;$/;"	m	struct:save
exchange	phreeqcpp/global_structures.h	/^	struct master **exchange;$/;"	m	struct:model	typeref:struct:model::master
exchange_comps	phreeqcpp/Exchange.h	/^	std::vector<cxxExchComp> exchange_comps;$/;"	m	class:cxxExchange
exchange_in	phreeqcpp/Use.h	/^	bool exchange_in;$/;"	m	class:cxxUse
exchange_ptr	phreeqcpp/Use.h	/^	cxxExchange * exchange_ptr;$/;"	m	class:cxxUse
exchange_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *exchange_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
exec	phreeqcpp/PBasic.cpp	/^exec(void)$/;"	f	class:PBasic
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exitflag	phreeqcpp/PBasic.h	/^	bool exitflag;$/;"	m	class:PBasic
expr	phreeqcpp/PBasic.cpp	/^expr(struct LOC_exec * LINK)$/;"	f	class:PBasic
extend_tally_table	phreeqcpp/tally.cpp	/^extend_tally_table(void)$/;"	f	class:Phreeqc
extract_bracket	phreeqcpp/basicsubs.cpp	/^extract_bracket(char **string, char *bracket_string)$/;"	f	class:Phreeqc
f	phreeqcpp/cvdense.cpp	/^#defi/;"	d	file:
f	phreeqcpp/cvode.cpp	/^#defi/;"	d	file:
f	phreeqcpp/global_structures.h	/^	LDBLE f;$/;"	m	struct:unknown
f	phreeqcpp/kinetics.cpp	/^f(integertype N, realtype t, N_Vector y, N_Vector ydot,$/;"	f	class:Phreeqc
f2cstring	IPhreeqc_interface_F.cpp	/^f2cstring(char* fstring, size_t len)$/;"	f
f2cstring	fwrap.cpp	/^f2cstring(char* fstring, size_t len)$/;"	f
f_Vm	phreeqcpp/prep.cpp	/^f_Vm(LDBLE v1, void *cookie)$/;"	f	class:Phreeqc
f_data	phreeqcpp/cvdense.cpp	/^#define f_data /;"	d	file:
f_data	phreeqcpp/cvode.cpp	/^#define f_data /;"	d	file:
f_rho	phreeqcpp/basicsubs.cpp	/^f_rho(LDBLE rho_old, void *cookie)$/;"	f	class:Phreeqc
f_spinodal	phreeqcpp/tidy.cpp	/^f_spinodal(LDBLE x, void * cookie)$/;"	f	class:Phreeqc
factor	phreeqcpp/PBasic.cpp	/^factor(struct LOC_exec * LINK)$/;"	f	class:PBasic
file_name	phreeqcpp/SelectedOutput.h	/^	std::string file_name;$/;"	m	class:SelectedOutput
file_name	phreeqcpp/dumper.h	/^	std::string file_name;$/;"	m	class:dumper
fill_m_s	phreeqcpp/transport.cpp	/^fill_m_s(struct J_ij *l_J_ij, int l_J_ij_count_spec)$/;"	f	class:Phreeqc
fill_spec	phreeqcpp/transport.cpp	/^fill_spec(int l_cell_no)$/;"	f	class:Phreeqc
fill_tally_table	phreeqcpp/tally.cpp	/^fill_tally_table(int *n_user, int index_conservative, int n_buffer)$/;"	f	class:Phreeqc
find_J	phreeqcpp/transport.cpp	/^find_J(int icell, int jcell, LDBLE mixf, LDBLE DDt, int stagnant)$/;"	f	class:Phreeqc
find_gas_comp	phreeqcpp/basicsubs.cpp	/^find_gas_comp(const char *gas_comp_name)$/;"	f	class:Phreeqc
find_gas_p	phreeqcpp/basicsubs.cpp	/^find_gas_p(void)$/;"	f	class:Phreeqc
find_gas_vm	phreeqcpp/basicsubs.cpp	/^find_gas_vm(void)$/;"	f	class:Phreeqc
find_misc1	phreeqcpp/basicsubs.cpp	/^find_misc1(const char *ss_name)$/;"	f	class:Phreeqc
find_misc2	phreeqcpp/basicsubs.cpp	/^find_misc2(const char *ss_name)$/;"	f	class:Phreeqc
find_option	phreeqcpp/common/Parser.cxx	/^CParser::FIND_TYPE CParser::find_option(const std::string & item, int *n,$/;"	f	class:CParser
find_option	phreeqcpp/read.cpp	/^find_option(const char *item, int *n, const char **list, int count_list, int exact)$/;"	f	class:Phreeqc
find_solution	phreeqcpp/Phreeqc.cpp	/^cxxSolution Phreeqc::find_solution(int id){$/;"	f	class:Phreeqc
find_ss_comp	phreeqcpp/basicsubs.cpp	/^find_ss_comp(const char *ss_comp_name)$/;"	f	class:Phreeqc
find_surface_charge_unknown	phreeqcpp/prep.cpp	/^find_surface_charge_unknown(std::string &str, int plane)$/;"	f	class:Phreeqc
findline	phreeqcpp/PBasic.cpp	/^findline(long n)$/;"	f	class:PBasic
findvar	phreeqcpp/PBasic.cpp	/^findvar(struct LOC_exec *LINK)$/;"	f	class:PBasic
finite	phreeqcpp/Phreeqc.h	/^#  define finite /;"	d
first_read_input	phreeqcpp/Phreeqc.h	/^	int first_read_input;$/;"	m	class:Phreeqc
fnbuf	phreeqcpp/PBasic.h	/^	char fnbuf[256];$/;"	m	class:PBasic
force	phreeqcpp/global_structures.h	/^	int force;$/;"	m	struct:inv_phases
force_equality	phreeqcpp/PPassemblageComp.h	/^	bool force_equality;$/;"	m	class:cxxPPassemblageComp
force_numerical_fixed_volume	phreeqcpp/Phreeqc.h	/^	bool force_numerical_fixed_volume;$/;"	m	class:Phreeqc
force_prep	phreeqcpp/global_structures.h	/^	int force_prep;$/;"	m	struct:model
force_solns	phreeqcpp/global_structures.h	/^	int *force_solns;$/;"	m	struct:inverse
forloop	phreeqcpp/PBasic.h	/^#define forloop /;"	d
form_error_msg	phreeqcpp/Form1.h	/^			void form_error_msg( std::string estring )$/;"	f	class:zdg_ui2::Form1
form_started	phreeqcpp/ChartObject.h	/^	bool form_started;$/;"	m	class:ChartObject
formula	phreeqcpp/ExchComp.h	/^	std::string formula;$/;"	m	class:cxxExchComp
formula	phreeqcpp/SurfaceComp.h	/^	std::string formula;$/;"	m	class:cxxSurfaceComp
formula	phreeqcpp/global_structures.h	/^	const char *formula;				\/* chemical formula *\/$/;"	m	struct:phase
formula	phreeqcpp/global_structures.h	/^	struct elt_list *formula;$/;"	m	struct:tally	typeref:struct:tally::elt_list
formula_z	phreeqcpp/ExchComp.h	/^	LDBLE formula_z;			\/\/ charge on formula$/;"	m	class:cxxExchComp
formula_z	phreeqcpp/SurfaceComp.h	/^	LDBLE formula_z;$/;"	m	class:cxxSurfaceComp
forward_output_to_log	phreeqcpp/Phreeqc.h	/^	int forward_output_to_log;$/;"	m	class:Phreeqc
fpunchf	IPhreeqc.cpp	/^void IPhreeqc::fpunchf(const char *name, const char *format, char *s)$/;"	f	class:IPhreeqc
fpunchf	IPhreeqc.cpp	/^void IPhreeqc::fpunchf(const char *name, const char *format, double d)$/;"	f	class:IPhreeqc
fpunchf	IPhreeqc.cpp	/^void IPhreeqc::fpunchf(const char *name, const char *format, int i)$/;"	f	class:IPhreeqc
fpunchf	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf(const char *name, const char *format, char * s)$/;"	f	class:Phreeqc
fpunchf	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf(const char *name, const char *format, double d)$/;"	f	class:Phreeqc
fpunchf	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf(const char *name, const char *format, int d)$/;"	f	class:Phreeqc
fpunchf	phreeqcpp/common/PHRQ_io.cpp	/^fpunchf(const char *name, const char *format, char * s)$/;"	f	class:PHRQ_io
fpunchf	phreeqcpp/common/PHRQ_io.cpp	/^fpunchf(const char *name, const char *format, double d)$/;"	f	class:PHRQ_io
fpunchf	phreeqcpp/common/PHRQ_io.cpp	/^fpunchf(const char *name, const char *format, int d)$/;"	f	class:PHRQ_io
fpunchf_end_row	IPhreeqc.cpp	/^void IPhreeqc::fpunchf_end_row(const char *format)$/;"	f	class:IPhreeqc
fpunchf_end_row	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf_end_row(const char *format)$/;"	f	class:Phreeqc
fpunchf_end_row	phreeqcpp/common/PHRQ_io.cpp	/^void PHRQ_io::fpunchf_end_row(const char *format)$/;"	f	class:PHRQ_io
fpunchf_heading	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf_heading(const char *name)$/;"	f	class:Phreeqc
fpunchf_helper	phreeqcpp/common/PHRQ_io.cpp	/^fpunchf_helper(std::ostream *os, const char *format, ...)$/;"	f	class:PHRQ_io
fpunchf_helper	phreeqcpp/common/PHRQ_io.cpp	/^fpunchf_helper(std::string *str, const char *format, ...)$/;"	f	class:PHRQ_io
fpunchf_user	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf_user(int user_index, const char *format, char * d)$/;"	f	class:Phreeqc
fpunchf_user	phreeqcpp/PHRQ_io_output.cpp	/^fpunchf_user(int user_index, const char *format, double d)$/;"	f	class:Phreeqc
fpunchf_user_buffer	phreeqcpp/Phreeqc.h	/^	char fpunchf_user_buffer[80];$/;"	m	class:Phreeqc
fpunchf_user_s_warning	phreeqcpp/Phreeqc.h	/^	int fpunchf_user_s_warning;$/;"	m	class:Phreeqc
fraction	phreeqcpp/global_structures.h	/^	LDBLE fraction;$/;"	m	struct:Change_Surf
fraction_x	phreeqcpp/SScomp.h	/^	LDBLE fraction_x;$/;"	m	class:cxxSScomp
fraction_x	phreeqcpp/global_structures.h	/^	LDBLE fraction_x;$/;"	m	struct:phase
free_check_null	phreeqcpp/utilities.cpp	/^free_check_null(void *ptr)$/;"	f	class:Phreeqc
free_cvode	phreeqcpp/kinetics.cpp	/^free_cvode(void)$/;"	f	class:Phreeqc
free_dim_stringvar	phreeqcpp/PBasic.cpp	/^free_dim_stringvar(varrec *l_varbase)$/;"	f	class:PBasic
free_hash_strings	phreeqcpp/utilities.cpp	/^free_hash_strings(HashTable * Table)$/;"	f	class:Phreeqc
free_model_allocs	phreeqcpp/model.cpp	/^free_model_allocs(void)$/;"	f	class:Phreeqc
free_spread	phreeqcpp/spread.cpp	/^free_spread(void)$/;"	f	class:Phreeqc
free_tally_table	phreeqcpp/tally.cpp	/^free_tally_table(void)$/;"	f	class:Phreeqc
from_pcil	phreeqcpp/isotopes.cpp	/^from_pcil(struct master_isotope *master_isotope_ptr)$/;"	f	class:Phreeqc
from_pct	phreeqcpp/isotopes.cpp	/^from_pct(struct master_isotope *master_isotope_ptr, LDBLE total_moles)$/;"	f	class:Phreeqc
from_permil	phreeqcpp/isotopes.cpp	/^from_permil(struct master_isotope *master_isotope_ptr, LDBLE major_total)$/;"	f	class:Phreeqc
from_tu	phreeqcpp/isotopes.cpp	/^from_tu(struct master_isotope *master_isotope_ptr)$/;"	f	class:Phreeqc
ftemp	phreeqcpp/cvode.cpp	/^#define ftemp /;"	d	file:
full_pitzer	phreeqcpp/Phreeqc.h	/^	int full_pitzer, always_full_pitzer, ICON, IC;$/;"	m	class:Phreeqc
g	phreeqcpp/SurfaceCharge.h	/^	LDBLE g;$/;"	m	class:cxxSurfDL
g_function	phreeqcpp/integrate.cpp	/^g_function(LDBLE x_value)$/;"	f	class:Phreeqc
g_iterations	phreeqcpp/Phreeqc.h	/^	int g_iterations;$/;"	m	class:Phreeqc
g_map	phreeqcpp/SurfaceCharge.h	/^	std::map<LDBLE, cxxSurfDL> g_map;$/;"	m	class:cxxSurfaceCharge
g_moles	phreeqcpp/SurfaceCharge.h	/^	LDBLE g_moles;$/;"	m	class:cxxSpeciesDL
g_spread_sheet	phreeqcpp/Phreeqc.h	/^	struct spread_sheet g_spread_sheet;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::spread_sheet
gamma	phreeqcpp/cvdense.cpp	/^#define gamma /;"	d	file:
gamma	phreeqcpp/cvode.cpp	/^#define gamma /;"	d	file:
gamma_iterations	phreeqcpp/Phreeqc.h	/^	int gamma_iterations;$/;"	m	class:Phreeqc
gamma_source	phreeqcpp/global_structures.h	/^	LDBLE *gamma_source;$/;"	m	struct:unknown_list
gammap	phreeqcpp/cvdense.cpp	/^#define gammap /;"	d	file:
gammap	phreeqcpp/cvode.cpp	/^#define gammap /;"	d	file:
gammas	phreeqcpp/model.cpp	/^gammas(LDBLE mu)$/;"	f	class:Phreeqc
gammas_pz	phreeqcpp/pitzer.cpp	/^gammas_pz()$/;"	f	class:Phreeqc
gammas_sit	phreeqcpp/sit.cpp	/^gammas_sit()$/;"	f	class:Phreeqc
gamrat	phreeqcpp/cvdense.cpp	/^#define gamrat /;"	d	file:
gamrat	phreeqcpp/cvode.cpp	/^#define gamrat /;"	d	file:
gas_comps	phreeqcpp/GasPhase.h	/^	std::vector<cxxGasComp> gas_comps;$/;"	m	class:cxxGasPhase
gas_in	phreeqcpp/Phreeqc.h	/^	int gas_in;$/;"	m	class:Phreeqc
gas_phase	phreeqcpp/StorageBinList.h	/^	StorageBinListItem gas_phase;$/;"	m	class:StorageBinList
gas_phase	phreeqcpp/global_structures.h	/^	int gas_phase;$/;"	m	struct:prints
gas_phase	phreeqcpp/global_structures.h	/^	int gas_phase;$/;"	m	struct:save
gas_phase	phreeqcpp/global_structures.h	/^	struct phase **gas_phase;$/;"	m	struct:model	typeref:struct:model::phase
gas_phase_check	phreeqcpp/step.cpp	/^gas_phase_check(cxxGasPhase *gas_phase_ptr)$/;"	f	class:Phreeqc
gas_phase_in	phreeqcpp/Use.h	/^	bool gas_phase_in;$/;"	m	class:cxxUse
gas_phase_ptr	phreeqcpp/Use.h	/^	cxxGasPhase * gas_phase_ptr;$/;"	m	class:cxxUse
gas_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *gas_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
gas_unknowns	phreeqcpp/Phreeqc.h	/^	std::vector<struct unknown *> gas_unknowns;$/;"	m	class:Phreeqc
gases	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > gases;$/;"	m	class:SelectedOutput
gases	phreeqcpp/global_structures.h	/^	struct name_phase *gases;$/;"	m	struct:punch	typeref:struct:punch::name_phase
gasphase	phreeqcpp/System.h	/^	cxxGasPhase * gasphase;$/;"	m	class:cxxSystem
gefa	phreeqcpp/smalldense.cpp	/^gefa(realtype ** a, integertype n, integertype * p)$/;"	f
gesl	phreeqcpp/smalldense.cpp	/^gesl(realtype ** a, integertype n, integertype * p, realtype * b)$/;"	f
getOptionFromLastLine	phreeqcpp/common/Parser.cxx	/^CParser::getOptionFromLastLine(const std::vector < std::string > &opt_list,$/;"	f	class:CParser
get_accumulated	phreeqcpp/common/Parser.h	/^	std::string & get_accumulated()$/;"	f	class:CParser
get_all_components	phreeqcpp/tally.cpp	/^get_all_components(void)$/;"	f	class:Phreeqc
get_bits	phreeqcpp/inverse.cpp	/^get_bits(unsigned long bits, int position, int number)$/;"	f	class:Phreeqc
get_calculate_value	phreeqcpp/basicsubs.cpp	/^get_calculate_value(const char *name)$/;"	f	class:Phreeqc
get_charge	phreeqcpp/parse.cpp	/^get_charge(char *charge, LDBLE * l_z)$/;"	f	class:Phreeqc
get_coef	phreeqcpp/parse.cpp	/^get_coef(LDBLE * coef, char **eqnaddr)$/;"	f	class:Phreeqc
get_echo_file	phreeqcpp/common/Parser.h	/^	ECHO_OPTION get_echo_file()$/;"	f	class:CParser
get_echo_stream	phreeqcpp/common/Parser.h	/^	ECHO_OPTION get_echo_stream()$/;"	f	class:CParser
get_edl_species	phreeqcpp/basicsubs.cpp	/^get_edl_species(cxxSurfaceCharge & charge_ref)$/;"	f	class:Phreeqc
get_elt	phreeqcpp/common/Parser.cxx	/^CParser::STATUS_TYPE CParser::get_elt(std::string::iterator & begin,$/;"	f	class:CParser
get_elt	phreeqcpp/parse.cpp	/^get_elt(char **t_ptr, char *element, int *i)$/;"	f	class:Phreeqc
get_elts_in_species	phreeqcpp/parse.cpp	/^get_elts_in_species(char **t_ptr, LDBLE coef)$/;"	f	class:Phreeqc
get_entity_enum	phreeqcpp/structures.cpp	/^get_entity_enum(char *name)$/;"	f	class:Phreeqc
get_forward_output_to_log	phreeqcpp/PHRQ_io_output.cpp	/^get_forward_output_to_log(void)$/;"	f	class:Phreeqc
get_input_error	phreeqcpp/common/Parser.h	/^	int get_input_error()$/;"	f	class:CParser
get_input_errors	phreeqcpp/utilities.cpp	/^get_input_errors()$/;"	f	class:Phreeqc
get_inv_total	phreeqcpp/inverse.cpp	/^get_inv_total(cxxSolution *solution_ptr, const char *elt)$/;"	f	class:Phreeqc
get_isotope	phreeqcpp/inverse.cpp	/^cxxSolutionIsotope *Phreeqc::get_isotope(cxxSolution *solution_ptr, const char *elt)$/;"	f	class:Phreeqc
get_iss	phreeqcpp/common/Parser.h	/^	std::istringstream & get_iss()$/;"	f	class:CParser
get_istream	phreeqcpp/common/PHRQ_io.cpp	/^get_istream()$/;"	f	class:PHRQ_io
get_line	phreeqcpp/common/PHRQ_io.cpp	/^get_line(void)$/;"	f	class:PHRQ_io
get_line	phreeqcpp/common/Parser.cxx	/^PHRQ_io::LINE_TYPE CParser::get_line()$/;"	f	class:CParser
get_line	phreeqcpp/input.cpp	/^get_line(void)$/;"	f	class:Phreeqc
get_line_phrq_io	phreeqcpp/common/Parser.cxx	/^PHRQ_io::LINE_TYPE CParser::get_line_phrq_io()$/;"	f	class:CParser
get_list_master_ptrs	phreeqcpp/prep.cpp	/^get_list_master_ptrs(char *ptr, struct master *master_ptr)$/;"	f	class:Phreeqc
get_logical_line	phreeqcpp/common/PHRQ_io.cpp	/^get_logical_line(void)$/;"	f	class:PHRQ_io
get_logical_line	phreeqcpp/common/Parser.cxx	/^PHRQ_io::LINE_TYPE CParser::get_logical_line()$/;"	f	class:CParser
get_m_line_type	phreeqcpp/common/Parser.h	/^	PHRQ_io::LINE_TYPE get_m_line_type(void) const {return this->m_line_type;}$/;"	f	class:CParser
get_num	phreeqcpp/parse.cpp	/^get_num(char **t_ptr, LDBLE * num)$/;"	f	class:Phreeqc
get_option	phreeqcpp/common/Parser.cxx	/^CParser::get_option(const std::vector < std::string > &opt_list,$/;"	f	class:CParser
get_option	phreeqcpp/read.cpp	/^get_option(const char **opt_list, int count_opt_list, char **next_char)$/;"	f	class:Phreeqc
get_option_string	phreeqcpp/spread.cpp	/^get_option_string(const char **opt_list, int count_opt_list, char **next_char)$/;"	f	class:Phreeqc
get_pH	phreeqcpp/Phreeqc.cpp	/^double Phreeqc::get_pH(int solution) {$/;"	f	class:Phreeqc
get_pe	phreeqcpp/Phreeqc.cpp	/^double Phreeqc::get_pe(int solution) {$/;"	f	class:Phreeqc
get_rest_of_line	phreeqcpp/common/Parser.cxx	/^CParser::TOKEN_TYPE CParser::get_rest_of_line(std::string &token)$/;"	f	class:CParser
get_secondary	phreeqcpp/parse.cpp	/^get_secondary(char **t_ptr, char *element, int *i)$/;"	f	class:Phreeqc
get_secondary_in_species	phreeqcpp/parse.cpp	/^get_secondary_in_species(char **t_ptr, LDBLE coef)$/;"	f	class:Phreeqc
get_sel_out_file_on	IPhreeqc.cpp	/^bool IPhreeqc::get_sel_out_file_on(int n)const$/;"	f	class:IPhreeqc
get_sel_out_string_on	IPhreeqc.cpp	/^bool IPhreeqc::get_sel_out_string_on(int n)const$/;"	f	class:IPhreeqc
get_species	phreeqcpp/parse.cpp	/^get_species(char **ptr)$/;"	f	class:Phreeqc
get_tally_table_column_heading	phreeqcpp/tally.cpp	/^get_tally_table_column_heading(int column, int *type, char *string)$/;"	f	class:Phreeqc
get_tally_table_row_heading	phreeqcpp/tally.cpp	/^get_tally_table_row_heading(int row, char *string)$/;"	f	class:Phreeqc
get_tally_table_rows_columns	phreeqcpp/tally.cpp	/^get_tally_table_rows_columns(int *rows, int *columns)$/;"	f	class:Phreeqc
get_token	phreeqcpp/utilities.cpp	/^get_token(char **eqnaddr, char *string, LDBLE * l_z, int *l)$/;"	f	class:Phreeqc
get_total	phreeqcpp/Phreeqc.cpp	/^double Phreeqc::get_total(int solution, const char *string) {$/;"	f	class:Phreeqc
get_true_false	phreeqcpp/common/Parser.cxx	/^bool CParser::get_true_false(std::istream::pos_type & pos, bool def)$/;"	f	class:CParser
get_true_false	phreeqcpp/read.cpp	/^get_true_false(char *string, int default_value)$/;"	f	class:Phreeqc
getc	phreeqcpp/common/PHRQ_io.cpp	/^getc(void)$/;"	f	class:PHRQ_io
gflag	phreeqcpp/global_structures.h	/^	int gflag;					\/* flag for preferred activity coef eqn *\/$/;"	m	struct:species
gfw	phreeqcpp/ISolutionComp.h	/^	  LDBLE gfw;$/;"	m	class:cxxISolutionComp
gfw	phreeqcpp/global_structures.h	/^	LDBLE gfw;					\/* gram formula wt of species *\/$/;"	m	struct:species
gfw	phreeqcpp/global_structures.h	/^	LDBLE gfw;$/;"	m	struct:element
gfw	phreeqcpp/global_structures.h	/^	LDBLE gfw;$/;"	m	struct:tally_buffer
gfw	phreeqcpp/global_structures.h	/^ 	LDBLE gfw;					\/* default gfw for species *\/$/;"	m	struct:master
gfw_formula	phreeqcpp/global_structures.h	/^ 	const char *gfw_formula;			\/* formula from which to calcuate gfw *\/$/;"	m	struct:master
gfw_map	phreeqcpp/Phreeqc.h	/^	std::map<std::string, double> gfw_map;$/;"	m	class:Phreeqc
gfw_water	phreeqcpp/Phreeqc.h	/^	LDBLE gfw_water;$/;"	m	class:Phreeqc
gn	phreeqcpp/global_structures.h	/^	LDBLE gn, gntot;$/;"	m	struct:phase
gn_n	phreeqcpp/global_structures.h	/^	LDBLE gn_n, gntot_n;$/;"	m	struct:phase
gntot	phreeqcpp/global_structures.h	/^	LDBLE gn, gntot;$/;"	m	struct:phase
gntot_n	phreeqcpp/global_structures.h	/^	LDBLE gn_n, gntot_n;$/;"	m	struct:phase
good	phreeqcpp/Phreeqc.h	/^	unsigned long *good, *bad, *minimal;$/;"	m	class:Phreeqc
gosubloop	phreeqcpp/PBasic.h	/^#define gosubloop /;"	d
gotoflag	phreeqcpp/PBasic.h	/^	bool gotoflag, elseflag;$/;"	m	struct:LOC_exec
grams	phreeqcpp/SurfaceCharge.h	/^	LDBLE grams;$/;"	m	class:cxxSurfaceCharge
graph_initial_solutions	phreeqcpp/ChartObject.h	/^	bool graph_initial_solutions;$/;"	m	class:ChartObject
graph_initial_solutions	phreeqcpp/Phreeqc.h	/^	int connect_simulations, graph_initial_solutions;$/;"	m	class:Phreeqc
graph_initial_solutions	phreeqcpp/Phreeqc.h	/^	int graph_initial_solutions;$/;"	m	class:Phreeqc
graph_x	phreeqcpp/ChartObject.h	/^	LDBLE graph_x;$/;"	m	class:ChartObject
graph_y	phreeqcpp/ChartObject.h	/^	std::map<int, LDBLE> graph_y;$/;"	m	class:ChartObject
grid	phreeqcpp/Form1.h	/^			 bool background, hints, grid;$/;"	m	class:zdg_ui2::Form1
h	phreeqcpp/cvdense.cpp	/^#define h /;"	d	file:
h	phreeqcpp/cvode.cpp	/^#define h /;"	d	file:
h	phreeqcpp/global_structures.h	/^	LDBLE h;					\/* stoichiometric coefficient of H in species *\/$/;"	m	struct:species
hInfiniteLoop	phreeqcpp/PBasic.h	/^	HANDLE hInfiniteLoop;$/;"	m	class:PBasic
have_punch_name	phreeqcpp/SelectedOutput.h	/^	bool have_punch_name;$/;"	m	class:SelectedOutput
hcreate_multi	phreeqcpp/utilities.cpp	/^hcreate_multi(unsigned Count, HashTable ** HashTable_ptr)$/;"	f	class:Phreeqc
hdestroy_multi	phreeqcpp/utilities.cpp	/^hdestroy_multi(HashTable * Table)$/;"	f	class:Phreeqc
hdf	phreeqcpp/global_structures.h	/^	int hdf;$/;"	m	struct:prints
heading	phreeqcpp/global_structures.h	/^	struct spread_row *heading;$/;"	m	struct:spread_sheet	typeref:struct:spread_sheet::spread_row
headings	phreeqcpp/UserPunch.h	/^	std::vector <std::string> headings;$/;"	m	class:UserPunch
headings	phreeqcpp/global_structures.h	/^	int headings;$/;"	m	struct:prints
headings_original	phreeqcpp/ChartObject.h	/^	std::vector<std::string> headings_original;$/;"	m	class:ChartObject
heat_diffc	phreeqcpp/Phreeqc.h	/^	LDBLE heat_diffc;$/;"	m	class:Phreeqc
heat_mix	phreeqcpp/transport.cpp	/^heat_mix(int l_heat_nmix)$/;"	f	class:Phreeqc
heat_mix_array	phreeqcpp/Phreeqc.h	/^	LDBLE *heat_mix_array;$/;"	m	class:Phreeqc
heat_mix_f_imm	phreeqcpp/Phreeqc.h	/^	LDBLE heat_mix_f_imm, heat_mix_f_m;$/;"	m	class:Phreeqc
heat_mix_f_m	phreeqcpp/Phreeqc.h	/^	LDBLE heat_mix_f_imm, heat_mix_f_m;$/;"	m	class:Phreeqc
heat_nmix	phreeqcpp/Phreeqc.h	/^	int nmix, heat_nmix;$/;"	m	class:Phreeqc
high_precision	phreeqcpp/Phreeqc.h	/^	bool high_precision;$/;"	m	class:Phreeqc
high_precision	phreeqcpp/SelectedOutput.h	/^	bool high_precision;$/;"	m	class:SelectedOutput
high_precision	phreeqcpp/global_structures.h	/^	int high_precision;$/;"	m	struct:punch
hints	phreeqcpp/Form1.h	/^			 bool background, hints, grid;$/;"	m	class:zdg_ui2::Form1
hmax_inv	phreeqcpp/cvode.cpp	/^#define hmax_inv /;"	d	file:
hmin	phreeqcpp/cvode.cpp	/^#define hmin /;"	d	file:
homeline	phreeqcpp/PBasic.h	/^	linerec *homeline;$/;"	m	struct:looprec
hometok	phreeqcpp/PBasic.h	/^	tokenrec *hometok;$/;"	m	struct:looprec
host	Makefile	/^host = x86_64-apple-darwin15.5.0$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = darwin15.5.0$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-apple-darwin15.5.0$/;"	m
host_vendor	Makefile	/^host_vendor = apple$/;"	m
hprime	phreeqcpp/cvode.cpp	/^#define hprime /;"	d	file:
hscale	phreeqcpp/cvode.cpp	/^#define hscale /;"	d	file:
hsearch_multi	phreeqcpp/utilities.cpp	/^hsearch_multi(HashTable * Table, ENTRY item, ACTION action)$/;"	f	class:Phreeqc
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
hu	phreeqcpp/cvode.cpp	/^#define hu /;"	d	file:
i_u	phreeqcpp/global_structures.h	/^	struct inv_isotope *i_u;$/;"	m	struct:inverse	typeref:struct:inverse::inv_isotope
id	phreeqcpp/CurveObject.h	/^	std::string id, color, symbol;$/;"	m	class:CurveObject
in	phreeqcpp/global_structures.h	/^	int in;						\/* species used in model if TRUE *\/$/;"	m	struct:phase
in	phreeqcpp/global_structures.h	/^	int in;						\/* species used in model if TRUE *\/$/;"	m	struct:species
in	phreeqcpp/global_structures.h	/^	int in;$/;"	m	struct:punch
in	phreeqcpp/global_structures.h	/^ 	int in;						\/* TRUE if in model, FALSE if out, REWRITE if other mb eq *\/$/;"	m	struct:master
in_system	phreeqcpp/global_structures.h	/^	int in_system;$/;"	m	struct:phase
inbuf	phreeqcpp/PBasic.h	/^	char *inbuf;$/;"	m	class:PBasic
inbuf	phreeqcpp/PBasic.h	/^	char inbuf[MAX_LINE];$/;"	m	struct:linerec
include_HEADERS	Makefile	/^include_HEADERS = $(top_srcdir)\/src\/IPhreeqc.h \\$/;"	m
included_nvector_h	phreeqcpp/nvector.h	/^#define included_nvector_h$/;"	d
included_nvector_serial_h	phreeqcpp/nvector_serial.h	/^#define included_nvector_serial_h$/;"	d
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
incr_input_error	phreeqcpp/common/Parser.cxx	/^incr_input_error()$/;"	f	class:CParser
incremental_reactions	phreeqcpp/Phreeqc.h	/^	int incremental_reactions;$/;"	m	class:Phreeqc
ineq	phreeqcpp/model.cpp	/^ineq(int in_kode)$/;"	f	class:Phreeqc
ineq_array	phreeqcpp/Phreeqc.h	/^	LDBLE *normal, *ineq_array, *res, *cu, *zero, *delta1;$/;"	m	class:Phreeqc
ineq_array_max	phreeqcpp/Phreeqc.h	/^	int normal_max, ineq_array_max, res_max, cu_max, zero_max,$/;"	m	class:Phreeqc
ineq_init	phreeqcpp/model.cpp	/^ineq_init(int l_max_row_count, int l_max_column_count)$/;"	f	class:Phreeqc
ineq_tol	phreeqcpp/Phreeqc.h	/^	LDBLE ineq_tol;$/;"	m	class:Phreeqc
inert_moles	phreeqcpp/global_structures.h	/^	LDBLE inert_moles;$/;"	m	struct:unknown
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	phreeqcpp/Phreeqc.cpp	/^void Phreeqc::init(void)$/;"	f	class:Phreeqc
init	phreeqcpp/Use.cpp	/^init(void)$/;"	f	class:cxxUse
init_heat_mix	phreeqcpp/transport.cpp	/^init_heat_mix(int l_nmix)$/;"	f	class:Phreeqc
init_mix	phreeqcpp/transport.cpp	/^init_mix(void)$/;"	f	class:Phreeqc
init_moles	phreeqcpp/SScomp.h	/^	LDBLE init_moles;$/;"	m	class:cxxSScomp
initial_data	phreeqcpp/Solution.h	/^	cxxISolution *initial_data;$/;"	m	class:cxxSolution
initial_exchangers	phreeqcpp/global_structures.h	/^	int initial_exchangers;$/;"	m	struct:prints
initial_exchangers	phreeqcpp/mainsubs.cpp	/^initial_exchangers(int print)$/;"	f	class:Phreeqc
initial_gas_phases	phreeqcpp/mainsubs.cpp	/^initial_gas_phases(int print)$/;"	f	class:Phreeqc
initial_guesses	phreeqcpp/model.cpp	/^initial_guesses(void)$/;"	f	class:Phreeqc
initial_isotopes	phreeqcpp/global_structures.h	/^	int initial_isotopes;$/;"	m	struct:prints
initial_moles	phreeqcpp/GasComp.h	/^	LDBLE initial_moles;$/;"	m	class:cxxGasComp
initial_moles	phreeqcpp/KineticsComp.h	/^	  LDBLE initial_moles;$/;"	m	class:cxxKineticsComp
initial_moles	phreeqcpp/PPassemblageComp.h	/^	LDBLE initial_moles;$/;"	m	class:cxxPPassemblageComp
initial_moles	phreeqcpp/SScomp.h	/^	LDBLE initial_moles;$/;"	m	class:cxxSScomp
initial_solution_isotopes	phreeqcpp/Phreeqc.h	/^	int initial_solution_isotopes;$/;"	m	class:Phreeqc
initial_solutions	phreeqcpp/global_structures.h	/^	int initial_solutions;$/;"	m	struct:prints
initial_solutions	phreeqcpp/mainsubs.cpp	/^initial_solutions(int print)$/;"	f	class:Phreeqc
initial_surface_water	phreeqcpp/integrate.cpp	/^initial_surface_water(void)$/;"	f	class:Phreeqc
initial_surfaces	phreeqcpp/mainsubs.cpp	/^initial_surfaces(int print)$/;"	f	class:Phreeqc
initial_total_time	phreeqcpp/Phreeqc.h	/^		rate_sim_time_end, rate_sim_time, rate_moles, initial_total_time;$/;"	m	class:Phreeqc
initialize	phreeqcpp/mainsubs.cpp	/^initialize(void)$/;"	f	class:Phreeqc
inout	phreeqcpp/prep.cpp	/^inout(void)$/;"	f	class:Phreeqc
input_case	phreeqcpp/SS.h	/^	SS_PARAMETER_TYPE input_case;$/;"	m	class:cxxSS
input_conc	phreeqcpp/ISolutionComp.h	/^	  LDBLE input_conc;$/;"	m	class:cxxISolutionComp
input_error	phreeqcpp/Phreeqc.h	/^	int input_error;$/;"	m	class:Phreeqc
input_file	IPhreeqc.hpp	/^	FILE *input_file;$/;"	m	class:IPhreeqc
insert	phreeqcpp/NameDouble.h	/^	insert(const char *str, LDBLE d)$/;"	f	class:cxxNameDouble
install_sh	Makefile	/^install_sh = ${SHELL} \/Users\/Abel\/Vitens\/Projecten\/VIPHREEQC\/config\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
integertype	phreeqcpp/sundialstypes.h	/^	typedef long int integertype;$/;"	t
interlayer_Dflag	phreeqcpp/Phreeqc.h	/^	int interlayer_Dflag;	\/* multicomponent diffusion and diffusion through interlayer porosity *\/$/;"	m	class:Phreeqc
interlayer_Dpor	phreeqcpp/Phreeqc.h	/^	LDBLE interlayer_Dpor;	\/* uniform porosity of interlayer space of montmorillonite in solid medium *\/$/;"	m	class:Phreeqc
interlayer_Dpor_lim	phreeqcpp/Phreeqc.h	/^	LDBLE interlayer_Dpor_lim;	\/* limiting interlayer porosity where transport stops *\/$/;"	m	class:Phreeqc
interlayer_tortf	phreeqcpp/Phreeqc.h	/^	LDBLE interlayer_tortf;	\/* tortuosity_factor in interlayer porosity,$/;"	m	class:Phreeqc
intexpr	phreeqcpp/PBasic.cpp	/^intexpr(struct LOC_exec *LINK)$/;"	f	class:PBasic
intfactor	phreeqcpp/PBasic.cpp	/^intfactor(struct LOC_exec *LINK)$/;"	f	class:PBasic
ints	phreeqcpp/Serializer.h	/^	std::vector<int> ints;$/;"	m	class:Serializer
inv_cu	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
inv_delta1	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
inv_elts	phreeqcpp/global_structures.h	/^struct inv_elts$/;"	s
inv_is	phreeqcpp/Phreeqc.h	/^	int *inv_iu, *inv_is;$/;"	m	class:Phreeqc
inv_isotope	phreeqcpp/global_structures.h	/^struct inv_isotope$/;"	s
inv_iu	phreeqcpp/Phreeqc.h	/^	int *inv_iu, *inv_is;$/;"	m	class:Phreeqc
inv_phases	phreeqcpp/global_structures.h	/^struct inv_phases$/;"	s
inv_res	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
inv_tol_default	phreeqcpp/Phreeqc.h	/^	LDBLE inv_tol_default;$/;"	m	class:Phreeqc
inv_zero	phreeqcpp/Phreeqc.h	/^	LDBLE *inv_zero, *array1, *inv_res, *inv_delta1, *delta2, *delta3, *inv_cu,$/;"	m	class:Phreeqc
inverse	phreeqcpp/Phreeqc.h	/^	struct inverse *inverse;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::inverse
inverse	phreeqcpp/SelectedOutput.h	/^	bool inverse;$/;"	m	class:SelectedOutput
inverse	phreeqcpp/global_structures.h	/^	int inverse;$/;"	m	struct:prints
inverse	phreeqcpp/global_structures.h	/^	int inverse;$/;"	m	struct:punch
inverse	phreeqcpp/global_structures.h	/^struct inverse$/;"	s
inverse_alloc	phreeqcpp/structures.cpp	/^inverse_alloc(void)$/;"	f	class:Phreeqc
inverse_compare	phreeqcpp/structures.cpp	/^inverse_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
inverse_delete	phreeqcpp/structures.cpp	/^inverse_delete(int i)$/;"	f	class:Phreeqc
inverse_free	phreeqcpp/structures.cpp	/^inverse_free(struct inverse *inverse_ptr)$/;"	f	class:Phreeqc
inverse_heading_names	phreeqcpp/Phreeqc.h	/^	std::vector <std::string> inverse_heading_names;$/;"	m	class:Phreeqc
inverse_in	phreeqcpp/Use.h	/^	bool inverse_in;$/;"	m	class:cxxUse
inverse_isotope_compare	phreeqcpp/structures.cpp	/^inverse_isotope_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
inverse_models	phreeqcpp/inverse.cpp	/^inverse_models(void)$/;"	f	class:Phreeqc
inverse_ptr	phreeqcpp/Use.h	/^	struct inverse *inverse_ptr;$/;"	m	class:cxxUse	typeref:struct:cxxUse::inverse
inverse_search	phreeqcpp/structures.cpp	/^inverse_search(int n_user, int *n)$/;"	f	class:Phreeqc
inverse_sort	phreeqcpp/structures.cpp	/^inverse_sort(void)$/;"	f	class:Phreeqc
io	phreeqcpp/common/PHRQ_base.h	/^	PHRQ_io * io;$/;"	m	class:PHRQ_base
ioInstance	phreeqcpp/Phreeqc.h	/^	PHRQ_io ioInstance;$/;"	m	class:Phreeqc
io_error_count	phreeqcpp/common/PHRQ_io.h	/^	int io_error_count;$/;"	m	class:PHRQ_io
ion_list	phreeqcpp/Phreeqc.h	/^	std::vector<int> s_list, cation_list, neutral_list, anion_list, ion_list, param_list;$/;"	m	class:Phreeqc
iopt	phreeqcpp/cvdense.cpp	/^#define iopt /;"	d	file:
iopt	phreeqcpp/cvode.cpp	/^#define iopt /;"	d	file:
ipow	phreeqcpp/PBasic.cpp	/^ipow(long a, long b)$/;"	f	class:PBasic
irrev	phreeqcpp/global_structures.h	/^	int irrev;$/;"	m	struct:prints
is	phreeqcpp/Phreeqc.h	/^	int *iu, *is, *back_eq;$/;"	m	class:Phreeqc
is_max	phreeqcpp/Phreeqc.h	/^		delta1_max, iu_max, is_max, back_eq_max;$/;"	m	class:Phreeqc
is_special	phreeqcpp/prep.cpp	/^is_special(struct species *l_spec)$/;"	f	class:Phreeqc
isalpha	phreeqcpp/common/Parser.h	/^#define isalpha(/;"	d
isamong	phreeqcpp/utilities.cpp	/^isamong(char c, const char *s_l)$/;"	f	class:Phreeqc
isdigit	phreeqcpp/common/Parser.h	/^#define isdigit(/;"	d
iseos	phreeqcpp/PBasic.cpp	/^iseos(struct LOC_exec *LINK)$/;"	f	class:PBasic
ishift	phreeqcpp/Phreeqc.h	/^	int ishift;$/;"	m	class:Phreeqc
islegit	phreeqcpp/utilities.cpp	/^islegit(const char c)$/;"	f	class:Phreeqc
islower	phreeqcpp/common/Parser.h	/^#define islower(/;"	d
iso	phreeqcpp/global_structures.h	/^	struct iso *iso;$/;"	m	struct:defaults	typeref:struct:defaults::iso
iso	phreeqcpp/global_structures.h	/^struct iso$/;"	s
iso_defaults	phreeqcpp/Phreeqc.cpp	/^const struct const_iso Phreeqc::iso_defaults[] = {$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::	file:
iso_defaults	phreeqcpp/Phreeqc.h	/^	static const struct const_iso iso_defaults[];$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::const_iso
iso_unit	phreeqcpp/basicsubs.cpp	/^iso_unit(const char *total_name)$/;"	f	class:Phreeqc
iso_value	phreeqcpp/basicsubs.cpp	/^iso_value(const char *total_name)$/;"	f	class:Phreeqc
isotope	phreeqcpp/global_structures.h	/^ 	int isotope;$/;"	m	struct:master
isotope	phreeqcpp/global_structures.h	/^ struct isotope$/;"	s
isotope_alpha	phreeqcpp/Phreeqc.h	/^	struct isotope_alpha **isotope_alpha;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::isotope_alpha
isotope_alpha	phreeqcpp/global_structures.h	/^struct isotope_alpha$/;"	s
isotope_alpha_alloc	phreeqcpp/isotopes.cpp	/^isotope_alpha_alloc(void)$/;"	f	class:Phreeqc
isotope_alpha_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *isotope_alpha_hash_table;$/;"	m	class:Phreeqc
isotope_alpha_init	phreeqcpp/isotopes.cpp	/^isotope_alpha_init(struct isotope_alpha *isotope_alpha_ptr)$/;"	f	class:Phreeqc
isotope_alpha_search	phreeqcpp/isotopes.cpp	/^isotope_alpha_search(const char *name)$/;"	f	class:Phreeqc
isotope_alpha_store	phreeqcpp/isotopes.cpp	/^isotope_alpha_store(const char *name, int replace_if_found)$/;"	f	class:Phreeqc
isotope_alphas	phreeqcpp/global_structures.h	/^	int isotope_alphas;$/;"	m	struct:prints
isotope_balance_equation	phreeqcpp/inverse.cpp	/^isotope_balance_equation(struct inverse *inv_ptr, int row, int n)$/;"	f	class:Phreeqc
isotope_compare	phreeqcpp/structures.cpp	/^isotope_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
isotope_name	phreeqcpp/SolutionIsotope.h	/^	std::string isotope_name;$/;"	m	class:cxxSolutionIsotope
isotope_name	phreeqcpp/global_structures.h	/^	const char *isotope_name;$/;"	m	struct:inv_isotope
isotope_name	phreeqcpp/global_structures.h	/^	const char *isotope_name;$/;"	m	struct:isotope_ratio
isotope_name	phreeqcpp/global_structures.h	/^ 	const char *isotope_name;$/;"	m	struct:isotope
isotope_number	phreeqcpp/SolutionIsotope.h	/^	LDBLE isotope_number;$/;"	m	class:cxxSolutionIsotope
isotope_number	phreeqcpp/global_structures.h	/^	LDBLE isotope_number;$/;"	m	struct:inv_isotope
isotope_number	phreeqcpp/global_structures.h	/^ 	LDBLE isotope_number;$/;"	m	struct:isotope
isotope_ratio	phreeqcpp/Phreeqc.h	/^	struct isotope_ratio **isotope_ratio;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::isotope_ratio
isotope_ratio	phreeqcpp/global_structures.h	/^ 	LDBLE isotope_ratio;$/;"	m	struct:master
isotope_ratio	phreeqcpp/global_structures.h	/^struct isotope_ratio$/;"	s
isotope_ratio_alloc	phreeqcpp/isotopes.cpp	/^isotope_ratio_alloc(void)$/;"	f	class:Phreeqc
isotope_ratio_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *isotope_ratio_hash_table;$/;"	m	class:Phreeqc
isotope_ratio_init	phreeqcpp/isotopes.cpp	/^isotope_ratio_init(struct isotope_ratio *isotope_ratio_ptr)$/;"	f	class:Phreeqc
isotope_ratio_search	phreeqcpp/isotopes.cpp	/^isotope_ratio_search(const char *name)$/;"	f	class:Phreeqc
isotope_ratio_store	phreeqcpp/isotopes.cpp	/^isotope_ratio_store(const char *name, int replace_if_found)$/;"	f	class:Phreeqc
isotope_ratio_uncertainty	phreeqcpp/global_structures.h	/^ 	LDBLE isotope_ratio_uncertainty;$/;"	m	struct:master
isotope_ratios	phreeqcpp/global_structures.h	/^	int isotope_ratios;$/;"	m	struct:prints
isotope_unknowns	phreeqcpp/global_structures.h	/^	struct isotope *isotope_unknowns;$/;"	m	struct:inverse	typeref:struct:inverse::isotope
isotopes	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > isotopes;$/;"	m	class:SelectedOutput
isotopes	phreeqcpp/Solution.h	/^	std::map < std::string, cxxSolutionIsotope > isotopes;$/;"	m	class:cxxSolution
isotopes	phreeqcpp/global_structures.h	/^	struct inv_isotope *isotopes;$/;"	m	struct:inverse	typeref:struct:inverse::inv_isotope
isotopes	phreeqcpp/global_structures.h	/^	struct isotope *isotopes;$/;"	m	struct:inv_phases	typeref:struct:inv_phases::isotope
isotopes	phreeqcpp/global_structures.h	/^	struct name_master *isotopes;$/;"	m	struct:punch	typeref:struct:punch::name_master
isotopes_x	phreeqcpp/Phreeqc.h	/^	std::map<std::string, cxxSolutionIsotope> isotopes_x;$/;"	m	class:Phreeqc
ispec	phreeqcpp/global_structures.h	/^	int ispec[3];$/;"	m	struct:pitz_param
isspace	phreeqcpp/common/Parser.h	/^#define isspace(/;"	d
istream_list	phreeqcpp/common/PHRQ_io.h	/^	std::list <std::istream *> istream_list;$/;"	m	class:PHRQ_io
isupper	phreeqcpp/common/Parser.h	/^#define isupper(/;"	d
iter	phreeqcpp/Phreeqc.h	/^	int klmd, nklmd, n2d, kode, iter;$/;"	m	class:Phreeqc
iter	phreeqcpp/cvode.cpp	/^#define iter /;"	d	file:
iteration	phreeqcpp/global_structures.h	/^	int iteration;$/;"	m	struct:unknown
iterations	phreeqcpp/Phreeqc.h	/^	int iterations;$/;"	m	class:Phreeqc
itmax	phreeqcpp/Phreeqc.h	/^	int itmax;$/;"	m	class:Phreeqc
itol	phreeqcpp/cvode.cpp	/^#define itol /;"	d	file:
iu	phreeqcpp/Phreeqc.h	/^	int *iu, *is, *back_eq;$/;"	m	class:Phreeqc
iu_max	phreeqcpp/Phreeqc.h	/^		delta1_max, iu_max, is_max, back_eq_max;$/;"	m	class:Phreeqc
jac	phreeqcpp/cvdense.cpp	/^#define jac /;"	d	file:
jacobian_pz	phreeqcpp/pitzer.cpp	/^jacobian_pz(void)$/;"	f	class:Phreeqc
jacobian_sit	phreeqcpp/sit.cpp	/^jacobian_sit(void)$/;"	f	class:Phreeqc
jacobian_sums	phreeqcpp/model.cpp	/^jacobian_sums(void)$/;"	f	class:Phreeqc
jcur	phreeqcpp/cvode.cpp	/^#define jcur /;"	d	file:
joules	phreeqcpp/global_structures.h	/^typedef enum { kcal, cal, kjoules, joules } DELTA_H_UNIT;$/;"	e	enum:__anon14
k_calc	phreeqcpp/prep.cpp	/^k_calc(LDBLE * l_logk, LDBLE tempk, LDBLE presPa)$/;"	f	class:Phreeqc
k_temp	phreeqcpp/prep.cpp	/^k_temp(LDBLE tc, LDBLE pa) \/* pa - pressure in atm *\/$/;"	f	class:Phreeqc
kappa_0	phreeqcpp/Phreeqc.h	/^	LDBLE V_solutes, rho_0, rho_0_sat, kappa_0, p_sat\/*, ah2o_x0*\/;$/;"	m	class:Phreeqc
kb	phreeqcpp/Phreeqc.h	/^	LDBLE a0, a1, kc, kb;$/;"	m	class:Phreeqc
kc	phreeqcpp/Phreeqc.h	/^	LDBLE a0, a1, kc, kb;$/;"	m	class:Phreeqc
kcal	phreeqcpp/global_structures.h	/^typedef enum { kcal, cal, kjoules, joules } DELTA_H_UNIT;$/;"	e	enum:__anon14
key	phreeqcpp/global_structures.h	/^	const char *key;$/;"	m	struct:entry
key	phreeqcpp/global_structures.h	/^ struct key$/;"	s
keycount	phreeqcpp/Phreeqc.h	/^	std::vector<int> keycount;  \/\/ used to mark keywords that have been read $/;"	m	class:Phreeqc
keycount	phreeqcpp/global_structures.h	/^ 	int keycount;$/;"	m	struct:const_key
keycount	phreeqcpp/global_structures.h	/^ 	int keycount;$/;"	m	struct:key
kin_time_x	phreeqcpp/Phreeqc.h	/^	LDBLE kin_time_x;$/;"	m	class:Phreeqc
kind	phreeqcpp/PBasic.h	/^	int kind;$/;"	m	struct:looprec
kind	phreeqcpp/PBasic.h	/^	int kind;$/;"	m	struct:tokenrec
kinetics	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > kinetics;$/;"	m	class:SelectedOutput
kinetics	phreeqcpp/StorageBinList.h	/^	StorageBinListItem kinetics;$/;"	m	class:StorageBinList
kinetics	phreeqcpp/System.h	/^	cxxKinetics * kinetics;$/;"	m	class:cxxSystem
kinetics	phreeqcpp/global_structures.h	/^	int kinetics;$/;"	m	struct:prints
kinetics	phreeqcpp/global_structures.h	/^	int kinetics;$/;"	m	struct:save
kinetics	phreeqcpp/global_structures.h	/^	struct kinetics *kinetics;$/;"	m	struct:model	typeref:struct:model::kinetics
kinetics	phreeqcpp/global_structures.h	/^	struct name_phase *kinetics;$/;"	m	struct:punch	typeref:struct:punch::name_phase
kinetics_abstol	phreeqcpp/Phreeqc.h	/^	N_Vector kinetics_y, kinetics_abstol;$/;"	m	class:Phreeqc
kinetics_comps	phreeqcpp/cxxKinetics.h	/^	std::vector < cxxKineticsComp > kinetics_comps;$/;"	m	class:cxxKinetics
kinetics_cvode_mem	phreeqcpp/Phreeqc.h	/^	void *kinetics_cvode_mem;$/;"	m	class:Phreeqc
kinetics_in	phreeqcpp/Use.h	/^	bool kinetics_in;$/;"	m	class:cxxUse
kinetics_machEnv	phreeqcpp/Phreeqc.h	/^	M_Env kinetics_machEnv;$/;"	m	class:Phreeqc
kinetics_moles	phreeqcpp/basicsubs.cpp	/^kinetics_moles(const char *kinetics_name)$/;"	f	class:Phreeqc
kinetics_moles_delta	phreeqcpp/basicsubs.cpp	/^kinetics_moles_delta(const char *kinetics_name)$/;"	f	class:Phreeqc
kinetics_ptr	phreeqcpp/Use.h	/^	cxxKinetics *kinetics_ptr;$/;"	m	class:cxxUse
kinetics_y	phreeqcpp/Phreeqc.h	/^	N_Vector kinetics_y, kinetics_abstol;$/;"	m	class:Phreeqc
kjoules	phreeqcpp/global_structures.h	/^typedef enum { kcal, cal, kjoules, joules } DELTA_H_UNIT;$/;"	e	enum:__anon14
klmd	phreeqcpp/Phreeqc.h	/^	int klmd, nklmd, n2d, kode, iter;$/;"	m	class:Phreeqc
kode	phreeqcpp/Phreeqc.h	/^	int klmd, nklmd, n2d, kode, iter;$/;"	m	class:Phreeqc
l	phreeqcpp/cvode.cpp	/^#define l /;"	d	file:
lVal	Var.h	/^		long    lVal;      \/*!< valid when <code>(type == TT_LONG)<\/code>   *\/$/;"	m	union:__anon31::__anon32
la	phreeqcpp/ExchComp.h	/^	LDBLE la;$/;"	m	class:cxxExchComp
la	phreeqcpp/SurfaceComp.h	/^	LDBLE la;$/;"	m	class:cxxSurfaceComp
la	phreeqcpp/global_structures.h	/^	LDBLE la;					\/* log10 activity *\/$/;"	m	struct:species
la	phreeqcpp/global_structures.h	/^	LDBLE la;$/;"	m	struct:unknown
la_psi	phreeqcpp/SurfaceCharge.h	/^	LDBLE la_psi;$/;"	m	class:cxxSurfaceCharge
lamda	phreeqcpp/global_structures.h	/^		LDBLE lamda;$/;"	m	union:pitz_param::__anon21
last_model	phreeqcpp/Phreeqc.h	/^	struct model last_model;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::model
last_model	phreeqcpp/global_structures.h	/^ 	int last_model;				\/* saved to determine if model has changed *\/$/;"	m	struct:master
last_patm_x	phreeqcpp/Phreeqc.h	/^	LDBLE last_patm_x;$/;"	m	class:Phreeqc
leaf	phreeqcpp/global_structures.h	/^{ preorder, postorder, endorder, leaf } VISIT;$/;"	e	enum:__anon18
length	phreeqcpp/global_structures.h	/^	LDBLE length;$/;"	m	struct:cell_data
length	phreeqcpp/nvector_serial.h	/^		integertype length;$/;"	m	struct:_M_EnvSerialContent
length	phreeqcpp/nvector_serial.h	/^		integertype length;$/;"	m	struct:_N_VectorSerialContent
lfree	phreeqcpp/cvdense.cpp	/^#define lfree /;"	d	file:
lfree	phreeqcpp/cvode.cpp	/^#define lfree /;"	d	file:
lg	phreeqcpp/global_structures.h	/^	LDBLE lg;					\/* log(gamma) *\/$/;"	m	struct:spec
lg	phreeqcpp/global_structures.h	/^	LDBLE lg;					\/* log10 activity coefficient, gamma *\/$/;"	m	struct:species
lg_pitzer	phreeqcpp/global_structures.h	/^	LDBLE lg_pitzer;			\/* log10 activity coefficient, from pitzer calculation *\/$/;"	m	struct:species
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = libiphreeqc.la$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libiphreeqc_la_LIBADD	Makefile	/^libiphreeqc_la_LIBADD =$/;"	m
libiphreeqc_la_OBJECTS	Makefile	/^libiphreeqc_la_OBJECTS = $(am_libiphreeqc_la_OBJECTS)$/;"	m
libiphreeqc_la_SOURCES	Makefile	/^libiphreeqc_la_SOURCES = CSelectedOutput.cpp CSelectedOutput.hxx \\$/;"	m
limit_rates	phreeqcpp/kinetics.cpp	/^limit_rates(cxxKinetics *kinetics_ptr)$/;"	f	class:Phreeqc
line	phreeqcpp/Phreeqc.h	/^	char *line;$/;"	m	class:Phreeqc
line	phreeqcpp/common/Parser.h	/^	std::string & line()$/;"	f	class:CParser
line_save	phreeqcpp/Phreeqc.h	/^	char *line_save;$/;"	m	class:Phreeqc
line_save	phreeqcpp/common/Parser.h	/^	std::string & line_save()$/;"	f	class:CParser
line_w	phreeqcpp/CurveObject.h	/^	LDBLE line_w, symbol_size;$/;"	m	class:CurveObject
linebase	phreeqcpp/PBasic.h	/^	linerec *linebase;$/;"	m	class:PBasic
linebase	phreeqcpp/global_structures.h	/^	void *linebase;$/;"	m	struct:calculate_value
linebase	phreeqcpp/global_structures.h	/^	void *linebase;$/;"	m	struct:rate
linerec	phreeqcpp/PBasic.h	/^typedef struct linerec$/;"	s
linerec	phreeqcpp/PBasic.h	/^} linerec;$/;"	t	typeref:struct:linerec
linit	phreeqcpp/cvdense.cpp	/^#define linit /;"	d	file:
linit	phreeqcpp/cvode.cpp	/^#define linit /;"	d	file:
list	phreeqcpp/Form1.h	/^	private: PointPairList ^list;$/;"	m	class:zdg_ui2::Form1
list0	phreeqcpp/global_structures.h	/^struct list0$/;"	s
list1	phreeqcpp/global_structures.h	/^struct list1$/;"	s
list2	phreeqcpp/global_structures.h	/^struct list2$/;"	s
list_components	phreeqcpp/Phreeqc.cpp	/^size_t Phreeqc::list_components(std::list<std::string> &list_c)$/;"	f	class:Phreeqc
list_ss	phreeqcpp/basicsubs.cpp	/^list_ss(std::string ss_name, cxxNameDouble &composition)$/;"	f	class:Phreeqc
listtokens	phreeqcpp/PBasic.cpp	/^listtokens(FILE * f, tokenrec * l_buf)$/;"	f	class:PBasic
liw	phreeqcpp/cvode.cpp	/^#define liw /;"	d	file:
lk	phreeqcpp/global_structures.h	/^	LDBLE lk;					\/* log10 k at working temperature *\/$/;"	m	struct:logk
lk	phreeqcpp/global_structures.h	/^	LDBLE lk;					\/* log10 k at working temperature *\/$/;"	m	struct:phase
lk	phreeqcpp/global_structures.h	/^	LDBLE lk;					\/* log10 k at working temperature *\/$/;"	m	struct:species
llnl_adh	phreeqcpp/Phreeqc.h	/^	LDBLE *llnl_temp, *llnl_adh, *llnl_bdh, *llnl_bdot, *llnl_co2_coefs;$/;"	m	class:Phreeqc
llnl_bdh	phreeqcpp/Phreeqc.h	/^	LDBLE *llnl_temp, *llnl_adh, *llnl_bdh, *llnl_bdot, *llnl_co2_coefs;$/;"	m	class:Phreeqc
llnl_bdot	phreeqcpp/Phreeqc.h	/^	LDBLE *llnl_temp, *llnl_adh, *llnl_bdh, *llnl_bdot, *llnl_co2_coefs;$/;"	m	class:Phreeqc
llnl_co2_coefs	phreeqcpp/Phreeqc.h	/^	LDBLE *llnl_temp, *llnl_adh, *llnl_bdh, *llnl_bdot, *llnl_co2_coefs;$/;"	m	class:Phreeqc
llnl_count_adh	phreeqcpp/Phreeqc.h	/^	int llnl_count_temp, llnl_count_adh, llnl_count_bdh, llnl_count_bdot,$/;"	m	class:Phreeqc
llnl_count_bdh	phreeqcpp/Phreeqc.h	/^	int llnl_count_temp, llnl_count_adh, llnl_count_bdh, llnl_count_bdot,$/;"	m	class:Phreeqc
llnl_count_bdot	phreeqcpp/Phreeqc.h	/^	int llnl_count_temp, llnl_count_adh, llnl_count_bdh, llnl_count_bdot,$/;"	m	class:Phreeqc
llnl_count_co2_coefs	phreeqcpp/Phreeqc.h	/^		llnl_count_co2_coefs;$/;"	m	class:Phreeqc
llnl_count_temp	phreeqcpp/Phreeqc.h	/^	int llnl_count_temp, llnl_count_adh, llnl_count_bdh, llnl_count_bdot,$/;"	m	class:Phreeqc
llnl_temp	phreeqcpp/Phreeqc.h	/^	LDBLE *llnl_temp, *llnl_adh, *llnl_bdh, *llnl_bdot, *llnl_co2_coefs;$/;"	m	class:Phreeqc
lm	phreeqcpp/global_structures.h	/^	LDBLE lm;					\/* log(concentration) *\/$/;"	m	struct:spec
lm	phreeqcpp/global_structures.h	/^	LDBLE lm;					\/* log10 molality *\/$/;"	m	struct:species
lmem	phreeqcpp/cvdense.cpp	/^#define lmem /;"	d	file:
lmem	phreeqcpp/cvode.cpp	/^#define lmem /;"	d	file:
lmm	phreeqcpp/cvdense.cpp	/^#define lmm /;"	d	file:
lmm	phreeqcpp/cvode.cpp	/^#define lmm /;"	d	file:
ln_coef	phreeqcpp/global_structures.h	/^	LDBLE ln_coef[3];$/;"	m	struct:pitz_param
ln_moles	phreeqcpp/global_structures.h	/^	LDBLE ln_moles;$/;"	m	struct:unknown
load_db	IPhreeqc.cpp	/^int IPhreeqc::load_db(const char* filename)$/;"	f	class:IPhreeqc
load_db_str	IPhreeqc.cpp	/^int IPhreeqc::load_db_str(const char* input)$/;"	f	class:IPhreeqc
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
log10_fraction_x	phreeqcpp/SScomp.h	/^	LDBLE log10_fraction_x;$/;"	m	class:cxxSScomp
log10_fraction_x	phreeqcpp/global_structures.h	/^	LDBLE log10_lambda, log10_fraction_x;$/;"	m	struct:phase
log10_lambda	phreeqcpp/SScomp.h	/^	LDBLE log10_lambda;$/;"	m	class:cxxSScomp
log10_lambda	phreeqcpp/global_structures.h	/^	LDBLE log10_lambda, log10_fraction_x;$/;"	m	struct:phase
logK_T0	phreeqcpp/global_structures.h	/^	logK_T0,$/;"	e	enum:__anon16
log_activity	phreeqcpp/basicsubs.cpp	/^log_activity(const char *species_name)$/;"	f	class:Phreeqc
log_activity_coefficient	phreeqcpp/basicsubs.cpp	/^log_activity_coefficient(const char *species_name)$/;"	f	class:Phreeqc
log_close	phreeqcpp/PHRQ_io_output.cpp	/^log_close(void)$/;"	f	class:Phreeqc
log_close	phreeqcpp/common/PHRQ_io.cpp	/^log_close(void)$/;"	f	class:PHRQ_io
log_flush	phreeqcpp/PHRQ_io_output.cpp	/^log_flush(void)$/;"	f	class:Phreeqc
log_flush	phreeqcpp/common/PHRQ_io.cpp	/^log_flush(void)$/;"	f	class:PHRQ_io
log_gamma_map	phreeqcpp/Solution.h	/^	std::map<int, double> log_gamma_map;$/;"	m	class:cxxSolution
log_k	phreeqcpp/global_structures.h	/^	LDBLE log_k[MAX_LOG_K_INDICES];				\/* log kt0, delh, 6 coefficients analalytical expression *\/$/;"	m	struct:logk
log_k_original	phreeqcpp/global_structures.h	/^	LDBLE log_k_original[MAX_LOG_K_INDICES];	\/* log kt0, delh, 5 coefficients analalytical expression *\/$/;"	m	struct:logk
log_molality	phreeqcpp/basicsubs.cpp	/^log_molality(const char *species_name)$/;"	f	class:Phreeqc
log_msg	IPhreeqc.cpp	/^void IPhreeqc::log_msg(const char * str)$/;"	f	class:IPhreeqc
log_msg	phreeqcpp/PHRQ_io_output.cpp	/^log_msg(const char * str)$/;"	f	class:Phreeqc
log_msg	phreeqcpp/common/PHRQ_io.cpp	/^log_msg(const char * str)$/;"	f	class:PHRQ_io
log_on	phreeqcpp/common/PHRQ_io.h	/^	bool log_on;$/;"	m	class:PHRQ_io
log_open	phreeqcpp/PHRQ_io_output.cpp	/^log_open(const char *file_name)$/;"	f	class:Phreeqc
log_open	phreeqcpp/common/PHRQ_io.cpp	/^log_open(const char *file_name, std::ios_base::openmode mode)$/;"	f	class:PHRQ_io
log_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *log_ostream;		$/;"	m	class:PHRQ_io
logfile	phreeqcpp/global_structures.h	/^	int logfile;$/;"	m	struct:prints
logk	phreeqcpp/Phreeqc.h	/^	struct logk **logk;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::logk
logk	phreeqcpp/global_structures.h	/^	LDBLE logk[MAX_LOG_K_INDICES];				\/* log kt0, delh, 6 coefficients analalytical expression *\/$/;"	m	struct:phase
logk	phreeqcpp/global_structures.h	/^	LDBLE logk[MAX_LOG_K_INDICES];				\/* log kt0, delh, 6 coefficients analytical expression + volume terms *\/$/;"	m	struct:species
logk	phreeqcpp/global_structures.h	/^	LDBLE logk[MAX_LOG_K_INDICES];$/;"	m	class:cxxChemRxn
logk	phreeqcpp/global_structures.h	/^	LDBLE logk[MAX_LOG_K_INDICES];$/;"	m	struct:reaction
logk	phreeqcpp/global_structures.h	/^	LDBLE logk[MAX_LOG_K_INDICES];$/;"	m	struct:reaction_temp
logk	phreeqcpp/global_structures.h	/^struct logk$/;"	s
logk_alloc	phreeqcpp/structures.cpp	/^logk_alloc(void)$/;"	f	class:Phreeqc
logk_copy2orig	phreeqcpp/structures.cpp	/^logk_copy2orig(struct logk *logk_ptr)$/;"	f	class:Phreeqc
logk_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *logk_hash_table;$/;"	m	class:Phreeqc
logk_init	phreeqcpp/structures.cpp	/^logk_init(struct logk *logk_ptr)$/;"	f	class:Phreeqc
logk_search	phreeqcpp/structures.cpp	/^logk_search(const char *name_in)$/;"	f	class:Phreeqc
logk_store	phreeqcpp/structures.cpp	/^logk_store(char *name, int replace_if_found)$/;"	f	class:Phreeqc
loop	phreeqcpp/cvode.cpp	/^#define loop /;"	d	file:
loopbase	phreeqcpp/PBasic.h	/^	looprec *loopbase;$/;"	m	class:PBasic
loopbase	phreeqcpp/global_structures.h	/^	void *loopbase;$/;"	m	struct:calculate_value
loopbase	phreeqcpp/global_structures.h	/^	void *loopbase;$/;"	m	struct:rate
looprec	phreeqcpp/PBasic.h	/^typedef struct looprec$/;"	s
looprec	phreeqcpp/PBasic.h	/^} looprec;$/;"	t	typeref:struct:looprec
lrw	phreeqcpp/cvode.cpp	/^#define lrw /;"	d	file:
lsetup	phreeqcpp/cvdense.cpp	/^#define lsetup /;"	d	file:
lsetup	phreeqcpp/cvode.cpp	/^#define lsetup /;"	d	file:
lsolve	phreeqcpp/cvdense.cpp	/^#define lsolve /;"	d	file:
lsolve	phreeqcpp/cvode.cpp	/^#define lsolve /;"	d	file:
m	phreeqcpp/KineticsComp.h	/^	  LDBLE m;$/;"	m	class:cxxKineticsComp
m0	phreeqcpp/KineticsComp.h	/^	  LDBLE m0;$/;"	m	class:cxxKineticsComp
m3_per_mol	phreeqcpp/global_structures.h	/^typedef enum { cm3_per_mol, dm3_per_mol, m3_per_mol } DELTA_V_UNIT;$/;"	e	enum:__anon15
m_arrayVar	CSelectedOutput.hxx	/^	std::vector< std::vector<CVar> > m_arrayVar;$/;"	m	class:CSelectedOutput
m_error_count	ErrorReporter.hxx	/^	size_t m_error_count;$/;"	m	class:CErrorReporter
m_input_error	phreeqcpp/common/Parser.h	/^	int m_input_error;$/;"	m	class:CParser
m_input_stream	phreeqcpp/common/Parser.h	/^	std::istream & m_input_stream;$/;"	m	class:CParser
m_line	phreeqcpp/common/PHRQ_io.h	/^	std::string m_line;$/;"	m	class:PHRQ_io
m_line	phreeqcpp/common/Parser.h	/^	std::string m_line;$/;"	m	class:CParser
m_line_iss	phreeqcpp/common/Parser.h	/^	std::istringstream m_line_iss;$/;"	m	class:CParser
m_line_save	phreeqcpp/common/PHRQ_io.h	/^	std::string m_line_save;$/;"	m	class:PHRQ_io
m_line_save	phreeqcpp/common/Parser.h	/^	std::string m_line_save;$/;"	m	class:CParser
m_line_type	phreeqcpp/common/PHRQ_io.h	/^	LINE_TYPE m_line_type;$/;"	m	class:PHRQ_io
m_line_type	phreeqcpp/common/Parser.h	/^	PHRQ_io::LINE_TYPE m_line_type;$/;"	m	class:CParser
m_mapHeadingToCol	CSelectedOutput.hxx	/^	std::map< std::string, size_t > m_mapHeadingToCol;$/;"	m	class:CSelectedOutput
m_nRowCount	CSelectedOutput.hxx	/^	size_t m_nRowCount;$/;"	m	class:CSelectedOutput
m_next_keyword	phreeqcpp/common/PHRQ_io.h	/^	Keywords::KEYWORDS m_next_keyword;$/;"	m	class:PHRQ_io
m_next_keyword	phreeqcpp/common/Parser.h	/^	Keywords::KEYWORDS m_next_keyword;$/;"	m	class:CParser
m_original	phreeqcpp/Phreeqc.h	/^	LDBLE *m_original;$/;"	m	class:Phreeqc
m_pOS	ErrorReporter.hxx	/^	OS* m_pOS;$/;"	m	class:CErrorReporter
m_s	phreeqcpp/Phreeqc.h	/^	struct M_S *m_s;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::M_S
m_temp	phreeqcpp/Phreeqc.h	/^	LDBLE *m_temp;$/;"	m	class:Phreeqc
m_vecVarHeadings	CSelectedOutput.hxx	/^	std::vector<CVar> m_vecVarHeadings;$/;"	m	class:CSelectedOutput
machenv	phreeqcpp/cvdense.cpp	/^#define machenv /;"	d	file:
machenv	phreeqcpp/cvode.cpp	/^#define machenv /;"	d	file:
malloc	phreeqcpp/cvdense.cpp	/^#define malloc /;"	d	file:
malloc	phreeqcpp/cvode.cpp	/^#define malloc /;"	d	file:
malloc_error	phreeqcpp/utilities.cpp	/^malloc_error(void)$/;"	f	class:Phreeqc
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map_lock	thread.h	/^	mutex_t map_lock = MUTEX_INITIALIZER;$/;"	v
mass_hydrogen_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *mass_hydrogen_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
mass_oxygen_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *mass_oxygen_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
mass_water	phreeqcpp/Solution.h	/^	LDBLE mass_water;$/;"	m	class:cxxSolution
mass_water	phreeqcpp/SurfaceCharge.h	/^	LDBLE mass_water;$/;"	m	class:cxxSurfaceCharge
mass_water	phreeqcpp/global_structures.h	/^	LDBLE mass_water;$/;"	m	struct:unknown
mass_water_aq_x	phreeqcpp/Phreeqc.h	/^	LDBLE mass_water_aq_x;$/;"	m	class:Phreeqc
mass_water_bulk_x	phreeqcpp/Phreeqc.h	/^	LDBLE mass_water_bulk_x;$/;"	m	class:Phreeqc
mass_water_surfaces_x	phreeqcpp/Phreeqc.h	/^	LDBLE mass_water_surfaces_x;$/;"	m	class:Phreeqc
mass_water_switch	phreeqcpp/Phreeqc.h	/^	int mass_water_switch;$/;"	m	class:Phreeqc
master	phreeqcpp/Phreeqc.h	/^	struct master **master;	\/* structure array of master species *\/$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::master
master	phreeqcpp/global_structures.h	/^	struct master **master;$/;"	m	struct:unknown	typeref:struct:unknown::master
master	phreeqcpp/global_structures.h	/^	struct master *master;$/;"	m	struct:element	typeref:struct:element::master
master	phreeqcpp/global_structures.h	/^	struct master *master;$/;"	m	struct:inv_elts	typeref:struct:inv_elts::master
master	phreeqcpp/global_structures.h	/^	struct master *master;$/;"	m	struct:master_isotope	typeref:struct:master_isotope::master
master	phreeqcpp/global_structures.h	/^	struct master *master;$/;"	m	struct:name_master	typeref:struct:name_master::master
master	phreeqcpp/global_structures.h	/^	struct master *master;$/;"	m	struct:tally_buffer	typeref:struct:tally_buffer::master
master	phreeqcpp/global_structures.h	/^ 	struct master *master;$/;"	m	struct:isotope	typeref:struct:isotope::master
master	phreeqcpp/global_structures.h	/^ struct master$/;"	s
master_activity	phreeqcpp/Solution.h	/^	cxxNameDouble master_activity;$/;"	m	class:cxxSolution
master_alk	phreeqcpp/Phreeqc.h	/^	struct master *master_alk;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::master
master_alloc	phreeqcpp/structures.cpp	/^master_alloc(void)$/;"	f	class:Phreeqc
master_bsearch	phreeqcpp/structures.cpp	/^master_bsearch(const char *ptr)$/;"	f	class:Phreeqc
master_bsearch_primary	phreeqcpp/structures.cpp	/^master_bsearch_primary(const char *ptr)$/;"	f	class:Phreeqc
master_bsearch_secondary	phreeqcpp/structures.cpp	/^master_bsearch_secondary(char *ptr)$/;"	f	class:Phreeqc
master_compare	phreeqcpp/structures.cpp	/^master_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
master_compare_string	phreeqcpp/structures.cpp	/^master_compare_string(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
master_delete	phreeqcpp/structures.cpp	/^master_delete(char *ptr)$/;"	f	class:Phreeqc
master_element	phreeqcpp/SurfaceComp.h	/^	std::string master_element;$/;"	m	class:cxxSurfaceComp
master_free	phreeqcpp/structures.cpp	/^master_free(struct master *master_ptr)$/;"	f	class:Phreeqc
master_isotope	phreeqcpp/Phreeqc.h	/^	struct master_isotope **master_isotope;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::master_isotope
master_isotope	phreeqcpp/global_structures.h	/^struct master_isotope$/;"	s
master_isotope_alloc	phreeqcpp/isotopes.cpp	/^master_isotope_alloc(void)$/;"	f	class:Phreeqc
master_isotope_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *master_isotope_hash_table;$/;"	m	class:Phreeqc
master_isotope_init	phreeqcpp/isotopes.cpp	/^master_isotope_init(struct master_isotope *master_isotope_ptr)$/;"	f	class:Phreeqc
master_isotope_search	phreeqcpp/isotopes.cpp	/^master_isotope_search(const char *name)$/;"	f	class:Phreeqc
master_isotope_store	phreeqcpp/isotopes.cpp	/^master_isotope_store(const char *name, int replace_if_found)$/;"	f	class:Phreeqc
master_list	phreeqcpp/global_structures.h	/^	struct master **master_list;$/;"	m	struct:inverse	typeref:struct:inverse::master
master_s	phreeqcpp/global_structures.h	/^	struct species *master_s;$/;"	m	struct:species_list	typeref:struct:species_list::species
master_search	phreeqcpp/structures.cpp	/^master_search(char *ptr, int *n)$/;"	f	class:Phreeqc
master_to_tally_table	phreeqcpp/tally.cpp	/^master_to_tally_table(struct tally_buffer *buffer_ptr)$/;"	f	class:Phreeqc
match_elts_in_species	phreeqcpp/basicsubs.cpp	/^match_elts_in_species(const char *name, const char *mytemplate)$/;"	f	class:Phreeqc
max	phreeqcpp/PBasic.h	/^			LDBLE max, step;$/;"	m	struct:looprec::__anon27::__anon28
max	phreeqcpp/global_structures.h	/^	int max;$/;"	m	struct:copier
max_bad	phreeqcpp/Phreeqc.h	/^	int max_good, max_bad, max_minimal;$/;"	m	class:Phreeqc
max_calculate_value	phreeqcpp/Phreeqc.h	/^	int max_calculate_value;$/;"	m	class:Phreeqc
max_cells	phreeqcpp/Phreeqc.h	/^	int old_cells, max_cells, all_cells;$/;"	m	class:Phreeqc
max_column_count	phreeqcpp/Phreeqc.h	/^	int max_row_count, max_column_count;$/;"	m	class:Phreeqc
max_delta	phreeqcpp/Phreeqc.h	/^	LDBLE *min_delta, *max_delta;$/;"	m	class:Phreeqc
max_elements	phreeqcpp/Phreeqc.h	/^	int max_elements;$/;"	m	class:Phreeqc
max_elts	phreeqcpp/Phreeqc.h	/^	int max_elts;$/;"	m	class:Phreeqc
max_good	phreeqcpp/Phreeqc.h	/^	int max_good, max_bad, max_minimal;$/;"	m	class:Phreeqc
max_isotope_alpha	phreeqcpp/Phreeqc.h	/^	int max_isotope_alpha;$/;"	m	class:Phreeqc
max_isotope_ratio	phreeqcpp/Phreeqc.h	/^	int max_isotope_ratio;$/;"	m	class:Phreeqc
max_line	phreeqcpp/Phreeqc.h	/^	int max_line;$/;"	m	class:Phreeqc
max_logk	phreeqcpp/Phreeqc.h	/^	int max_logk;$/;"	m	class:Phreeqc
max_master	phreeqcpp/Phreeqc.h	/^	int max_master;$/;"	m	class:Phreeqc
max_master_isotope	phreeqcpp/Phreeqc.h	/^	int max_master_isotope;$/;"	m	class:Phreeqc
max_mb_unknowns	phreeqcpp/Phreeqc.h	/^	int max_mb_unknowns;$/;"	m	class:Phreeqc
max_minimal	phreeqcpp/Phreeqc.h	/^	int max_good, max_bad, max_minimal;$/;"	m	class:Phreeqc
max_pct	phreeqcpp/Phreeqc.h	/^	LDBLE toler, error, max_pct, scaled_error;$/;"	m	class:Phreeqc
max_phases	phreeqcpp/Phreeqc.h	/^	int max_phases;$/;"	m	class:Phreeqc
max_pitz_param	phreeqcpp/Phreeqc.h	/^	int count_pitz_param, max_pitz_param;$/;"	m	class:Phreeqc
max_position	phreeqcpp/Phreeqc.h	/^	int min_position[32], max_position[32], now[32];$/;"	m	class:Phreeqc
max_row_count	phreeqcpp/Phreeqc.h	/^	int max_row_count, max_column_count;$/;"	m	class:Phreeqc
max_s	phreeqcpp/Phreeqc.h	/^	int max_s;$/;"	m	class:Phreeqc
max_s_x	phreeqcpp/Phreeqc.h	/^	int max_s_x;$/;"	m	class:Phreeqc
max_sit_param	phreeqcpp/Phreeqc.h	/^	int count_sit_param, max_sit_param;$/;"	m	class:Phreeqc
max_species_list	phreeqcpp/Phreeqc.h	/^	int max_species_list;$/;"	m	class:Phreeqc
max_strings	phreeqcpp/Phreeqc.h	/^	int max_strings;$/;"	m	class:Phreeqc
max_sum_delta	phreeqcpp/Phreeqc.h	/^	int max_sum_delta;		\/* calculated maximum number of elements in sum_delta *\/$/;"	m	class:Phreeqc
max_sum_jacob0	phreeqcpp/Phreeqc.h	/^	int max_sum_jacob0;	\/* calculated maximum number of elements in sum_jacob0 *\/$/;"	m	class:Phreeqc
max_sum_jacob1	phreeqcpp/Phreeqc.h	/^	int max_sum_jacob1;	\/* calculated maximum number of elements in sum_jacob1 *\/$/;"	m	class:Phreeqc
max_sum_jacob2	phreeqcpp/Phreeqc.h	/^	int max_sum_jacob2;	\/* calculated maximum number of elements in sum_jacob2 *\/$/;"	m	class:Phreeqc
max_sum_mb1	phreeqcpp/Phreeqc.h	/^	int max_sum_mb1;		\/* calculated maximum number of elements in sum_mb1 *\/$/;"	m	class:Phreeqc
max_sum_mb2	phreeqcpp/Phreeqc.h	/^	int max_sum_mb2;		\/* calculated maximum number of elements in sum_mb2 *\/$/;"	m	class:Phreeqc
max_sys	phreeqcpp/Phreeqc.h	/^	int count_sys, max_sys;$/;"	m	class:Phreeqc
max_theta_param	phreeqcpp/Phreeqc.h	/^	int count_theta_param, max_theta_param;$/;"	m	class:Phreeqc
max_tries	phreeqcpp/Phreeqc.h	/^	int max_tries;$/;"	m	class:Phreeqc
max_trxn	phreeqcpp/Phreeqc.h	/^	int max_trxn;$/;"	m	class:Phreeqc
max_unknowns	phreeqcpp/Phreeqc.h	/^	int max_unknowns;$/;"	m	class:Phreeqc
maxavail	phreeqcpp/PBasic.cpp	/^maxavail(void)$/;"	f	class:PBasic
maxcor	phreeqcpp/cvode.cpp	/^#define maxcor /;"	d	file:
maxdims	phreeqcpp/PBasic.h	/^#define maxdims	/;"	d
maxp	phreeqcpp/global_structures.h	/^	short maxp;					\/* upper bound on p during expansion *\/$/;"	m	struct:__anon19
mb_for_species_aq	phreeqcpp/prep.cpp	/^mb_for_species_aq(int n)$/;"	f	class:Phreeqc
mb_for_species_ex	phreeqcpp/prep.cpp	/^mb_for_species_ex(int n)$/;"	f	class:Phreeqc
mb_for_species_surf	phreeqcpp/prep.cpp	/^mb_for_species_surf(int n)$/;"	f	class:Phreeqc
mb_gases	phreeqcpp/model.cpp	/^mb_gases(void)$/;"	f	class:Phreeqc
mb_number	phreeqcpp/global_structures.h	/^	int mb_number;$/;"	m	struct:unknown
mb_ss	phreeqcpp/model.cpp	/^mb_ss(void)$/;"	f	class:Phreeqc
mb_sums	phreeqcpp/model.cpp	/^mb_sums(void)$/;"	f	class:Phreeqc
mb_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *mb_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
mb_unknowns	phreeqcpp/Phreeqc.h	/^	struct unknown_list *mb_unknowns;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown_list
mcb0	phreeqcpp/Phreeqc.h	/^	struct pitz_param *mcb0, *mcb1, *mcc0;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::pitz_param
mcb1	phreeqcpp/Phreeqc.h	/^	struct pitz_param *mcb0, *mcb1, *mcc0;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::
mcc0	phreeqcpp/Phreeqc.h	/^	struct pitz_param *mcb0, *mcb1, *mcc0;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::
mcd_substeps	phreeqcpp/Phreeqc.h	/^	LDBLE mcd_substeps;$/;"	m	class:Phreeqc
memavail	phreeqcpp/PBasic.cpp	/^memavail(void)$/;"	f	class:PBasic
menv	phreeqcpp/nvector.h	/^		struct _generic_M_Env *menv;$/;"	m	struct:_generic_N_Vector	typeref:struct:_generic_N_Vector::_generic_M_Env
merge_redox	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::merge_redox(const cxxNameDouble & source)$/;"	f	class:cxxNameDouble
mid_cell_x	phreeqcpp/global_structures.h	/^	LDBLE mid_cell_x;$/;"	m	struct:cell_data
midpnt	phreeqcpp/integrate.cpp	/^midpnt(LDBLE x1, LDBLE x2, int n)$/;"	f	class:Phreeqc
midpoint_sv	phreeqcpp/Phreeqc.h	/^	LDBLE midpoint_sv;$/;"	m	class:Phreeqc
millero	phreeqcpp/global_structures.h	/^	LDBLE millero[7];		    \/* regression coefficients to calculate temperature dependent phi_0 and b_v of Millero density model *\/$/;"	m	struct:species
min_delta	phreeqcpp/Phreeqc.h	/^	LDBLE *min_delta, *max_delta;$/;"	m	class:Phreeqc
min_position	phreeqcpp/Phreeqc.h	/^	int min_position[32], max_position[32], now[32];$/;"	m	class:Phreeqc
min_value	phreeqcpp/Phreeqc.h	/^	LDBLE min_value;$/;"	m	class:Phreeqc
mineral_water	phreeqcpp/global_structures.h	/^	int mineral_water;$/;"	m	struct:inverse
minimal	phreeqcpp/Phreeqc.h	/^	unsigned long *good, *bad, *minimal;$/;"	m	class:Phreeqc
minimal	phreeqcpp/global_structures.h	/^	int minimal;$/;"	m	struct:inverse
minimal_solve	phreeqcpp/inverse.cpp	/^minimal_solve(struct inverse *inv_ptr, unsigned long minimal_bits)$/;"	f	class:Phreeqc
minor_isotope	phreeqcpp/global_structures.h	/^	int minor_isotope;$/;"	m	struct:master_isotope
minor_isotope	phreeqcpp/global_structures.h	/^ 	int minor_isotope;$/;"	m	struct:master
miscibility	phreeqcpp/SS.h	/^	bool miscibility;$/;"	m	class:cxxSS
mix	phreeqcpp/StorageBinList.h	/^	StorageBinListItem mix;$/;"	m	class:StorageBinList
mix	phreeqcpp/System.h	/^	cxxMix * mix;$/;"	m	class:cxxSystem
mix	phreeqcpp/global_structures.h	/^	int mix;$/;"	m	struct:prints
mix	phreeqcpp/global_structures.h	/^	int mix;$/;"	m	struct:save
mixComps	phreeqcpp/cxxMix.h	/^	std::map < int, LDBLE >mixComps;$/;"	m	class:cxxMix
mix_cxxExchange	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::mix_cxxExchange(cxxMix & mixmap)$/;"	f	class:cxxStorageBin
mix_cxxSolutions	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::mix_cxxSolutions(cxxMix & mixmap)$/;"	f	class:cxxStorageBin
mix_in	phreeqcpp/Use.h	/^	bool mix_in;$/;"	m	class:cxxUse
mix_ptr	phreeqcpp/Use.h	/^	cxxMix * mix_ptr;$/;"	m	class:cxxUse
mix_stag	phreeqcpp/transport.cpp	/^mix_stag(int i, LDBLE kin_time, int l_punch, LDBLE step_fraction)$/;"	f	class:Phreeqc
mixrun	phreeqcpp/Phreeqc.h	/^	int cell_no, mixrun;$/;"	m	class:Phreeqc
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mnewt	phreeqcpp/cvode.cpp	/^#define mnewt /;"	d	file:
mobile_surface_copy	phreeqcpp/transport.cpp	/^mobile_surface_copy(cxxSurface *surface_old_ptr,$/;"	f	class:Phreeqc
model	phreeqcpp/global_structures.h	/^struct model$/;"	s
model	phreeqcpp/model.cpp	/^model(void)$/;"	f	class:Phreeqc
model_pz	phreeqcpp/pitzer.cpp	/^model_pz(void)$/;"	f	class:Phreeqc
model_sit	phreeqcpp/sit.cpp	/^model_sit(void)$/;"	f	class:Phreeqc
molalities	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > molalities;$/;"	m	class:SelectedOutput
molalities	phreeqcpp/global_structures.h	/^	struct name_species *molalities;$/;"	m	struct:punch	typeref:struct:punch::name_species
molalities	phreeqcpp/model.cpp	/^molalities(int allow_overflow)$/;"	f	class:Phreeqc
molality	phreeqcpp/basicsubs.cpp	/^molality(const char *species_name)$/;"	f	class:Phreeqc
mole_balance	phreeqcpp/global_structures.h	/^	const char *mole_balance;			\/* formula for mole balance *\/$/;"	m	struct:species
moles	phreeqcpp/GasComp.h	/^	LDBLE moles;$/;"	m	class:cxxGasComp
moles	phreeqcpp/ISolutionComp.h	/^	  LDBLE moles;$/;"	m	class:cxxISolutionComp
moles	phreeqcpp/KineticsComp.h	/^	  LDBLE moles;$/;"	m	class:cxxKineticsComp
moles	phreeqcpp/PPassemblageComp.h	/^	LDBLE moles;$/;"	m	class:cxxPPassemblageComp
moles	phreeqcpp/SScomp.h	/^	LDBLE moles;$/;"	m	class:cxxSScomp
moles	phreeqcpp/SurfaceComp.h	/^	LDBLE moles;$/;"	m	class:cxxSurfaceComp
moles	phreeqcpp/global_structures.h	/^	LDBLE moles;				\/* moles in solution; moles\/mass_water = molality *\/$/;"	m	struct:species
moles	phreeqcpp/global_structures.h	/^	LDBLE moles;$/;"	m	struct:master_isotope
moles	phreeqcpp/global_structures.h	/^	LDBLE moles;$/;"	m	struct:system_species
moles	phreeqcpp/global_structures.h	/^	LDBLE moles;$/;"	m	struct:tally
moles	phreeqcpp/global_structures.h	/^	LDBLE moles;$/;"	m	struct:tally_buffer
moles	phreeqcpp/global_structures.h	/^	LDBLE moles;$/;"	m	struct:unknown
moles_of_reaction	phreeqcpp/KineticsComp.h	/^	  cxxNameDouble moles_of_reaction;$/;"	m	class:cxxKineticsComp
moles_per_kilogram_string	phreeqcpp/Phreeqc.h	/^	char *moles_per_kilogram_string;$/;"	m	class:Phreeqc
moles_x	phreeqcpp/global_structures.h	/^	LDBLE moles_x;$/;"	m	struct:phase
mp	phreeqcpp/global_structures.h	/^	int mp;$/;"	m	struct:inverse
mp_censor	phreeqcpp/global_structures.h	/^	LDBLE mp_censor;$/;"	m	struct:inverse
mp_tolerance	phreeqcpp/global_structures.h	/^	LDBLE mp_tolerance;$/;"	m	struct:inverse
mu	phreeqcpp/SelectedOutput.h	/^	bool mu;$/;"	m	class:SelectedOutput
mu	phreeqcpp/Solution.h	/^	LDBLE mu;$/;"	m	class:cxxSolution
mu	phreeqcpp/global_structures.h	/^		LDBLE mu;$/;"	m	union:pitz_param::__anon21
mu	phreeqcpp/global_structures.h	/^	int mu;$/;"	m	struct:punch
mu_terms_in_logk	phreeqcpp/Phreeqc.h	/^	bool mu_terms_in_logk;$/;"	m	class:Phreeqc
mu_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *mu_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
mu_x	phreeqcpp/Phreeqc.h	/^	LDBLE mu_x;$/;"	m	class:Phreeqc
multi_D	phreeqcpp/transport.cpp	/^multi_D(LDBLE DDt, int mobile_cell, int stagnant)$/;"	f	class:Phreeqc
multi_Dflag	phreeqcpp/Phreeqc.h	/^	int multi_Dflag;		\/* signals calc'n of multicomponent diffusion *\/$/;"	m	class:Phreeqc
multi_Dn	phreeqcpp/Phreeqc.h	/^	LDBLE multi_Dn;		\/* exponent to calculate pore water diffusion coefficient,$/;"	m	class:Phreeqc
multi_Dpor	phreeqcpp/Phreeqc.h	/^	LDBLE multi_Dpor;		\/* uniform porosity of free porewater in solid medium *\/$/;"	m	class:Phreeqc
multi_Dpor_lim	phreeqcpp/Phreeqc.h	/^	LDBLE multi_Dpor_lim;	\/* limiting free porewater porosity where transport stops *\/$/;"	m	class:Phreeqc
multiply	phreeqcpp/ExchComp.cxx	/^cxxExchComp::multiply(LDBLE extensive)$/;"	f	class:cxxExchComp
multiply	phreeqcpp/GasComp.cxx	/^cxxGasComp::multiply(LDBLE extensive)$/;"	f	class:cxxGasComp
multiply	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::multiply(LDBLE extensive)$/;"	f	class:cxxKineticsComp
multiply	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::multiply(LDBLE extensive)$/;"	f	class:cxxNameDouble
multiply	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::multiply(LDBLE extensive)$/;"	f	class:cxxPPassemblageComp
multiply	phreeqcpp/SS.cxx	/^cxxSS::multiply(LDBLE extensive)$/;"	f	class:cxxSS
multiply	phreeqcpp/SScomp.cxx	/^cxxSScomp::multiply(LDBLE extensive)$/;"	f	class:cxxSScomp
multiply	phreeqcpp/Solution.cxx	/^cxxSolution::multiply(LDBLE extensive)$/;"	f	class:cxxSolution
multiply	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::multiply(LDBLE extensive)$/;"	f	class:cxxSolutionIsotope
multiply	phreeqcpp/Surface.cxx	/^cxxSurface::multiply(LDBLE extensive)$/;"	f	class:cxxSurface
multiply	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::multiply(LDBLE extensive)$/;"	f	class:cxxSurfaceCharge
multiply	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::multiply(LDBLE extensive)$/;"	f	class:cxxSurfaceComp
mustfindline	phreeqcpp/PBasic.cpp	/^mustfindline(long n)$/;"	f	class:PBasic
mutex_delete	thread.h	/^	#define mutex_delete(/;"	d
mutex_init	thread.h	/^	#define mutex_init(/;"	d
mutex_lock	thread.h	/^	#define mutex_lock(/;"	d
mutex_t	thread.h	/^	typedef LONG volatile mutex_t;$/;"	t
mutex_t	thread.h	/^	typedef pthread_mutex_t mutex_t;$/;"	t
mutex_trylock	thread.h	/^	#define mutex_trylock(/;"	d
mutex_unlock	thread.h	/^	#define mutex_unlock(/;"	d
mxhnil	phreeqcpp/cvode.cpp	/^#define mxhnil /;"	d	file:
mxstep	phreeqcpp/cvode.cpp	/^#define mxstep /;"	d	file:
my_labs	phreeqcpp/PBasic.cpp	/^my_labs(long l_x)$/;"	f	class:PBasic
my_memcmp	phreeqcpp/PBasic.cpp	/^my_memcmp(Const void * s1, Const void * s2, size_t n)$/;"	f	class:PBasic
my_memcpy	phreeqcpp/PBasic.cpp	/^my_memcpy(void * d, Const void * l_s, size_t n)$/;"	f	class:PBasic
my_memmove	phreeqcpp/PBasic.cpp	/^my_memmove(void * d, Const void * l_s, size_t n)$/;"	f	class:PBasic
my_memset	phreeqcpp/PBasic.cpp	/^my_memset(void * d, int c, size_t n)$/;"	f	class:PBasic
my_tolower	phreeqcpp/PBasic.cpp	/^my_tolower(int c)$/;"	f	class:PBasic
my_toupper	phreeqcpp/PBasic.cpp	/^my_toupper(int c)$/;"	f	class:PBasic
n2d	phreeqcpp/Phreeqc.h	/^	int klmd, nklmd, n2d, kode, iter;$/;"	m	class:Phreeqc
nErrLineNumber	phreeqcpp/PBasic.h	/^	int nErrLineNumber;$/;"	m	class:PBasic
nIDErrPrompt	phreeqcpp/PBasic.h	/^	IDErr nIDErrPrompt;$/;"	m	class:PBasic
nIDErrPrompt	phreeqcpp/PBasic.h	/^	UINT nIDErrPrompt;$/;"	m	class:PBasic
nLine	phreeqcpp/global_structures.h	/^	int nLine;					\/* line number *\/$/;"	m	struct:PHRQMemHeader
n_exchange_user	phreeqcpp/Use.h	/^	int n_exchange_user;$/;"	m	class:cxxUse
n_exchange_user	phreeqcpp/global_structures.h	/^	int n_exchange_user;$/;"	m	struct:save
n_exchange_user_end	phreeqcpp/global_structures.h	/^	int n_exchange_user_end;$/;"	m	struct:save
n_gas_phase_user	phreeqcpp/Use.h	/^	int n_gas_phase_user;$/;"	m	class:cxxUse
n_gas_phase_user	phreeqcpp/global_structures.h	/^	int n_gas_phase_user;$/;"	m	struct:save
n_gas_phase_user	phreeqcpp/global_structures.h	/^	int n_gas_phase_user;$/;"	m	struct:unknown
n_gas_phase_user_end	phreeqcpp/global_structures.h	/^	int n_gas_phase_user_end;$/;"	m	struct:save
n_inverse_user	phreeqcpp/Use.h	/^	int n_inverse_user;$/;"	m	class:cxxUse
n_kinetics_user	phreeqcpp/Use.h	/^	int n_kinetics_user;$/;"	m	class:cxxUse
n_kinetics_user	phreeqcpp/global_structures.h	/^	int n_kinetics_user;$/;"	m	struct:save
n_kinetics_user_end	phreeqcpp/global_structures.h	/^	int n_kinetics_user_end;$/;"	m	struct:save
n_mix_user	phreeqcpp/Use.h	/^	int n_mix_user;$/;"	m	class:cxxUse
n_mix_user	phreeqcpp/global_structures.h	/^	int n_mix_user;$/;"	m	struct:save
n_mix_user_end	phreeqcpp/global_structures.h	/^	int n_mix_user_end;$/;"	m	struct:save
n_mix_user_orig	phreeqcpp/Use.h	/^	int n_mix_user_orig;$/;"	m	class:cxxUse
n_pp_assemblage_user	phreeqcpp/Use.h	/^	int n_pp_assemblage_user;$/;"	m	class:cxxUse
n_pp_assemblage_user	phreeqcpp/global_structures.h	/^	int n_pp_assemblage_user;$/;"	m	struct:save
n_pp_assemblage_user_end	phreeqcpp/global_structures.h	/^	int n_pp_assemblage_user_end;$/;"	m	struct:save
n_pressure_user	phreeqcpp/Use.h	/^	int n_pressure_user;$/;"	m	class:cxxUse
n_reaction_user	phreeqcpp/Use.h	/^	int n_reaction_user;$/;"	m	class:cxxUse
n_reaction_user	phreeqcpp/global_structures.h	/^	int n_reaction_user;$/;"	m	struct:save
n_reaction_user_end	phreeqcpp/global_structures.h	/^	int n_reaction_user_end;$/;"	m	struct:save
n_solution	phreeqcpp/Exchange.h	/^	int n_solution;$/;"	m	class:cxxExchange
n_solution	phreeqcpp/GasPhase.h	/^	int n_solution;$/;"	m	class:cxxGasPhase
n_solution	phreeqcpp/Surface.h	/^	int n_solution;$/;"	m	class:cxxSurface
n_solution_user	phreeqcpp/Use.h	/^	int n_solution_user;$/;"	m	class:cxxUse
n_solution_user	phreeqcpp/global_structures.h	/^	int n_solution_user;$/;"	m	struct:save
n_solution_user_end	phreeqcpp/global_structures.h	/^	int n_solution_user_end;$/;"	m	struct:save
n_ss_assemblage_user	phreeqcpp/Use.h	/^	int n_ss_assemblage_user;$/;"	m	class:cxxUse
n_ss_assemblage_user	phreeqcpp/global_structures.h	/^	int n_ss_assemblage_user;$/;"	m	struct:save
n_ss_assemblage_user_end	phreeqcpp/global_structures.h	/^	int n_ss_assemblage_user_end;$/;"	m	struct:save
n_surface_user	phreeqcpp/Use.h	/^	int n_surface_user;$/;"	m	class:cxxUse
n_surface_user	phreeqcpp/global_structures.h	/^	int n_surface_user;$/;"	m	struct:save
n_surface_user_end	phreeqcpp/global_structures.h	/^	int n_surface_user_end;$/;"	m	struct:save
n_sz	phreeqcpp/PBasic.h	/^	size_t n_sz;$/;"	m	struct:tokenrec
n_temperature_user	phreeqcpp/Use.h	/^	int n_temperature_user;$/;"	m	class:cxxUse
n_user	phreeqcpp/NumKeyword.h	/^	int n_user;$/;"	m	class:cxxNumKeyword
n_user	phreeqcpp/global_structures.h	/^	int *n_user;$/;"	m	struct:copier
n_user	phreeqcpp/global_structures.h	/^	int n_user;$/;"	m	struct:inverse
n_user_end	phreeqcpp/NumKeyword.h	/^	int n_user_end;$/;"	m	class:cxxNumKeyword
n_user_punch_index	phreeqcpp/Phreeqc.h	/^	int n_user_punch_index;$/;"	m	class:Phreeqc
name	phreeqcpp/PBasic.h	/^	varnamestring name;$/;"	m	struct:varrec
name	phreeqcpp/PPassemblageComp.h	/^	std::string name;$/;"	m	class:cxxPPassemblageComp
name	phreeqcpp/SS.h	/^	std::string name;$/;"	m	class:cxxSS
name	phreeqcpp/SScomp.h	/^	std::string name;$/;"	m	class:cxxSScomp
name	phreeqcpp/SurfaceCharge.h	/^	std::string name;$/;"	m	class:cxxSurfaceCharge
name	phreeqcpp/global_structures.h	/^	char *name;$/;"	m	struct:system_species
name	phreeqcpp/global_structures.h	/^	const char *name;					\/* element name *\/$/;"	m	struct:element
name	phreeqcpp/global_structures.h	/^	const char *name;					\/* name of species *\/$/;"	m	struct:logk
name	phreeqcpp/global_structures.h	/^	const char *name;					\/* name of species *\/$/;"	m	struct:phase
name	phreeqcpp/global_structures.h	/^	const char *name;					\/* name of species *\/$/;"	m	struct:spec
name	phreeqcpp/global_structures.h	/^	const char *name;					\/* name of species *\/$/;"	m	struct:species
name	phreeqcpp/global_structures.h	/^	const char *name;					\/* pointer to a species name (formula) *\/$/;"	m	struct:rxn_token_temp
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:J_ij
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:M_S
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:calculate_value
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:const_iso
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:inv_elts
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:inv_phases
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:iso
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:isotope_alpha
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:isotope_ratio
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:master_isotope
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:name_coef
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:name_master
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:name_phase
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:name_species
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:rate
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:rxn_token
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:tally
name	phreeqcpp/global_structures.h	/^	const char *name;$/;"	m	struct:tally_buffer
name	phreeqcpp/global_structures.h	/^ 	char *name;$/;"	m	struct:key
name	phreeqcpp/global_structures.h	/^ 	const char *name;$/;"	m	struct:const_key
name_coef	phreeqcpp/global_structures.h	/^struct name_coef$/;"	s
name_master	phreeqcpp/global_structures.h	/^struct name_master$/;"	s
name_phase	phreeqcpp/global_structures.h	/^struct name_phase$/;"	s
name_species	phreeqcpp/global_structures.h	/^struct name_species$/;"	s
namecoef	phreeqcpp/KineticsComp.h	/^	  cxxNameDouble namecoef;		\/\/stoichiometry of reaction$/;"	m	class:cxxKineticsComp
named_logk	phreeqcpp/global_structures.h	/^	const char *named_logk;$/;"	m	struct:isotope_alpha
ncfn	phreeqcpp/cvode.cpp	/^#define ncfn /;"	d	file:
need_temp_msg	phreeqcpp/Phreeqc.h	/^	int need_temp_msg;$/;"	m	class:Phreeqc
negative_concentrations	phreeqcpp/Phreeqc.h	/^	int negative_concentrations;$/;"	m	class:Phreeqc
netf	phreeqcpp/cvode.cpp	/^#define netf /;"	d	file:
netpath	phreeqcpp/global_structures.h	/^	const char *netpath;$/;"	m	struct:inverse
netpath_file	phreeqcpp/Phreeqc.h	/^	FILE *netpath_file;$/;"	m	class:Phreeqc
neutral_list	phreeqcpp/Phreeqc.h	/^	std::vector<int> s_list, cation_list, neutral_list, anion_list, ion_list, param_list;$/;"	m	class:Phreeqc
neutrals	phreeqcpp/Phreeqc.h	/^	struct species **spec, **cations, **anions, **neutrals;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::
new_Dw	phreeqcpp/global_structures.h	/^	LDBLE new_Dw;$/;"	m	struct:Change_Surf
new_comp_name	phreeqcpp/global_structures.h	/^	const char *new_comp_name;$/;"	m	struct:Change_Surf
new_copy	phreeqcpp/Phreeqc.h	/^		new_inverse, new_punch, new_ss_assemblage, new_kinetics, new_copy,$/;"	m	class:Phreeqc
new_def	phreeqcpp/Exchange.h	/^	bool new_def;$/;"	m	class:cxxExchange
new_def	phreeqcpp/GasPhase.h	/^	bool new_def;$/;"	m	class:cxxGasPhase
new_def	phreeqcpp/PPassemblage.h	/^	bool new_def;$/;"	m	class:cxxPPassemblage
new_def	phreeqcpp/SSassemblage.h	/^	bool new_def;$/;"	m	class:cxxSSassemblage
new_def	phreeqcpp/SelectedOutput.h	/^	bool new_def;$/;"	m	class:SelectedOutput
new_def	phreeqcpp/Solution.h	/^	bool new_def;$/;"	m	class:cxxSolution
new_def	phreeqcpp/Surface.h	/^	bool new_def;$/;"	m	class:cxxSurface
new_def	phreeqcpp/global_structures.h	/^	int new_def;$/;"	m	struct:calculate_value
new_def	phreeqcpp/global_structures.h	/^	int new_def;$/;"	m	struct:inverse
new_def	phreeqcpp/global_structures.h	/^	int new_def;$/;"	m	struct:punch
new_def	phreeqcpp/global_structures.h	/^	int new_def;$/;"	m	struct:rate
new_exchange	phreeqcpp/Phreeqc.h	/^	int new_model, new_exchange, new_pp_assemblage, new_surface,$/;"	m	class:Phreeqc
new_gas_phase	phreeqcpp/Phreeqc.h	/^		new_reaction, new_temperature, new_mix, new_solution, new_gas_phase,$/;"	m	class:Phreeqc
new_headings	phreeqcpp/ChartObject.h	/^	std::vector<std::string> new_headings;$/;"	m	class:ChartObject
new_inverse	phreeqcpp/Phreeqc.h	/^		new_inverse, new_punch, new_ss_assemblage, new_kinetics, new_copy,$/;"	m	class:Phreeqc
new_kinetics	phreeqcpp/Phreeqc.h	/^		new_inverse, new_punch, new_ss_assemblage, new_kinetics, new_copy,$/;"	m	class:Phreeqc
new_mix	phreeqcpp/Phreeqc.h	/^		new_reaction, new_temperature, new_mix, new_solution, new_gas_phase,$/;"	m	class:Phreeqc
new_model	phreeqcpp/Phreeqc.h	/^	int new_model, new_exchange, new_pp_assemblage, new_surface,$/;"	m	class:Phreeqc
new_pitzer	phreeqcpp/Phreeqc.h	/^		new_pitzer;$/;"	m	class:Phreeqc
new_plotxy_curves	phreeqcpp/ChartObject.h	/^	std::vector<CurveObject> new_plotxy_curves;$/;"	m	class:ChartObject
new_pp_assemblage	phreeqcpp/Phreeqc.h	/^	int new_model, new_exchange, new_pp_assemblage, new_surface,$/;"	m	class:Phreeqc
new_punch	phreeqcpp/Phreeqc.h	/^		new_inverse, new_punch, new_ss_assemblage, new_kinetics, new_copy,$/;"	m	class:Phreeqc
new_reaction	phreeqcpp/Phreeqc.h	/^		new_reaction, new_temperature, new_mix, new_solution, new_gas_phase,$/;"	m	class:Phreeqc
new_solution	phreeqcpp/Phreeqc.h	/^		new_reaction, new_temperature, new_mix, new_solution, new_gas_phase,$/;"	m	class:Phreeqc
new_ss_assemblage	phreeqcpp/Phreeqc.h	/^		new_inverse, new_punch, new_ss_assemblage, new_kinetics, new_copy,$/;"	m	class:Phreeqc
new_surface	phreeqcpp/Phreeqc.h	/^	int new_model, new_exchange, new_pp_assemblage, new_surface,$/;"	m	class:Phreeqc
new_temperature	phreeqcpp/Phreeqc.h	/^		new_reaction, new_temperature, new_mix, new_solution, new_gas_phase,$/;"	m	class:Phreeqc
new_ug	phreeqcpp/ChartObject.h	/^	bool new_ug;$/;"	m	class:ChartObject
new_x	phreeqcpp/Phreeqc.h	/^	int new_x;$/;"	m	class:Phreeqc
next	phreeqcpp/PBasic.h	/^	struct linerec *next;$/;"	m	struct:linerec	typeref:struct:linerec::linerec
next	phreeqcpp/PBasic.h	/^	struct looprec *next;$/;"	m	struct:looprec	typeref:struct:looprec::looprec
next	phreeqcpp/PBasic.h	/^	struct tokenrec *next;$/;"	m	struct:tokenrec	typeref:struct:tokenrec::tokenrec
next	phreeqcpp/PBasic.h	/^	struct varrec *next;$/;"	m	struct:varrec	typeref:struct:varrec::varrec
next	phreeqcpp/global_structures.h	/^	int next;$/;"	m	struct:Change_Surf
next_elt	phreeqcpp/global_structures.h	/^	struct elt_list *next_elt;	\/* pointer to list of elements in phase *\/$/;"	m	struct:phase	typeref:struct:phase::elt_list
next_elt	phreeqcpp/global_structures.h	/^	struct elt_list *next_elt;	\/* pointer to next element *\/$/;"	m	struct:species	typeref:struct:species::elt_list
next_keyword	phreeqcpp/Phreeqc.h	/^	Keywords::KEYWORDS next_keyword;$/;"	m	class:Phreeqc
next_keyword	phreeqcpp/common/Parser.h	/^	Keywords::KEYWORDS next_keyword() const$/;"	f	class:CParser
next_keyword_or_option	phreeqcpp/read.cpp	/^next_keyword_or_option(const char **opt_list, int count_opt_list)$/;"	f	class:Phreeqc
next_secondary	phreeqcpp/global_structures.h	/^	struct elt_list *next_secondary;$/;"	m	struct:species	typeref:struct:species::elt_list
next_set_phases	phreeqcpp/inverse.cpp	/^next_set_phases(struct inverse *inv_ptr,$/;"	f	class:Phreeqc
next_sys_total	phreeqcpp/global_structures.h	/^	struct elt_list *next_sys_total;$/;"	m	struct:phase	typeref:struct:phase::elt_list
next_sys_total	phreeqcpp/global_structures.h	/^	struct elt_list *next_sys_total;$/;"	m	struct:species	typeref:struct:species::elt_list
next_user_number	phreeqcpp/Phreeqc.cpp	/^int Phreeqc::next_user_number(Keywords::KEYWORDS key)$/;"	f	class:Phreeqc
nfe	phreeqcpp/cvdense.cpp	/^#define nfe /;"	d	file:
nfe	phreeqcpp/cvode.cpp	/^#define nfe /;"	d	file:
nhnil	phreeqcpp/cvode.cpp	/^#define nhnil /;"	d	file:
nje	phreeqcpp/cvdense.cpp	/^#define nje /;"	d	file:
nklmd	phreeqcpp/Phreeqc.h	/^	int klmd, nklmd, n2d, kode, iter;$/;"	m	class:Phreeqc
nmix	phreeqcpp/Phreeqc.h	/^	int nmix, heat_nmix;$/;"	m	class:Phreeqc
nni	phreeqcpp/cvode.cpp	/^#define nni /;"	d	file:
normal	phreeqcpp/Phreeqc.h	/^	LDBLE *normal, *ineq_array, *res, *cu, *zero, *delta1;$/;"	m	class:Phreeqc
normal_max	phreeqcpp/Phreeqc.h	/^	int normal_max, ineq_array_max, res_max, cu_max, zero_max,$/;"	m	class:Phreeqc
now	phreeqcpp/Phreeqc.h	/^	int min_position[32], max_position[32], now[32];$/;"	m	class:Phreeqc
nscon	phreeqcpp/cvode.cpp	/^#define nscon /;"	d	file:
nsetups	phreeqcpp/cvode.cpp	/^#define nsetups /;"	d	file:
nst	phreeqcpp/cvdense.cpp	/^#define nst /;"	d	file:
nst	phreeqcpp/cvode.cpp	/^#define nst /;"	d	file:
nstlj	phreeqcpp/cvdense.cpp	/^#define nstlj /;"	d	file:
nstlp	phreeqcpp/cvode.cpp	/^#define nstlp /;"	d	file:
num	phreeqcpp/PBasic.h	/^		LDBLE num;$/;"	m	union:tokenrec::__anon25
num	phreeqcpp/PBasic.h	/^	long num, num2;$/;"	m	struct:linerec
num2	phreeqcpp/PBasic.h	/^	long num, num2;$/;"	m	struct:linerec
number	phreeqcpp/global_structures.h	/^	int empty, string, number;$/;"	m	struct:spread_row
number	phreeqcpp/global_structures.h	/^	int number;$/;"	m	struct:species
number	phreeqcpp/global_structures.h	/^	int number;$/;"	m	struct:unknown
number	phreeqcpp/global_structures.h	/^ 	int number;					\/* sequence number in list of masters *\/$/;"	m	struct:master
numbers	phreeqcpp/StorageBinList.h	/^	std::set < int > numbers;$/;"	m	class:StorageBinListItem
numdims	phreeqcpp/PBasic.h	/^	char numdims;$/;"	m	struct:varrec
numerical_deriv	phreeqcpp/Phreeqc.h	/^	int numerical_deriv;$/;"	m	class:Phreeqc
numerical_fixed_volume	phreeqcpp/Phreeqc.h	/^	bool numerical_fixed_volume;$/;"	m	class:Phreeqc
numerical_fixed_volume	phreeqcpp/global_structures.h	/^	bool numerical_fixed_volume;$/;"	m	struct:model
numerical_jacobian	phreeqcpp/model.cpp	/^numerical_jacobian(void)$/;"	f	class:Phreeqc
numtostr	phreeqcpp/PBasic.cpp	/^numtostr(char * Result, LDBLE n)$/;"	f	class:PBasic
nvabs	phreeqcpp/nvector.h	/^		void (*nvabs) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvaddconst	phreeqcpp/nvector.h	/^		void (*nvaddconst) (N_Vector, realtype, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvcompare	phreeqcpp/nvector.h	/^		void (*nvcompare) (realtype, N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvconst	phreeqcpp/nvector.h	/^		void (*nvconst) (realtype, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvconstrmask	phreeqcpp/nvector.h	/^		  booleantype(*nvconstrmask) (N_Vector, N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvconstrprodpos	phreeqcpp/nvector.h	/^		  booleantype(*nvconstrprodpos) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvdispose	phreeqcpp/nvector.h	/^		void (*nvdispose) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvdiv	phreeqcpp/nvector.h	/^		void (*nvdiv) (N_Vector, N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvdotprod	phreeqcpp/nvector.h	/^		  realtype(*nvdotprod) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvfree	phreeqcpp/nvector.h	/^		void (*nvfree) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvfreeS	phreeqcpp/nvector.h	/^		void (*nvfreeS) (integertype, N_Vector_S);$/;"	m	struct:_generic_N_Vector_Ops
nvgetdata	phreeqcpp/nvector.h	/^		realtype *(*nvgetdata) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvinv	phreeqcpp/nvector.h	/^		void (*nvinv) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvinvtest	phreeqcpp/nvector.h	/^		  booleantype(*nvinvtest) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvl1norm	phreeqcpp/nvector.h	/^		  realtype(*nvl1norm) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvlinearsum	phreeqcpp/nvector.h	/^		void (*nvlinearsum) (realtype, N_Vector, realtype, N_Vector,$/;"	m	struct:_generic_N_Vector_Ops
nvmake	phreeqcpp/nvector.h	/^		  N_Vector(*nvmake) (integertype, realtype *, M_Env);$/;"	m	struct:_generic_N_Vector_Ops
nvmaxnorm	phreeqcpp/nvector.h	/^		  realtype(*nvmaxnorm) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvmin	phreeqcpp/nvector.h	/^		  realtype(*nvmin) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvminquotient	phreeqcpp/nvector.h	/^		  realtype(*nvminquotient) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvnew	phreeqcpp/nvector.h	/^		N_Vector(*nvnew) (integertype, M_Env);$/;"	m	struct:_generic_N_Vector_Ops
nvnewS	phreeqcpp/nvector.h	/^		N_Vector_S(*nvnewS) (integertype, integertype, M_Env);$/;"	m	struct:_generic_N_Vector_Ops
nvonemask	phreeqcpp/nvector.h	/^		void (*nvonemask) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvprint	phreeqcpp/nvector.h	/^		void (*nvprint) (N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvprod	phreeqcpp/nvector.h	/^		void (*nvprod) (N_Vector, N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvscale	phreeqcpp/nvector.h	/^		void (*nvscale) (realtype, N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvsetdata	phreeqcpp/nvector.h	/^		void (*nvsetdata) (realtype *, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvwl2norm	phreeqcpp/nvector.h	/^		  realtype(*nvwl2norm) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
nvwrmsnorm	phreeqcpp/nvector.h	/^		  realtype(*nvwrmsnorm) (N_Vector, N_Vector);$/;"	m	struct:_generic_N_Vector_Ops
o	phreeqcpp/global_structures.h	/^	LDBLE o;					\/* stoichiometric coefficient of O in species *\/$/;"	m	struct:species
ofstream_open	phreeqcpp/common/PHRQ_io.cpp	/^ofstream_open(std::ostream **os, const char *file_name, std::ios_base::openmode mode)$/;"	f	class:PHRQ_io
old_cells	phreeqcpp/Phreeqc.h	/^	int old_cells, max_cells, all_cells;$/;"	m	class:Phreeqc
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
omega	phreeqcpp/global_structures.h	/^	LDBLE t_c, p_c, omega; \/* gas: critical TK, critical P(atm), Pitzer acentric coeff *\/$/;"	m	struct:phase
on	phreeqcpp/dumper.h	/^	bool on;$/;"	m	class:dumper
only_counter_ions	phreeqcpp/Surface.h	/^	bool only_counter_ions;$/;"	m	class:cxxSurface
only_counter_ions	phreeqcpp/global_structures.h	/^	int only_counter_ions;$/;"	m	struct:model
open_output_files	IPhreeqc.cpp	/^void IPhreeqc::open_output_files(const char* sz_routine)$/;"	f	class:IPhreeqc
operator ()	phreeqcpp/NameDouble.cxx	/^	bool operator()(const std::pair<std::string, LDBLE> &lhs, const std::pair<std::string, LDBLE> &rhs) $/;"	f	struct:DblCmp
operator <	phreeqcpp/ISolutionComp.h	/^	bool operator<(const cxxISolutionComp & conc) const$/;"	f	class:cxxISolutionComp
operator <	phreeqcpp/NumKeyword.h	/^	bool operator<(const cxxNumKeyword & key) const$/;"	f	class:cxxNumKeyword
operator <	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::operator<(const cxxSolutionIsotope & isotope) const$/;"	f	class:cxxSolutionIsotope
operator <<	CSelectedOutput.cpp	/^std::ostream& operator<< (std::ostream &os, const CSelectedOutput &a)$/;"	f
operator <<	CVar.hxx	/^inline std::ostream& operator<< (std::ostream &os, const CVar &a)$/;"	f
operator <<	Var.h	/^inline std::ostream& operator<< (std::ostream &os, const VAR_TYPE& vt)$/;"	f
operator <<	Var.h	/^inline std::ostream& operator<< (std::ostream &os, const VRESULT& vr)$/;"	f
operator =	CVar.hxx	/^	CVar& operator=(const CVar& varSrc)$/;"	f	class:CVar
operator =	CVar.hxx	/^	CVar& operator=(const VAR& varSrc)$/;"	f	class:CVar
operator =	CVar.hxx	/^	CVar& operator=(const char* pszSrc)$/;"	f	class:CVar
operator =	CVar.hxx	/^	CVar& operator=(double dblSrc) throw()$/;"	f	class:CVar
operator =	phreeqcpp/Phreeqc.cpp	/^Phreeqc &Phreeqc::operator=(const Phreeqc &rhs) $/;"	f	class:Phreeqc
operator =	phreeqcpp/Solution.cxx	/^cxxSolution::operator =(const cxxSolution &rhs)$/;"	f	class:cxxSolution
ops	phreeqcpp/nvector.h	/^		struct _generic_N_Vector_Ops *ops;$/;"	m	struct:_generic_M_Env	typeref:struct:_generic_M_Env::_generic_N_Vector_Ops
optIn	phreeqcpp/cvode.cpp	/^#define optIn /;"	d	file:
original_deltav_units	phreeqcpp/global_structures.h	/^	DELTA_V_UNIT original_deltav_units;$/;"	m	struct:logk
original_deltav_units	phreeqcpp/global_structures.h	/^	DELTA_V_UNIT original_deltav_units;$/;"	m	struct:phase
original_deltav_units	phreeqcpp/global_structures.h	/^	DELTA_V_UNIT original_deltav_units;$/;"	m	struct:species
original_units	phreeqcpp/global_structures.h	/^	DELTA_H_UNIT original_units;	\/* enum with original delta H units *\/$/;"	m	struct:logk
original_units	phreeqcpp/global_structures.h	/^	DELTA_H_UNIT original_units;	\/* enum with original delta H units *\/$/;"	m	struct:phase
original_units	phreeqcpp/global_structures.h	/^	DELTA_H_UNIT original_units;	\/* enum with original delta H units *\/$/;"	m	struct:species
os_coef	phreeqcpp/global_structures.h	/^	LDBLE os_coef;$/;"	m	struct:pitz_param
output_close	phreeqcpp/PHRQ_io_output.cpp	/^output_close(void)$/;"	f	class:Phreeqc
output_close	phreeqcpp/common/PHRQ_io.cpp	/^output_close(void)$/;"	f	class:PHRQ_io
output_flush	phreeqcpp/PHRQ_io_output.cpp	/^output_flush(void)$/;"	f	class:Phreeqc
output_flush	phreeqcpp/common/PHRQ_io.cpp	/^output_flush(void)$/;"	f	class:PHRQ_io
output_msg	IPhreeqc.cpp	/^void IPhreeqc::output_msg(const char * str)$/;"	f	class:IPhreeqc
output_msg	phreeqcpp/PHRQ_io_output.cpp	/^output_msg(const char * str)$/;"	f	class:Phreeqc
output_msg	phreeqcpp/common/PHRQ_base.cxx	/^output_msg(const std::string & stdstr)$/;"	f	class:PHRQ_base
output_msg	phreeqcpp/common/PHRQ_io.cpp	/^output_msg(const char * str)$/;"	f	class:PHRQ_io
output_on	phreeqcpp/common/PHRQ_io.h	/^	bool output_on;$/;"	m	class:PHRQ_io
output_open	IPhreeqc.cpp	/^bool IPhreeqc::output_open(const char *file_name, std::ios_base::openmode mode)$/;"	f	class:IPhreeqc
output_open	phreeqcpp/PHRQ_io_output.cpp	/^output_open(const char *file_name)$/;"	f	class:Phreeqc
output_open	phreeqcpp/common/PHRQ_io.cpp	/^output_open(const char *file_name, std::ios_base::openmode mode)$/;"	f	class:PHRQ_io
output_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *output_ostream;	$/;"	m	class:PHRQ_io
outputlinenr	phreeqcpp/Phreeqc.h	/^	int outputlinenr;$/;"	m	class:Phreeqc
p	phreeqcpp/SS.h	/^	std::vector<LDBLE> p;$/;"	m	class:cxxSS
p	phreeqcpp/global_structures.h	/^	LDBLE p;$/;"	m	struct:pitz_param
p	phreeqcpp/global_structures.h	/^	short p;					\/* Next bucket to be split      *\/$/;"	m	struct:__anon19
pNext	phreeqcpp/global_structures.h	/^	struct PHRQMemHeader *pNext;	\/* memory allocated just after this one *\/$/;"	m	struct:PHRQMemHeader	typeref:struct:PHRQMemHeader::PHRQMemHeader
pPrev	phreeqcpp/global_structures.h	/^	struct PHRQMemHeader *pPrev;	\/* memory allocated just prior to this one *\/$/;"	m	struct:PHRQMemHeader	typeref:struct:PHRQMemHeader::PHRQMemHeader
p_c	phreeqcpp/global_structures.h	/^	LDBLE t_c, p_c, omega; \/* gas: critical TK, critical P(atm), Pitzer acentric coeff *\/$/;"	m	struct:phase
p_read	phreeqcpp/GasComp.h	/^	LDBLE p_read;$/;"	m	class:cxxGasComp
p_sat	phreeqcpp/Phreeqc.h	/^	LDBLE V_solutes, rho_0, rho_0_sat, kappa_0, p_sat\/*, ah2o_x0*\/;$/;"	m	class:Phreeqc
p_soln_x	phreeqcpp/global_structures.h	/^	LDBLE p_soln_x;$/;"	m	struct:phase
pad_right	phreeqcpp/common/Utils.cxx	/^Utilities::pad_right(const std::string & str, size_t l)$/;"	f	class:Utilities
padfstring	IPhreeqc_interface_F.cpp	/^padfstring(char *dest, const char *src, int* len)$/;"	f
padfstring	fwrap.cpp	/^padfstring(char *dest, const char *src, unsigned int len)$/;"	f
param_list	phreeqcpp/Phreeqc.h	/^	std::vector<int> s_list, cation_list, neutral_list, anion_list, ion_list, param_list;$/;"	m	class:Phreeqc
paren_count	phreeqcpp/Phreeqc.h	/^	int paren_count;$/;"	m	class:Phreeqc
parse	phreeqcpp/PBasic.cpp	/^parse(char * l_inbuf, tokenrec ** l_buf)$/;"	f	class:PBasic
parse_all	phreeqcpp/PBasic.h	/^	bool parse_all;    \/* true, most function values set to 1 for testing compilation *\/$/;"	m	class:PBasic
parse_couple	phreeqcpp/common/Parser.cxx	/^CParser::STATUS_TYPE CParser::parse_couple(std::string & token)$/;"	f	class:CParser
parse_couple	phreeqcpp/utilities.cpp	/^parse_couple(char *token)$/;"	f	class:Phreeqc
parse_delimited	phreeqcpp/common/Parser.cxx	/^CParser::TOKEN_TYPE CParser::parse_delimited(std::string & source, std::string & result,$/;"	f	class:CParser
parse_eq	phreeqcpp/parse.cpp	/^parse_eq(char *eqn, struct elt_list **elt_ptr, int association)$/;"	f	class:Phreeqc
parse_error	phreeqcpp/Phreeqc.h	/^	int parse_error;$/;"	m	class:Phreeqc
parse_whole_program	phreeqcpp/PBasic.h	/^	bool parse_whole_program;$/;"	m	class:PBasic
parseinput	phreeqcpp/PBasic.cpp	/^parseinput(tokenrec ** l_buf)$/;"	f	class:PBasic
pat	phreeqcpp/global_structures.h	/^	const char *pat;$/;"	m	struct:inverse
patm	phreeqcpp/Solution.h	/^	LDBLE patm;$/;"	m	class:cxxSolution
patm_x	phreeqcpp/Phreeqc.h	/^	LDBLE patm_x;$/;"	m	class:Phreeqc
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pe	phreeqcpp/SelectedOutput.h	/^	bool pe;$/;"	m	class:SelectedOutput
pe	phreeqcpp/Solution.h	/^	LDBLE pe;$/;"	m	class:cxxSolution
pe	phreeqcpp/global_structures.h	/^	LDBLE pe;$/;"	m	struct:defaults
pe	phreeqcpp/global_structures.h	/^	int pe;$/;"	m	struct:punch
pe_reaction	phreeqcpp/ISolutionComp.h	/^	  std::string pe_reaction;$/;"	m	class:cxxISolutionComp
pe_reactions	phreeqcpp/ISolution.h	/^	std::map <std::string, cxxChemRxn > pe_reactions;$/;"	m	class:cxxISolution
pe_rxn	phreeqcpp/global_structures.h	/^	const char * pe_rxn;$/;"	m	struct:master
pe_step_size	phreeqcpp/Phreeqc.h	/^	LDBLE pe_step_size;$/;"	m	class:Phreeqc
pe_step_size_now	phreeqcpp/Phreeqc.h	/^	LDBLE pe_step_size_now;$/;"	m	class:Phreeqc
pe_string	phreeqcpp/Phreeqc.h	/^	char *pe_string;$/;"	m	class:Phreeqc
pe_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *pe_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
pe_x	phreeqcpp/Phreeqc.h	/^	std::map < std::string, cxxChemRxn > pe_x;$/;"	m	class:Phreeqc
peek_token	phreeqcpp/common/Parser.cxx	/^CParser::TOKEN_TYPE CParser::peek_token()$/;"	f	class:CParser
percent_error	phreeqcpp/SelectedOutput.h	/^	bool percent_error;$/;"	m	class:SelectedOutput
percent_error	phreeqcpp/global_structures.h	/^	int percent_error;$/;"	m	struct:punch
ph	phreeqcpp/SelectedOutput.h	/^	bool ph;$/;"	m	class:SelectedOutput
ph	phreeqcpp/Solution.h	/^	LDBLE ph;$/;"	m	class:cxxSolution
ph	phreeqcpp/global_structures.h	/^	LDBLE ph;$/;"	m	struct:defaults
ph	phreeqcpp/global_structures.h	/^	int ph;$/;"	m	struct:punch
ph_uncertainties	phreeqcpp/global_structures.h	/^	LDBLE *ph_uncertainties;$/;"	m	struct:inverse
ph_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *ph_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
ph_x	phreeqcpp/Phreeqc.h	/^	LDBLE ph_x;$/;"	m	class:Phreeqc
phase	phreeqcpp/global_structures.h	/^	struct phase *phase;$/;"	m	struct:inv_phases	typeref:struct:inv_phases::phase
phase	phreeqcpp/global_structures.h	/^	struct phase *phase;$/;"	m	struct:name_phase	typeref:struct:name_phase::phase
phase	phreeqcpp/global_structures.h	/^	struct phase *phase;$/;"	m	struct:unknown	typeref:struct:unknown::phase
phase	phreeqcpp/global_structures.h	/^struct phase$/;"	s
phase_alloc	phreeqcpp/structures.cpp	/^phase_alloc(void)$/;"	f	class:Phreeqc
phase_bits	phreeqcpp/Phreeqc.h	/^	unsigned long soln_bits, phase_bits, current_bits, temp_bits;$/;"	m	class:Phreeqc
phase_bsearch	phreeqcpp/structures.cpp	/^phase_bsearch(const char *ptr, int *j, int print)$/;"	f	class:Phreeqc
phase_compare	phreeqcpp/structures.cpp	/^phase_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
phase_compare_string	phreeqcpp/structures.cpp	/^phase_compare_string(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
phase_delete	phreeqcpp/structures.cpp	/^phase_delete(int i)$/;"	f	class:Phreeqc
phase_formula	phreeqcpp/basicsubs.cpp	/^phase_formula(std::string phase_name, cxxNameDouble &stoichiometry)$/;"	f	class:Phreeqc
phase_free	phreeqcpp/structures.cpp	/^phase_free(struct phase *phase_ptr)$/;"	f	class:Phreeqc
phase_init	phreeqcpp/structures.cpp	/^phase_init(struct phase *phase_ptr)$/;"	f	class:Phreeqc
phase_isotope_inequalities	phreeqcpp/inverse.cpp	/^phase_isotope_inequalities(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
phase_name	phreeqcpp/ExchComp.h	/^	std::string phase_name;$/;"	m	class:cxxExchComp
phase_name	phreeqcpp/GasComp.h	/^	std::string phase_name;$/;"	m	class:cxxGasComp
phase_name	phreeqcpp/SurfaceComp.h	/^	std::string phase_name;$/;"	m	class:cxxSurfaceComp
phase_proportion	phreeqcpp/ExchComp.h	/^	LDBLE phase_proportion;$/;"	m	class:cxxExchComp
phase_proportion	phreeqcpp/SurfaceComp.h	/^	LDBLE phase_proportion;$/;"	m	class:cxxSurfaceComp
phase_rxn_to_trxn	phreeqcpp/tidy.cpp	/^phase_rxn_to_trxn(struct phase *phase_ptr, struct reaction *rxn_ptr)$/;"	f	class:Phreeqc
phase_si	phreeqcpp/ISolutionComp.h	/^	  LDBLE phase_si;$/;"	m	class:cxxISolutionComp
phase_store	phreeqcpp/structures.cpp	/^phase_store(const char *name)$/;"	f	class:Phreeqc
phase_unknown	phreeqcpp/global_structures.h	/^	struct unknown *phase_unknown;$/;"	m	struct:unknown	typeref:struct:unknown::unknown
phases	phreeqcpp/Phreeqc.h	/^	struct phase **phases;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::phase
phases	phreeqcpp/global_structures.h	/^	struct inv_phases *phases;$/;"	m	struct:inverse	typeref:struct:inverse::inv_phases
phases_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *phases_hash_table;$/;"	m	class:Phreeqc
phast	phreeqcpp/Phreeqc.h	/^	int phast;$/;"	m	class:Phreeqc
phreeqc2cxxStorageBin	phreeqcpp/structures.cpp	/^phreeqc2cxxStorageBin(cxxStorageBin & sb)$/;"	f	class:Phreeqc
phreeqc2cxxStorageBin	phreeqcpp/structures.cpp	/^phreeqc2cxxStorageBin(cxxStorageBin & sb, int n)$/;"	f	class:Phreeqc
phreeqc_done	phreeqcpp/Form1.h	/^	private: bool phreeqc_done;$/;"	m	class:zdg_ui2::Form1
phreeqc_keyword_names	phreeqcpp/PhreeqcKeywords/Keywords.h	/^	static const std::map<KEYWORDS, const std::string> phreeqc_keyword_names;$/;"	m	class:Keywords
phreeqc_keywords	phreeqcpp/PhreeqcKeywords/Keywords.h	/^	static const std::map<const std::string, KEYWORDS> phreeqc_keywords;$/;"	m	class:Keywords
phreeqc_mpi_myself	phreeqcpp/Phreeqc.h	/^	int phreeqc_mpi_myself;$/;"	m	class:Phreeqc
phreeqc_ptr	phreeqcpp/ChartObject.h	/^	class Phreeqc * phreeqc_ptr;$/;"	m	class:ChartObject	typeref:class:ChartObject::Phreeqc
phreeqc_ptr	phreeqcpp/nvector.h	/^		Phreeqc * phreeqc_ptr;$/;"	m	struct:_generic_M_Env
phreeqci_gui	phreeqcpp/PBasic.h	/^	bool phreeqci_gui;$/;"	m	class:PBasic
phrq_io	phreeqcpp/Phreeqc.h	/^	PHRQ_io *phrq_io;$/;"	m	class:Phreeqc
phrq_io_only	phreeqcpp/common/Parser.h	/^	bool phrq_io_only;$/;"	m	class:CParser
pi	phreeqcpp/global_structures.h	/^#define pi /;"	d
pitz_param	phreeqcpp/global_structures.h	/^struct pitz_param$/;"	s
pitz_param_alloc	phreeqcpp/pitzer_structures.cpp	/^pitz_param_alloc(void)$/;"	f	class:Phreeqc
pitz_param_copy	phreeqcpp/pitzer_structures.cpp	/^pitz_param_copy(struct pitz_param *old_ptr, struct pitz_param *new_ptr)$/;"	f	class:Phreeqc
pitz_param_duplicate	phreeqcpp/pitzer_structures.cpp	/^pitz_param_duplicate(struct pitz_param *old_ptr)$/;"	f	class:Phreeqc
pitz_param_init	phreeqcpp/pitzer_structures.cpp	/^pitz_param_init(struct pitz_param *pitz_param_ptr)$/;"	f	class:Phreeqc
pitz_param_map	phreeqcpp/Phreeqc.h	/^	std::map< std::string, size_t > pitz_param_map;$/;"	m	class:Phreeqc
pitz_param_read	phreeqcpp/pitzer_structures.cpp	/^pitz_param_read(char *string, int n)$/;"	f	class:Phreeqc
pitz_param_store	phreeqcpp/pitzer_structures.cpp	/^pitz_param_store(struct pitz_param *pzp_ptr, bool force_copy)$/;"	f	class:Phreeqc
pitz_param_type	phreeqcpp/global_structures.h	/^} pitz_param_type;$/;"	t	typeref:enum:__anon20
pitz_params	phreeqcpp/Phreeqc.h	/^	struct pitz_param **pitz_params;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::pitz_param
pitzer	phreeqcpp/pitzer.cpp	/^pitzer(void)$/;"	f	class:Phreeqc
pitzer_clean_up	phreeqcpp/pitzer.cpp	/^pitzer_clean_up(void)$/;"	f	class:Phreeqc
pitzer_exchange_gammas	phreeqcpp/Exchange.h	/^	bool pitzer_exchange_gammas;$/;"	m	class:cxxExchange
pitzer_init	phreeqcpp/pitzer.cpp	/^pitzer_init(void)$/;"	f	class:Phreeqc
pitzer_initial_guesses	phreeqcpp/pitzer.cpp	/^pitzer_initial_guesses(void)$/;"	f	class:Phreeqc
pitzer_make_lists	phreeqcpp/pitzer.cpp	/^pitzer_make_lists(void)$/;"	f	class:Phreeqc
pitzer_model	phreeqcpp/Phreeqc.h	/^	int pitzer_model, sit_model, pitzer_pe;$/;"	m	class:Phreeqc
pitzer_pe	phreeqcpp/Phreeqc.h	/^	int pitzer_model, sit_model, pitzer_pe;$/;"	m	class:Phreeqc
pitzer_revise_guesses	phreeqcpp/pitzer.cpp	/^pitzer_revise_guesses(void)$/;"	f	class:Phreeqc
pitzer_tidy	phreeqcpp/pitzer.cpp	/^pitzer_tidy(void)$/;"	f	class:Phreeqc
pivots	phreeqcpp/cvdense.cpp	/^#define pivots /;"	d	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/iphreeqc$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/iphreeqc$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/iphreeqc$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/iphreeqc$/;"	m
point_added	phreeqcpp/ChartObject.h	/^	bool point_added;$/;"	m	class:ChartObject
polint	phreeqcpp/integrate.cpp	/^polint(LDBLE * xa, LDBLE * ya, int n, LDBLE xv, LDBLE * yv, LDBLE * dy)$/;"	f	class:Phreeqc
pop_istream	phreeqcpp/common/PHRQ_io.cpp	/^pop_istream()$/;"	f	class:PHRQ_io
por	phreeqcpp/global_structures.h	/^	LDBLE por;					\/* free (uncharged) porewater porosities *\/$/;"	m	struct:cell_data
por_il	phreeqcpp/global_structures.h	/^	LDBLE por_il;				\/* interlayer water porosities *\/$/;"	m	struct:cell_data
post_mortem	phreeqcpp/inverse.cpp	/^post_mortem(void)$/;"	f	class:Phreeqc
postorder	phreeqcpp/global_structures.h	/^{ preorder, postorder, endorder, leaf } VISIT;$/;"	e	enum:__anon18
potential_unknown	phreeqcpp/global_structures.h	/^	struct unknown *potential_unknown, *potential_unknown1,$/;"	m	struct:unknown	typeref:struct:unknown::unknown
potential_unknown1	phreeqcpp/global_structures.h	/^	struct unknown *potential_unknown, *potential_unknown1,$/;"	m	struct:unknown	typeref:struct:unknown::
potential_unknown2	phreeqcpp/global_structures.h	/^		*potential_unknown2;$/;"	m	struct:unknown	typeref:struct:unknown::
pp_assemblage	phreeqcpp/StorageBinList.h	/^	StorageBinListItem pp_assemblage;$/;"	m	class:StorageBinList
pp_assemblage	phreeqcpp/global_structures.h	/^	int pp_assemblage;$/;"	m	struct:prints
pp_assemblage	phreeqcpp/global_structures.h	/^	int pp_assemblage;$/;"	m	struct:save
pp_assemblage	phreeqcpp/global_structures.h	/^	struct phase **pp_assemblage;$/;"	m	struct:model	typeref:struct:model::phase
pp_assemblage_check	phreeqcpp/step.cpp	/^pp_assemblage_check(cxxPPassemblage *pp_assemblage_ptr)$/;"	f	class:Phreeqc
pp_assemblage_comp_name	phreeqcpp/global_structures.h	/^	const char *pp_assemblage_comp_name;$/;"	m	struct:unknown
pp_assemblage_comp_ptr	phreeqcpp/global_structures.h	/^	void *pp_assemblage_comp_ptr; $/;"	m	struct:unknown
pp_assemblage_comps	phreeqcpp/PPassemblage.h	/^	std::map <std::string, cxxPPassemblageComp > pp_assemblage_comps;$/;"	m	class:cxxPPassemblage
pp_assemblage_in	phreeqcpp/Use.h	/^	bool pp_assemblage_in;$/;"	m	class:cxxUse
pp_assemblage_ptr	phreeqcpp/Use.h	/^	cxxPPassemblage *pp_assemblage_ptr;$/;"	m	class:cxxUse
pp_column_scale	phreeqcpp/Phreeqc.h	/^	LDBLE pp_column_scale;$/;"	m	class:Phreeqc
pp_scale	phreeqcpp/Phreeqc.h	/^	LDBLE pp_scale;$/;"	m	class:Phreeqc
ppassemblage	phreeqcpp/System.h	/^	cxxPPassemblage * ppassemblage;$/;"	m	class:cxxSystem
pr	phreeqcpp/Phreeqc.h	/^	struct prints pr;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::prints
pr_a	phreeqcpp/global_structures.h	/^	LDBLE pr_a, pr_b, pr_alpha;		\/* Peng-Robinson parm's *\/$/;"	m	struct:phase
pr_aa_sum2	phreeqcpp/global_structures.h	/^	LDBLE pr_aa_sum2;			\/* for calculating multicomponent phi *\/$/;"	m	struct:phase
pr_alpha	phreeqcpp/global_structures.h	/^	LDBLE pr_a, pr_b, pr_alpha;		\/* Peng-Robinson parm's *\/$/;"	m	struct:phase
pr_b	phreeqcpp/global_structures.h	/^	LDBLE pr_a, pr_b, pr_alpha;		\/* Peng-Robinson parm's *\/$/;"	m	struct:phase
pr_in	phreeqcpp/GasPhase.h	/^	bool pr_in;$/;"	m	class:cxxGasPhase
pr_in	phreeqcpp/global_structures.h	/^	bool pr_in;					\/* Peng-Robinson in the calc's, or not *\/$/;"	m	struct:phase
pr_p	phreeqcpp/global_structures.h	/^	LDBLE pr_tk, pr_p;			\/* Temperature (K), Pressure (atm) *\/$/;"	m	struct:phase
pr_phi	phreeqcpp/basicsubs.cpp	/^pr_phi(const char *phase_name)$/;"	f	class:Phreeqc
pr_phi	phreeqcpp/global_structures.h	/^	LDBLE pr_phi;				\/* fugacity coefficient (-) *\/$/;"	m	struct:phase
pr_pressure	phreeqcpp/basicsubs.cpp	/^pr_pressure(const char *phase_name)$/;"	f	class:Phreeqc
pr_si_f	phreeqcpp/global_structures.h	/^	LDBLE pr_si_f;				\/* si adapter: log10(phi) - delta_v[0] * (P - 1) \/RT *\/$/;"	m	struct:phase
pr_tk	phreeqcpp/global_structures.h	/^	LDBLE pr_tk, pr_p;			\/* Temperature (K), Pressure (atm) *\/$/;"	m	struct:phase
precipitate_only	phreeqcpp/PPassemblageComp.h	/^	bool precipitate_only;$/;"	m	class:cxxPPassemblageComp
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
preorder	phreeqcpp/global_structures.h	/^{ preorder, postorder, endorder, leaf } VISIT;$/;"	e	enum:__anon18
prep	phreeqcpp/prep.cpp	/^prep(void)$/;"	f	class:Phreeqc
pressure	phreeqcpp/StorageBinList.h	/^	StorageBinListItem pressure;$/;"	m	class:StorageBinList
pressure	phreeqcpp/System.h	/^	cxxPressure * pressure;$/;"	m	class:cxxSystem
pressure	phreeqcpp/basicsubs.cpp	/^pressure(void)$/;"	f	class:Phreeqc
pressure	phreeqcpp/global_structures.h	/^	LDBLE pressure;	\/* pressure in atm *\/$/;"	m	struct:defaults
pressure	phreeqcpp/global_structures.h	/^	LDBLE pressure;$/;"	m	struct:model
pressure	phreeqcpp/global_structures.h	/^	LDBLE pressure;$/;"	m	struct:unknown
pressure_in	phreeqcpp/Use.h	/^	bool pressure_in;$/;"	m	class:cxxUse
pressure_ptr	phreeqcpp/Use.h	/^	cxxPressure *pressure_ptr;$/;"	m	class:cxxUse
pressures	phreeqcpp/Pressure.h	/^	std::vector < LDBLE >pressures;$/;"	m	class:cxxPressure
prev_advection_step	phreeqcpp/ChartObject.h	/^	int prev_advection_step;$/;"	m	class:ChartObject
prev_advection_step	phreeqcpp/Phreeqc.h	/^	int prev_advection_step, prev_transport_step;	\/*, prev_reaction_step *\/$/;"	m	class:Phreeqc
prev_next_char	phreeqcpp/Phreeqc.h	/^	char *prev_next_char;$/;"	m	class:Phreeqc
prev_sim_no	phreeqcpp/ChartObject.h	/^	int prev_sim_no;$/;"	m	class:ChartObject
prev_transport_step	phreeqcpp/ChartObject.h	/^	int prev_transport_step;$/;"	m	class:ChartObject
prev_transport_step	phreeqcpp/Phreeqc.h	/^	int prev_advection_step, prev_transport_step;	\/*, prev_reaction_step *\/$/;"	m	class:Phreeqc
primary	phreeqcpp/global_structures.h	/^	struct master *primary;		\/* points to master species list, NULL if not primary master *\/$/;"	m	struct:species	typeref:struct:species::master
primary	phreeqcpp/global_structures.h	/^	struct master *primary;$/;"	m	struct:element	typeref:struct:element::master
primary	phreeqcpp/global_structures.h	/^ 	int primary;				\/* TRUE if master species is primary *\/$/;"	m	struct:master
primary	phreeqcpp/global_structures.h	/^ 	struct master *primary;$/;"	m	struct:isotope	typeref:struct:isotope::master
print	phreeqcpp/global_structures.h	/^	int print;$/;"	m	struct:cell_data
print_ad_modulus	phreeqcpp/Phreeqc.h	/^	int print_ad_modulus;$/;"	m	class:Phreeqc
print_alkalinity	phreeqcpp/print.cpp	/^print_alkalinity(void)$/;"	f	class:Phreeqc
print_all	phreeqcpp/print.cpp	/^print_all(void)$/;"	f	class:Phreeqc
print_centered	phreeqcpp/utilities.cpp	/^print_centered(const char *string)$/;"	f	class:Phreeqc
print_density	phreeqcpp/Phreeqc.h	/^	int print_density;$/;"	m	class:Phreeqc
print_diffuse_layer	phreeqcpp/print.cpp	/^print_diffuse_layer(cxxSurfaceCharge *charge_ptr)$/;"	f	class:Phreeqc
print_eh	phreeqcpp/print.cpp	/^print_eh(void)$/;"	f	class:Phreeqc
print_exchange	phreeqcpp/print.cpp	/^print_exchange(void)$/;"	f	class:Phreeqc
print_gas_phase	phreeqcpp/print.cpp	/^print_gas_phase(void)$/;"	f	class:Phreeqc
print_initial_solution_isotopes	phreeqcpp/isotopes.cpp	/^print_initial_solution_isotopes(void)$/;"	f	class:Phreeqc
print_isotope	phreeqcpp/inverse.cpp	/^print_isotope(FILE * l_netpath_file, cxxSolution *solution_ptr,$/;"	f	class:Phreeqc
print_isotope_alphas	phreeqcpp/isotopes.cpp	/^print_isotope_alphas(void)$/;"	f	class:Phreeqc
print_isotope_ratios	phreeqcpp/isotopes.cpp	/^print_isotope_ratios(void)$/;"	f	class:Phreeqc
print_kinetics	phreeqcpp/print.cpp	/^print_kinetics(void)$/;"	f	class:Phreeqc
print_master_reactions	phreeqcpp/print.cpp	/^print_master_reactions(void)$/;"	f	class:Phreeqc
print_mix	phreeqcpp/print.cpp	/^print_mix(void)$/;"	f	class:Phreeqc
print_model	phreeqcpp/inverse.cpp	/^print_model(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
print_modulus	phreeqcpp/Phreeqc.h	/^	int print_modulus;$/;"	m	class:Phreeqc
print_pp_assemblage	phreeqcpp/print.cpp	/^print_pp_assemblage(void)$/;"	f	class:Phreeqc
print_reaction	phreeqcpp/print.cpp	/^print_reaction(struct reaction *rxn_ptr)$/;"	f	class:Phreeqc
print_reaction	phreeqcpp/print.cpp	/^print_reaction(void)$/;"	f	class:Phreeqc
print_saturation_indices	phreeqcpp/print.cpp	/^print_saturation_indices(void)$/;"	f	class:Phreeqc
print_species	phreeqcpp/print.cpp	/^print_species(void)$/;"	f	class:Phreeqc
print_ss_assemblage	phreeqcpp/print.cpp	/^print_ss_assemblage(void)$/;"	f	class:Phreeqc
print_surface	phreeqcpp/print.cpp	/^print_surface(void)$/;"	f	class:Phreeqc
print_surface_cd_music	phreeqcpp/print.cpp	/^print_surface_cd_music(void)$/;"	f	class:Phreeqc
print_tally_table	phreeqcpp/tally.cpp	/^print_tally_table(void)$/;"	f	class:Phreeqc
print_total	phreeqcpp/inverse.cpp	/^print_total(FILE * l_netpath_file, cxxSolution *solution_ptr,$/;"	f	class:Phreeqc
print_total_multi	phreeqcpp/inverse.cpp	/^print_total_multi(FILE * l_netpath_file, cxxSolution *solution_ptr,$/;"	f	class:Phreeqc
print_total_pat	phreeqcpp/inverse.cpp	/^print_total_pat(FILE * l_netpath_file, const char *elt, const char *string)$/;"	f	class:Phreeqc
print_totals	phreeqcpp/print.cpp	/^print_totals(void)$/;"	f	class:Phreeqc
print_user_print	phreeqcpp/print.cpp	/^print_user_print(void)$/;"	f	class:Phreeqc
print_using	phreeqcpp/print.cpp	/^print_using(void)$/;"	f	class:Phreeqc
prints	phreeqcpp/global_structures.h	/^struct prints$/;"	s
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
progress_str	phreeqcpp/Phreeqc.h	/^	char progress_str[512];$/;"	m	class:Phreeqc
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psi	phreeqcpp/global_structures.h	/^		LDBLE psi;$/;"	m	union:pitz_param::__anon21
psi_to_z	phreeqcpp/SurfaceCharge.h	/^	LDBLE psi_to_z;$/;"	m	class:cxxSurfDL
punch	phreeqcpp/global_structures.h	/^	int punch;$/;"	m	struct:cell_data
punch	phreeqcpp/global_structures.h	/^	int punch;$/;"	m	struct:prints
punch	phreeqcpp/global_structures.h	/^struct punch$/;"	s
punch_activities	phreeqcpp/print.cpp	/^punch_activities(void)$/;"	f	class:Phreeqc
punch_ad_modulus	phreeqcpp/Phreeqc.h	/^	int punch_ad_modulus;$/;"	m	class:Phreeqc
punch_all	phreeqcpp/print.cpp	/^punch_all(void)$/;"	f	class:Phreeqc
punch_calculate_values	phreeqcpp/isotopes.cpp	/^punch_calculate_values(void)$/;"	f	class:Phreeqc
punch_close	phreeqcpp/PHRQ_io_output.cpp	/^punch_close(void)$/;"	f	class:Phreeqc
punch_close	phreeqcpp/common/PHRQ_io.cpp	/^punch_close(void)$/;"	f	class:PHRQ_io
punch_flush	phreeqcpp/PHRQ_io_output.cpp	/^punch_flush(void)$/;"	f	class:Phreeqc
punch_flush	phreeqcpp/common/PHRQ_io.cpp	/^punch_flush(void)$/;"	f	class:PHRQ_io
punch_gas_phase	phreeqcpp/print.cpp	/^punch_gas_phase(void)$/;"	f	class:Phreeqc
punch_identifiers	phreeqcpp/print.cpp	/^punch_identifiers(void)$/;"	f	class:Phreeqc
punch_isotopes	phreeqcpp/isotopes.cpp	/^punch_isotopes(void)$/;"	f	class:Phreeqc
punch_kinetics	phreeqcpp/print.cpp	/^punch_kinetics(void)$/;"	f	class:Phreeqc
punch_model	phreeqcpp/inverse.cpp	/^punch_model(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
punch_model_heading	phreeqcpp/inverse.cpp	/^punch_model_heading(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
punch_modulus	phreeqcpp/Phreeqc.h	/^	int punch_modulus;$/;"	m	class:Phreeqc
punch_molalities	phreeqcpp/print.cpp	/^punch_molalities(void)$/;"	f	class:Phreeqc
punch_msg	IPhreeqc.cpp	/^void IPhreeqc::punch_msg(const char *str)$/;"	f	class:IPhreeqc
punch_msg	phreeqcpp/PHRQ_io_output.cpp	/^punch_msg(const char * str)$/;"	f	class:Phreeqc
punch_msg	phreeqcpp/common/PHRQ_io.cpp	/^punch_msg(const char * str)$/;"	f	class:PHRQ_io
punch_on	phreeqcpp/common/PHRQ_io.h	/^	bool punch_on;$/;"	m	class:PHRQ_io
punch_open	IPhreeqc.cpp	/^bool IPhreeqc::punch_open(const char *file_name, std::ios_base::openmode mode, int n_user)$/;"	f	class:IPhreeqc
punch_open	phreeqcpp/PHRQ_io_output.cpp	/^punch_open(const char *file_name, int n_user)$/;"	f	class:Phreeqc
punch_open	phreeqcpp/common/PHRQ_io.cpp	/^punch_open(const char *file_name, std::ios_base::openmode mode, int n_user)$/;"	f	class:PHRQ_io
punch_ostream	phreeqcpp/SelectedOutput.h	/^	std::ostream * punch_ostream;$/;"	m	class:SelectedOutput
punch_ostream	phreeqcpp/common/PHRQ_io.h	/^	std::ostream *punch_ostream;	$/;"	m	class:PHRQ_io
punch_pp_assemblage	phreeqcpp/print.cpp	/^punch_pp_assemblage(void)$/;"	f	class:Phreeqc
punch_saturation_indices	phreeqcpp/print.cpp	/^punch_saturation_indices(void)$/;"	f	class:Phreeqc
punch_ss_assemblage	phreeqcpp/print.cpp	/^punch_ss_assemblage(void)$/;"	f	class:Phreeqc
punch_totals	phreeqcpp/print.cpp	/^punch_totals(void)$/;"	f	class:Phreeqc
punch_user_graph	phreeqcpp/print.cpp	/^punch_user_graph(void)$/;"	f	class:Phreeqc
punch_user_punch	phreeqcpp/print.cpp	/^punch_user_punch(void)$/;"	f	class:Phreeqc
pure_phase_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *pure_phase_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
pure_phases	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > pure_phases;$/;"	m	class:SelectedOutput
pure_phases	phreeqcpp/global_structures.h	/^	struct name_phase *pure_phases;$/;"	m	struct:punch	typeref:struct:punch::name_phase
push_istream	phreeqcpp/common/PHRQ_io.cpp	/^push_istream(std::istream * cookie, bool auto_delete)$/;"	f	class:PHRQ_io
q	phreeqcpp/cvode.cpp	/^#define q /;"	d	file:
qmax	phreeqcpp/cvode.cpp	/^#define qmax /;"	d	file:
qprime	phreeqcpp/cvode.cpp	/^#define qprime /;"	d	file:
qromb_midpnt	phreeqcpp/integrate.cpp	/^qromb_midpnt(cxxSurfaceCharge *charge_ptr, LDBLE x1, LDBLE x2)$/;"	f	class:Phreeqc
qsort	thread.h	/^	#define qsort(/;"	d
qsort_lock	thread.h	/^	mutex_t qsort_lock = MUTEX_INITIALIZER;$/;"	v
qu	phreeqcpp/cvode.cpp	/^#define qu /;"	d	file:
quick_setup	phreeqcpp/prep.cpp	/^quick_setup(void)$/;"	f	class:Phreeqc
qwait	phreeqcpp/cvode.cpp	/^#define qwait /;"	d	file:
range	phreeqcpp/global_structures.h	/^	int range;$/;"	m	struct:inverse
range	phreeqcpp/inverse.cpp	/^range(struct inverse *inv_ptr, unsigned long cur_bits)$/;"	f	class:Phreeqc
range_max	phreeqcpp/global_structures.h	/^	LDBLE range_max;$/;"	m	struct:inverse
rate	phreeqcpp/UserPunch.h	/^	struct rate *             rate;$/;"	m	class:UserPunch	typeref:struct:UserPunch::rate
rate	phreeqcpp/global_structures.h	/^struct rate$/;"	s
rate_bsearch	phreeqcpp/structures.cpp	/^rate_bsearch(char *ptr, int *j)$/;"	f	class:Phreeqc
rate_command_list	phreeqcpp/ChartObject.h	/^	std::list<std::string> rate_command_list;$/;"	m	class:ChartObject
rate_command_list_original	phreeqcpp/ChartObject.h	/^	std::list<std::string> rate_command_list_original;$/;"	m	class:ChartObject
rate_compare	phreeqcpp/structures.cpp	/^rate_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
rate_compare_string	phreeqcpp/structures.cpp	/^rate_compare_string(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
rate_free	phreeqcpp/structures.cpp	/^rate_free(struct rate *rate_ptr)$/;"	f	class:Phreeqc
rate_kin_time	phreeqcpp/Phreeqc.h	/^	LDBLE rate_m, rate_m0, rate_time, rate_kin_time, rate_sim_time_start,$/;"	m	class:Phreeqc
rate_m	phreeqcpp/Phreeqc.h	/^	LDBLE rate_m, rate_m0, rate_time, rate_kin_time, rate_sim_time_start,$/;"	m	class:Phreeqc
rate_m0	phreeqcpp/Phreeqc.h	/^	LDBLE rate_m, rate_m0, rate_time, rate_kin_time, rate_sim_time_start,$/;"	m	class:Phreeqc
rate_moles	phreeqcpp/Phreeqc.h	/^		rate_sim_time_end, rate_sim_time, rate_moles, initial_total_time;$/;"	m	class:Phreeqc
rate_name	phreeqcpp/ChartObject.h	/^	std::string rate_name;$/;"	m	class:ChartObject
rate_name	phreeqcpp/ExchComp.h	/^	std::string rate_name;$/;"	m	class:cxxExchComp
rate_name	phreeqcpp/KineticsComp.h	/^	  std::string rate_name;$/;"	m	class:cxxKineticsComp
rate_name	phreeqcpp/SurfaceComp.h	/^	std::string rate_name;$/;"	m	class:cxxSurfaceComp
rate_new_def	phreeqcpp/ChartObject.h	/^	bool rate_new_def;$/;"	m	class:ChartObject
rate_p	phreeqcpp/Phreeqc.h	/^	std::vector<LDBLE> rate_p;$/;"	m	class:Phreeqc
rate_search	phreeqcpp/structures.cpp	/^rate_search(const char *name_in, int *n)$/;"	f	class:Phreeqc
rate_sim_time	phreeqcpp/Phreeqc.h	/^		rate_sim_time_end, rate_sim_time, rate_moles, initial_total_time;$/;"	m	class:Phreeqc
rate_sim_time_end	phreeqcpp/Phreeqc.h	/^		rate_sim_time_end, rate_sim_time, rate_moles, initial_total_time;$/;"	m	class:Phreeqc
rate_sim_time_start	phreeqcpp/Phreeqc.h	/^	LDBLE rate_m, rate_m0, rate_time, rate_kin_time, rate_sim_time_start,$/;"	m	class:Phreeqc
rate_sort	phreeqcpp/structures.cpp	/^rate_sort(void)$/;"	f	class:Phreeqc
rate_time	phreeqcpp/Phreeqc.h	/^	LDBLE rate_m, rate_m0, rate_time, rate_kin_time, rate_sim_time_start,$/;"	m	class:Phreeqc
rates	phreeqcpp/Phreeqc.h	/^	struct rate *rates;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::rate
rates_map	phreeqcpp/Phreeqc.h	/^	std::map<const char *, int> rates_map;$/;"	m	class:Phreeqc
ratio	phreeqcpp/SolutionIsotope.h	/^	LDBLE ratio;$/;"	m	class:cxxSolutionIsotope
ratio	phreeqcpp/global_structures.h	/^	LDBLE ratio;$/;"	m	struct:isotope_ratio
ratio	phreeqcpp/global_structures.h	/^	LDBLE ratio;$/;"	m	struct:master_isotope
ratio	phreeqcpp/global_structures.h	/^ 	LDBLE ratio;$/;"	m	struct:isotope
ratio_uncertainty	phreeqcpp/SolutionIsotope.h	/^	LDBLE ratio_uncertainty;$/;"	m	class:cxxSolutionIsotope
ratio_uncertainty	phreeqcpp/global_structures.h	/^ 	LDBLE ratio_uncertainty;$/;"	m	struct:isotope
ratio_uncertainty_defined	phreeqcpp/SolutionIsotope.h	/^	bool ratio_uncertainty_defined;$/;"	m	class:cxxSolutionIsotope
reactantList	phreeqcpp/Reaction.h	/^	cxxNameDouble reactantList;$/;"	m	class:cxxReaction
reaction	phreeqcpp/StorageBinList.h	/^	StorageBinListItem reaction;$/;"	m	class:StorageBinList
reaction	phreeqcpp/System.h	/^	cxxReaction * reaction;$/;"	m	class:cxxSystem
reaction	phreeqcpp/global_structures.h	/^	int reaction;$/;"	m	struct:prints
reaction	phreeqcpp/global_structures.h	/^	int reaction;$/;"	m	struct:save
reaction	phreeqcpp/global_structures.h	/^struct reaction$/;"	s
reaction_calc	phreeqcpp/step.cpp	/^reaction_calc(cxxReaction *reaction_ptr)$/;"	f	class:Phreeqc
reaction_in	phreeqcpp/Use.h	/^	bool reaction_in;$/;"	m	class:cxxUse
reaction_ptr	phreeqcpp/Use.h	/^	cxxReaction * reaction_ptr;$/;"	m	class:cxxUse
reaction_step	phreeqcpp/Phreeqc.h	/^	int reaction_step;$/;"	m	class:Phreeqc
reaction_temp	phreeqcpp/global_structures.h	/^struct reaction_temp$/;"	s
reactions	phreeqcpp/global_structures.h	/^	int reactions;$/;"	m	struct:prints
reactions	phreeqcpp/mainsubs.cpp	/^reactions(void)$/;"	f	class:Phreeqc
read	phreeqcpp/ISolutionComp.cxx	/^cxxISolutionComp::STATUS_TYPE cxxISolutionComp::read(CParser & parser,$/;"	f	class:cxxISolutionComp
read	phreeqcpp/ISolutionComp.cxx	/^read(const char *line_in, cxxSolution *solution_ptr)$/;"	f	class:cxxISolutionComp
read	phreeqcpp/Pressure.cxx	/^cxxPressure::read(CParser & parser)$/;"	f	class:cxxPressure
read	phreeqcpp/Temperature.cxx	/^cxxTemperature::read(CParser & parser)$/;"	f	class:cxxTemperature
read_advection	phreeqcpp/read.cpp	/^read_advection(void)$/;"	f	class:Phreeqc
read_analytical_expression_only	phreeqcpp/read.cpp	/^read_analytical_expression_only(char *ptr, LDBLE * log_k)$/;"	f	class:Phreeqc
read_aq_species_vm_parms	phreeqcpp/read.cpp	/^read_aq_species_vm_parms(char *ptr, LDBLE * delta_v)$/;"	f	class:Phreeqc
read_calculate_values	phreeqcpp/isotopes.cpp	/^read_calculate_values(void)$/;"	f	class:Phreeqc
read_copy	phreeqcpp/read.cpp	/^read_copy(void)$/;"	f	class:Phreeqc
read_database	phreeqcpp/mainsubs.cpp	/^read_database(void)$/;"	f	class:Phreeqc
read_debug	phreeqcpp/read.cpp	/^read_debug(void)$/;"	f	class:Phreeqc
read_delete	phreeqcpp/ReadClass.cxx	/^read_delete(void)$/;"	f	class:Phreeqc
read_delta_h_only	phreeqcpp/read.cpp	/^read_delta_h_only(char *ptr, LDBLE * delta_h, DELTA_H_UNIT * units)$/;"	f	class:Phreeqc
read_dump	phreeqcpp/ReadClass.cxx	/^read_dump(void)$/;"	f	class:Phreeqc
read_entity_mix	phreeqcpp/read.cpp	/^read_entity_mix(std::map<int, cxxMix> &mix_map)$/;"	f	class:Phreeqc
read_exchange	phreeqcpp/read.cpp	/^read_exchange(void)$/;"	f	class:Phreeqc
read_exchange_master_species	phreeqcpp/read.cpp	/^read_exchange_master_species(void)$/;"	f	class:Phreeqc
read_exchange_species	phreeqcpp/read.cpp	/^read_exchange_species(void)$/;"	f	class:Phreeqc
read_gas_phase	phreeqcpp/read.cpp	/^read_gas_phase(void)$/;"	f	class:Phreeqc
read_incremental_reactions	phreeqcpp/read.cpp	/^read_incremental_reactions(void)$/;"	f	class:Phreeqc
read_input	phreeqcpp/read.cpp	/^read_input(void)$/;"	f	class:Phreeqc
read_inv_balances	phreeqcpp/read.cpp	/^read_inv_balances(struct inverse *inverse_ptr, char *ptr)$/;"	f	class:Phreeqc
read_inv_isotopes	phreeqcpp/read.cpp	/^read_inv_isotopes(struct inverse *inverse_ptr, char *ptr)$/;"	f	class:Phreeqc
read_inv_phases	phreeqcpp/read.cpp	/^read_inv_phases(struct inverse *inverse_ptr, char *ptr)$/;"	f	class:Phreeqc
read_inverse	phreeqcpp/read.cpp	/^read_inverse(void)$/;"	f	class:Phreeqc
read_isotope_alphas	phreeqcpp/isotopes.cpp	/^read_isotope_alphas(void)$/;"	f	class:Phreeqc
read_isotope_ratios	phreeqcpp/isotopes.cpp	/^read_isotope_ratios(void)$/;"	f	class:Phreeqc
read_isotopes	phreeqcpp/isotopes.cpp	/^read_isotopes(void)$/;"	f	class:Phreeqc
read_kinetics	phreeqcpp/read.cpp	/^read_kinetics(void)$/;"	f	class:Phreeqc
read_line_LDBLEs	phreeqcpp/readtr.cpp	/^read_line_LDBLEs(char *next_char, LDBLE ** d, int *count_d, int *count_alloc)$/;"	f	class:Phreeqc
read_line_doubles	phreeqcpp/read.cpp	/^read_line_doubles(char *next_char, LDBLE ** d, int *count_d, int *count_alloc)$/;"	f	class:Phreeqc
read_lines_doubles	phreeqcpp/read.cpp	/^read_lines_doubles(char *next_char, LDBLE ** d, int *count_d,$/;"	f	class:Phreeqc
read_list_doubles	phreeqcpp/read.cpp	/^read_list_doubles(char **ptr, int *count_doubles)$/;"	f	class:Phreeqc
read_list_ints	phreeqcpp/read.cpp	/^read_list_ints(char **ptr, int *count_ints, int positive)$/;"	f	class:Phreeqc
read_list_ints_range	phreeqcpp/read.cpp	/^read_list_ints_range(char **ptr, int *count_ints, int positive, int *int_list)$/;"	f	class:Phreeqc
read_list_t_f	phreeqcpp/read.cpp	/^read_list_t_f(char **ptr, int *count_ints)$/;"	f	class:Phreeqc
read_llnl_aqueous_model_parameters	phreeqcpp/read.cpp	/^read_llnl_aqueous_model_parameters(void)$/;"	f	class:Phreeqc
read_log_k_only	phreeqcpp/read.cpp	/^read_log_k_only(char *ptr, LDBLE * log_k)$/;"	f	class:Phreeqc
read_master_species	phreeqcpp/read.cpp	/^read_master_species(void)$/;"	f	class:Phreeqc
read_millero_abcdef	phreeqcpp/read.cpp	/^read_millero_abcdef (char *ptr, LDBLE * abcdef)$/;"	f	class:Phreeqc
read_mix	phreeqcpp/read.cpp	/^read_mix(void)$/;"	f	class:Phreeqc
read_named_logk	phreeqcpp/read.cpp	/^read_named_logk(void)$/;"	f	class:Phreeqc
read_number_description	phreeqcpp/NumKeyword.cxx	/^cxxNumKeyword::read_number_description(CParser & parser)$/;"	f	class:cxxNumKeyword
read_number_description	phreeqcpp/NumKeyword.cxx	/^cxxNumKeyword::read_number_description(const std::string & line_in)$/;"	f	class:cxxNumKeyword
read_number_description	phreeqcpp/NumKeyword.cxx	/^cxxNumKeyword::read_number_description(std::istream & is)$/;"	f	class:cxxNumKeyword
read_number_description	phreeqcpp/read.cpp	/^read_number_description(char *ptr, int *n_user,$/;"	f	class:Phreeqc
read_omega_only	phreeqcpp/read.cpp	/^read_omega_only(char *ptr, LDBLE *omega)$/;"	f	class:Phreeqc
read_p_c_only	phreeqcpp/read.cpp	/^read_p_c_only(char *ptr, LDBLE * p_c)$/;"	f	class:Phreeqc
read_phase_vm	phreeqcpp/read.cpp	/^read_phase_vm(char *ptr, LDBLE * delta_v, DELTA_V_UNIT * units)$/;"	f	class:Phreeqc
read_phases	phreeqcpp/read.cpp	/^read_phases(void)$/;"	f	class:Phreeqc
read_pitzer	phreeqcpp/pitzer.cpp	/^read_pitzer(void)$/;"	f	class:Phreeqc
read_pp_assemblage	phreeqcpp/read.cpp	/^read_pp_assemblage(void)$/;"	f	class:Phreeqc
read_print	phreeqcpp/read.cpp	/^read_print(void)$/;"	f	class:Phreeqc
read_rates	phreeqcpp/read.cpp	/^read_rates(void)$/;"	f	class:Phreeqc
read_raw	phreeqcpp/ExchComp.cxx	/^cxxExchComp::read_raw(CParser & parser, bool check)$/;"	f	class:cxxExchComp
read_raw	phreeqcpp/Exchange.cxx	/^cxxExchange::read_raw(CParser & parser, bool check)$/;"	f	class:cxxExchange
read_raw	phreeqcpp/GasComp.cxx	/^cxxGasComp::read_raw(CParser & parser, bool check)$/;"	f	class:cxxGasComp
read_raw	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::read_raw(CParser & parser, bool check)$/;"	f	class:cxxGasPhase
read_raw	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::read_raw(CParser & parser, bool check)$/;"	f	class:cxxKineticsComp
read_raw	phreeqcpp/NameDouble.cxx	/^CParser::STATUS_TYPE cxxNameDouble::read_raw(CParser & parser,$/;"	f	class:cxxNameDouble
read_raw	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::read_raw(CParser & parser, bool check)$/;"	f	class:cxxPPassemblage
read_raw	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::read_raw(CParser & parser, bool check)$/;"	f	class:cxxPPassemblageComp
read_raw	phreeqcpp/Pressure.cxx	/^cxxPressure::read_raw(CParser & parser, bool check)$/;"	f	class:cxxPressure
read_raw	phreeqcpp/Reaction.cxx	/^cxxReaction::read_raw(CParser & parser, const bool check)$/;"	f	class:cxxReaction
read_raw	phreeqcpp/SS.cxx	/^cxxSS::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSS
read_raw	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSSassemblage
read_raw	phreeqcpp/SScomp.cxx	/^cxxSScomp::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSScomp
read_raw	phreeqcpp/Solution.cxx	/^cxxSolution::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSolution
read_raw	phreeqcpp/SolutionIsotope.cxx	/^void cxxSolutionIsotope::read_raw(CParser & parser, bool check )$/;"	f	class:cxxSolutionIsotope
read_raw	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::read_raw(CParser & parser)$/;"	f	class:cxxStorageBin
read_raw	phreeqcpp/Surface.cxx	/^cxxSurface::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSurface
read_raw	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSurfaceCharge
read_raw	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::read_raw(CParser & parser, bool check)$/;"	f	class:cxxSurfaceComp
read_raw	phreeqcpp/Temperature.cxx	/^cxxTemperature::read_raw(CParser & parser, bool check)$/;"	f	class:cxxTemperature
read_raw	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::read_raw(CParser & parser, bool check)$/;"	f	class:cxxKinetics
read_raw	phreeqcpp/cxxMix.cxx	/^cxxMix::read_raw(CParser & parser)$/;"	f	class:cxxMix
read_raw_keyword	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::read_raw_keyword(CParser & parser)$/;"	f	class:cxxStorageBin
read_reaction	phreeqcpp/read.cpp	/^read_reaction(void)$/;"	f	class:Phreeqc
read_reaction_pressure	phreeqcpp/read.cpp	/^read_reaction_pressure(void)$/;"	f	class:Phreeqc
read_reaction_pressure_raw	phreeqcpp/read.cpp	/^read_reaction_pressure_raw(void)$/;"	f	class:Phreeqc
read_reaction_reactants	phreeqcpp/read.cpp	/^read_reaction_reactants(cxxReaction *reaction_ptr)$/;"	f	class:Phreeqc
read_reaction_steps	phreeqcpp/read.cpp	/^read_reaction_steps(cxxReaction *reaction_ptr)$/;"	f	class:Phreeqc
read_run_cells	phreeqcpp/ReadClass.cxx	/^read_run_cells(void)$/;"	f	class:Phreeqc
read_save	phreeqcpp/read.cpp	/^read_save(void)$/;"	f	class:Phreeqc
read_selected_output	phreeqcpp/read.cpp	/^read_selected_output(void)$/;"	f	class:Phreeqc
read_sit	phreeqcpp/sit.cpp	/^read_sit(void)$/;"	f	class:Phreeqc
read_solid_solutions	phreeqcpp/read.cpp	/^read_solid_solutions(void)$/;"	f	class:Phreeqc
read_solution	phreeqcpp/read.cpp	/^read_solution(void)$/;"	f	class:Phreeqc
read_solution_mix	phreeqcpp/read.cpp	/^read_solution_mix(void)$/;"	f	class:Phreeqc
read_solution_spread	phreeqcpp/spread.cpp	/^read_solution_spread(void)$/;"	f	class:Phreeqc
read_species	phreeqcpp/read.cpp	/^read_species(void)$/;"	f	class:Phreeqc
read_surface	phreeqcpp/read.cpp	/^read_surface(void)$/;"	f	class:Phreeqc
read_surface_master_species	phreeqcpp/read.cpp	/^read_surface_master_species(void)$/;"	f	class:Phreeqc
read_surface_species	phreeqcpp/read.cpp	/^read_surface_species(void)$/;"	f	class:Phreeqc
read_t_c_only	phreeqcpp/read.cpp	/^read_t_c_only(char *ptr, LDBLE *t_c)$/;"	f	class:Phreeqc
read_temperature	phreeqcpp/read.cpp	/^read_temperature(void)$/;"	f	class:Phreeqc
read_title	phreeqcpp/read.cpp	/^read_title(void)$/;"	f	class:Phreeqc
read_transport	phreeqcpp/readtr.cpp	/^read_transport(void)$/;"	f	class:Phreeqc
read_use	phreeqcpp/read.cpp	/^read_use(void)$/;"	f	class:Phreeqc
read_user_graph	phreeqcpp/read.cpp	/^read_user_graph(void)$/;"	f	class:Phreeqc
read_user_graph_handler	phreeqcpp/ReadClass.cxx	/^read_user_graph_handler(void)$/;"	f	class:Phreeqc
read_user_print	phreeqcpp/read.cpp	/^read_user_print(void)$/;"	f	class:Phreeqc
read_user_punch	phreeqcpp/read.cpp	/^read_user_punch(void)$/;"	f	class:Phreeqc
read_vm_only	phreeqcpp/read.cpp	/^read_vm_only(char *ptr, LDBLE * delta_v, DELTA_V_UNIT * units)$/;"	f	class:Phreeqc
reading_database	phreeqcpp/input.cpp	/^reading_database(void)$/;"	f	class:Phreeqc
reading_db	phreeqcpp/Phreeqc.h	/^	int reading_db;$/;"	m	class:Phreeqc
realexpr	phreeqcpp/PBasic.cpp	/^realexpr(struct LOC_exec *LINK)$/;"	f	class:PBasic
realfactor	phreeqcpp/PBasic.cpp	/^realfactor(struct LOC_exec *LINK)$/;"	f	class:PBasic
realtype	phreeqcpp/sundialstypes.h	/^	typedef LDBLE realtype;$/;"	t
redox	phreeqcpp/global_structures.h	/^	const char *redox;$/;"	m	struct:defaults
reformat_surf	phreeqcpp/transport.cpp	/^reformat_surf(const char *comp_name, LDBLE fraction, const char *new_comp_name,$/;"	f	class:Phreeqc
register_basic_callback	phreeqcpp/basicsubs.cpp	/^Phreeqc::register_basic_callback(double (*fcn)(double x1, double x2, const char *str, void *cookie), void *cookie1)$/;"	f	class:Phreeqc
register_fortran_basic_callback	phreeqcpp/basicsubs.cpp	/^Phreeqc::register_fortran_basic_callback(double ( *fcn)(double *x1, double *x2, char *str, size_t l))$/;"	f	class:Phreeqc
register_fortran_basic_callback	phreeqcpp/basicsubs.cpp	/^Phreeqc::register_fortran_basic_callback(double ( *fcn)(double *x1, double *x2, const char *str, int l))$/;"	f	class:Phreeqc
reinitialize	phreeqcpp/structures.cpp	/^reinitialize(void)$/;"	f	class:Phreeqc
related_moles	phreeqcpp/global_structures.h	/^	LDBLE related_moles;$/;"	m	struct:unknown
relexpr	phreeqcpp/PBasic.cpp	/^relexpr(struct LOC_exec * LINK)$/;"	f	class:PBasic
reltol	phreeqcpp/cvode.cpp	/^#define reltol /;"	d	file:
remove_unstable_phases	phreeqcpp/Phreeqc.h	/^	int remove_unstable_phases;$/;"	m	class:Phreeqc
replace	phreeqcpp/common/Utils.cxx	/^Utilities::replace(const char *str1, const char *str2, std::string & str)$/;"	f	class:Utilities
replace	phreeqcpp/utilities.cpp	/^replace(const char *str1, const char *str2, char *str)$/;"	f	class:Phreeqc
replace	phreeqcpp/utilities.cpp	/^replace(const char *str1, const char *str2, std::string & str)$/;"	f	class:Phreeqc
replace_solids_gases	phreeqcpp/tidy.cpp	/^replace_solids_gases(void)$/;"	f	class:Phreeqc
replaced	phreeqcpp/global_structures.h	/^	int replaced;               \/* equation contains solids or gases *\/$/;"	m	struct:phase
reprep	phreeqcpp/prep.cpp	/^reprep(void)$/;"	f	class:Phreeqc
require	phreeqcpp/PBasic.cpp	/^require(int k, struct LOC_exec *LINK)$/;"	f	class:PBasic
res	phreeqcpp/Phreeqc.h	/^	LDBLE *normal, *ineq_array, *res, *cu, *zero, *delta1;$/;"	m	class:Phreeqc
res_arg	phreeqcpp/Phreeqc.h	/^	LDBLE *x_arg, *res_arg, *scratch;$/;"	m	class:Phreeqc
res_arg_max	phreeqcpp/Phreeqc.h	/^	int x_arg_max, res_arg_max, scratch_max;$/;"	m	class:Phreeqc
res_max	phreeqcpp/Phreeqc.h	/^	int normal_max, ineq_array_max, res_max, cu_max, zero_max,$/;"	m	class:Phreeqc
reset	phreeqcpp/model.cpp	/^reset(void)$/;"	f	class:Phreeqc
reset_last_model	phreeqcpp/tidy.cpp	/^reset_last_model(void)$/;"	f	class:Phreeqc
resetup_master	phreeqcpp/prep.cpp	/^resetup_master(void)$/;"	f	class:Phreeqc
residual	phreeqcpp/Phreeqc.h	/^	LDBLE *residual;$/;"	m	class:Phreeqc
residuals	phreeqcpp/model.cpp	/^residuals(void)$/;"	f	class:Phreeqc
restoredata	phreeqcpp/PBasic.cpp	/^restoredata(void)$/;"	f	class:PBasic
revise_guesses	phreeqcpp/model.cpp	/^revise_guesses(void)$/;"	f	class:Phreeqc
rewrite_eqn_to_primary	phreeqcpp/tidy.cpp	/^rewrite_eqn_to_primary(void)$/;"	f	class:Phreeqc
rewrite_eqn_to_secondary	phreeqcpp/tidy.cpp	/^rewrite_eqn_to_secondary(void)$/;"	f	class:Phreeqc
rewrite_master_to_secondary	phreeqcpp/prep.cpp	/^rewrite_master_to_secondary(struct master *master_ptr1,$/;"	f	class:Phreeqc
rho_0	phreeqcpp/Phreeqc.h	/^	LDBLE V_solutes, rho_0, rho_0_sat, kappa_0, p_sat\/*, ah2o_x0*\/;$/;"	m	class:Phreeqc
rho_0_sat	phreeqcpp/Phreeqc.h	/^	LDBLE V_solutes, rho_0, rho_0_sat, kappa_0, p_sat\/*, ah2o_x0*\/;$/;"	m	class:Phreeqc
rk	phreeqcpp/cxxKinetics.h	/^	int rk;$/;"	m	class:cxxKinetics
rk_kinetics	phreeqcpp/kinetics.cpp	/^rk_kinetics(int i, LDBLE kin_time, int use_mix, int nsaver,$/;"	f	class:Phreeqc
rk_moles	phreeqcpp/Phreeqc.h	/^	LDBLE *rk_moles;$/;"	m	class:Phreeqc
rl1	phreeqcpp/cvode.cpp	/^#define rl1 /;"	d	file:
ropt	phreeqcpp/cvode.cpp	/^#define ropt /;"	d	file:
row	phreeqcpp/global_structures.h	/^	int row;$/;"	m	struct:inv_elts
row_back	phreeqcpp/Phreeqc.h	/^	int *row_back, *col_back;$/;"	m	class:Phreeqc
row_carbon	phreeqcpp/Phreeqc.h	/^	int row_mb, row_fract, row_charge, row_carbon, row_isotopes,$/;"	m	class:Phreeqc
row_charge	phreeqcpp/Phreeqc.h	/^	int row_mb, row_fract, row_charge, row_carbon, row_isotopes,$/;"	m	class:Phreeqc
row_epsilon	phreeqcpp/Phreeqc.h	/^		row_epsilon, row_isotope_epsilon, row_water;$/;"	m	class:Phreeqc
row_fract	phreeqcpp/Phreeqc.h	/^	int row_mb, row_fract, row_charge, row_carbon, row_isotopes,$/;"	m	class:Phreeqc
row_isotope_epsilon	phreeqcpp/Phreeqc.h	/^		row_epsilon, row_isotope_epsilon, row_water;$/;"	m	class:Phreeqc
row_isotopes	phreeqcpp/Phreeqc.h	/^	int row_mb, row_fract, row_charge, row_carbon, row_isotopes,$/;"	m	class:Phreeqc
row_mb	phreeqcpp/Phreeqc.h	/^	int row_mb, row_fract, row_charge, row_carbon, row_isotopes,$/;"	m	class:Phreeqc
row_name	phreeqcpp/Phreeqc.h	/^	const char **col_name, **row_name;$/;"	m	class:Phreeqc
row_water	phreeqcpp/Phreeqc.h	/^		row_epsilon, row_isotope_epsilon, row_water;$/;"	m	class:Phreeqc
rownr	phreeqcpp/Phreeqc.h	/^	int colnr, rownr;$/;"	m	class:Phreeqc
rows	phreeqcpp/global_structures.h	/^	struct spread_row **rows;$/;"	m	struct:spread_sheet	typeref:struct:spread_sheet::spread_row
run_as_cells	phreeqcpp/ReadClass.cxx	/^run_as_cells(void)$/;"	f	class:Phreeqc
run_cells	phreeqcpp/runner.h	/^	bool run_cells;$/;"	m	class:runner
run_cells_one_step	phreeqcpp/Phreeqc.h	/^	bool run_cells_one_step;$/;"	m	class:Phreeqc
run_info	phreeqcpp/Phreeqc.h	/^	runner run_info;$/;"	m	class:Phreeqc
run_reactions	phreeqcpp/kinetics.cpp	/^run_reactions(int i, LDBLE kin_time, int use_mix, LDBLE step_fraction)$/;"	f	class:Phreeqc
run_reactions_iterations	phreeqcpp/Phreeqc.h	/^	int run_reactions_iterations;$/;"	m	class:Phreeqc
run_simulations	phreeqcpp/mainsubs.cpp	/^run_simulations(void)$/;"	f	class:Phreeqc
runner	phreeqcpp/runner.cpp	/^runner::runner(CParser & parser, PHRQ_io *io)$/;"	f	class:runner
runner	phreeqcpp/runner.cpp	/^runner::runner(PHRQ_io *io)$/;"	f	class:runner
runner	phreeqcpp/runner.h	/^class runner: public PHRQ_base$/;"	c
rv	phreeqcpp/PBasic.h	/^			LDBLE *val, rv;$/;"	m	struct:varrec::__anon22::__anon23
rxn	phreeqcpp/SelectedOutput.h	/^	bool rxn;$/;"	m	class:SelectedOutput
rxn	phreeqcpp/global_structures.h	/^	int rxn;$/;"	m	struct:punch
rxn	phreeqcpp/global_structures.h	/^	struct reaction *rxn;		\/* pointer to data base reaction *\/$/;"	m	struct:phase	typeref:struct:phase::reaction
rxn	phreeqcpp/global_structures.h	/^	struct reaction *rxn;		\/* pointer to data base reaction *\/$/;"	m	struct:species	typeref:struct:species::reaction
rxn_alloc	phreeqcpp/structures.cpp	/^rxn_alloc(int ntokens)$/;"	f	class:Phreeqc
rxn_dup	phreeqcpp/structures.cpp	/^rxn_dup(struct reaction *rxn_ptr_old)$/;"	f	class:Phreeqc
rxn_find_coef	phreeqcpp/structures.cpp	/^rxn_find_coef(struct reaction * r_ptr, const char *str)$/;"	f	class:Phreeqc
rxn_free	phreeqcpp/structures.cpp	/^rxn_free(struct reaction *rxn_ptr)$/;"	f	class:Phreeqc
rxn_primary	phreeqcpp/global_structures.h	/^ 	struct reaction *rxn_primary;	\/* reaction writes master species in terms of primary$/;"	m	struct:master	typeref:struct:master::reaction
rxn_print	phreeqcpp/structures.cpp	/^rxn_print(struct reaction *rxn_ptr)$/;"	f	class:Phreeqc
rxn_s	phreeqcpp/global_structures.h	/^	struct reaction *rxn_s;		\/* pointer to reaction converted to secondary and primary$/;"	m	struct:phase	typeref:struct:phase::reaction
rxn_s	phreeqcpp/global_structures.h	/^	struct reaction *rxn_s;		\/* pointer to reaction converted to secondary and primary$/;"	m	struct:species	typeref:struct:species::reaction
rxn_secondary	phreeqcpp/global_structures.h	/^ 	struct reaction *rxn_secondary;	\/* reaction writes master species in terms of secondary$/;"	m	struct:master	typeref:struct:master::reaction
rxn_token	phreeqcpp/global_structures.h	/^struct rxn_token$/;"	s
rxn_token_temp	phreeqcpp/global_structures.h	/^struct rxn_token_temp$/;"	s
rxn_token_temp_compare	phreeqcpp/structures.cpp	/^rxn_token_temp_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
rxn_x	phreeqcpp/global_structures.h	/^	struct reaction *rxn_x;		\/* reaction to be used in model *\/$/;"	m	struct:phase	typeref:struct:phase::reaction
rxn_x	phreeqcpp/global_structures.h	/^	struct reaction *rxn_x;		\/* reaction to be used in model *\/$/;"	m	struct:species	typeref:struct:species::reaction
s	phreeqcpp/Phreeqc.h	/^	struct species **s;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s	phreeqcpp/global_structures.h	/^	struct species *s;$/;"	m	struct:name_species	typeref:struct:name_species::species
s	phreeqcpp/global_structures.h	/^	struct species *s;$/;"	m	struct:rxn_token	typeref:struct:rxn_token::species
s	phreeqcpp/global_structures.h	/^	struct species *s;$/;"	m	struct:rxn_token_temp	typeref:struct:rxn_token_temp::species
s	phreeqcpp/global_structures.h	/^	struct species *s;$/;"	m	struct:species_list	typeref:struct:species_list::species
s	phreeqcpp/global_structures.h	/^	struct species *s;$/;"	m	struct:unknown	typeref:struct:unknown::species
s	phreeqcpp/global_structures.h	/^ 	struct species *s;			\/* pointer to species structure *\/$/;"	m	struct:master	typeref:struct:master::species
sVal	Var.h	/^		char*   sVal;      \/*!< valid when <code>(type == TT_STRING)<\/code> *\/$/;"	m	union:__anon31::__anon32
s_alloc	phreeqcpp/structures.cpp	/^s_alloc(void)$/;"	f	class:Phreeqc
s_co3	phreeqcpp/Phreeqc.h	/^	struct species *s_co3;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_compare	phreeqcpp/structures.cpp	/^s_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
s_delete	phreeqcpp/structures.cpp	/^s_delete(int i)$/;"	f	class:Phreeqc
s_diff_layer	phreeqcpp/Phreeqc.h	/^	std::vector< std::map < std::string, cxxSpeciesDL > > s_diff_layer;$/;"	m	class:Phreeqc
s_eminus	phreeqcpp/Phreeqc.h	/^	struct species *s_eminus;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_free	phreeqcpp/structures.cpp	/^s_free(struct species *s_ptr)$/;"	f	class:Phreeqc
s_h2	phreeqcpp/Phreeqc.h	/^	struct species *s_h2;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_h2o	phreeqcpp/Phreeqc.h	/^	struct species *s_h2o;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_h3oplus	phreeqcpp/Phreeqc.h	/^	struct species *s_h3oplus;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_hplus	phreeqcpp/Phreeqc.h	/^	struct species *s_hplus;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_init	phreeqcpp/structures.cpp	/^s_init(struct species *s_ptr)$/;"	f	class:Phreeqc
s_instance	CSelectedOutput.hxx	/^	static CSelectedOutput* s_instance;$/;"	m	class:CSelectedOutput
s_list	phreeqcpp/Phreeqc.h	/^	std::vector<int> s_list, cation_list, neutral_list, anion_list, ion_list, param_list;$/;"	m	class:Phreeqc
s_o2	phreeqcpp/Phreeqc.h	/^	struct species *s_o2;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
s_pTail	phreeqcpp/Phreeqc.h	/^	PHRQMemHeader *s_pTail;$/;"	m	class:Phreeqc
s_s	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > s_s;$/;"	m	class:SelectedOutput
s_s	phreeqcpp/global_structures.h	/^	struct name_phase *s_s;$/;"	m	struct:punch	typeref:struct:punch::name_phase
s_search	phreeqcpp/structures.cpp	/^s_search(const char *name)$/;"	f	class:Phreeqc
s_store	phreeqcpp/structures.cpp	/^s_store(const char *name, LDBLE l_z, int replace_if_found)$/;"	f	class:Phreeqc
s_x	phreeqcpp/Phreeqc.h	/^	struct species **s_x;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
sa_declercq	phreeqcpp/basicsubs.cpp	/^sa_declercq(double sa_type, double Sa, double d, double m, double m0, double gfw)$/;"	f	class:Phreeqc
safe_close	phreeqcpp/common/PHRQ_io.cpp	/^safe_close(FILE **file_ptr)$/;"	f	class:PHRQ_io
safe_close	phreeqcpp/common/PHRQ_io.cpp	/^safe_close(std::ostream **stream_ptr)$/;"	f	class:PHRQ_io
safe_exp	phreeqcpp/common/Utils.cxx	/^Utilities::safe_exp(LDBLE t)$/;"	f	class:Utilities
same_model	phreeqcpp/Phreeqc.h	/^	int same_model;$/;"	m	class:Phreeqc
sarr	phreeqcpp/PBasic.h	/^			char **sarr;$/;"	m	struct:varrec::__anon22::__anon24
saturation_index	phreeqcpp/basicsubs.cpp	/^saturation_index(const char *phase_name, LDBLE * iap, LDBLE * si)$/;"	f	class:Phreeqc
saturation_indices	phreeqcpp/global_structures.h	/^	int saturation_indices;$/;"	m	struct:prints
saturation_ratio	phreeqcpp/basicsubs.cpp	/^saturation_ratio(const char *phase_name)$/;"	f	class:Phreeqc
save	phreeqcpp/Phreeqc.h	/^	struct save save;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::save
save	phreeqcpp/global_structures.h	/^struct save$/;"	s
save_bad	phreeqcpp/inverse.cpp	/^save_bad(unsigned long bits)$/;"	f	class:Phreeqc
save_good	phreeqcpp/inverse.cpp	/^save_good(unsigned long bits)$/;"	f	class:Phreeqc
save_init	phreeqcpp/mainsubs.cpp	/^save_init(int i)$/;"	f	class:Phreeqc
save_minimal	phreeqcpp/inverse.cpp	/^save_minimal(unsigned long bits)$/;"	f	class:Phreeqc
save_model	phreeqcpp/prep.cpp	/^save_model(void)$/;"	f	class:Phreeqc
save_species	phreeqcpp/Phreeqc.h	/^	bool save_species;$/;"	m	class:Phreeqc
save_values	phreeqcpp/Phreeqc.h	/^	struct save_values *save_values;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::save_values
save_values	phreeqcpp/global_structures.h	/^struct save_values$/;"	s
save_values_bsearch	phreeqcpp/structures.cpp	/^save_values_bsearch(struct save_values *k, int *n)$/;"	f	class:Phreeqc
save_values_compare	phreeqcpp/structures.cpp	/^save_values_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
save_values_sort	phreeqcpp/structures.cpp	/^save_values_sort(void)$/;"	f	class:Phreeqc
save_values_store	phreeqcpp/structures.cpp	/^save_values_store(struct save_values *s_v)$/;"	f	class:Phreeqc
savedJ	phreeqcpp/cvdense.cpp	/^#define savedJ /;"	d	file:
saved_tq5	phreeqcpp/cvode.cpp	/^#define saved_tq5 /;"	d	file:
saver	phreeqcpp/mainsubs.cpp	/^saver(void)$/;"	f	class:Phreeqc
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scaled_error	phreeqcpp/Phreeqc.h	/^	LDBLE toler, error, max_pct, scaled_error;$/;"	m	class:Phreeqc
scratch	phreeqcpp/Phreeqc.h	/^	LDBLE *x_arg, *res_arg, *scratch;$/;"	m	class:Phreeqc
scratch_max	phreeqcpp/Phreeqc.h	/^	int x_arg_max, res_arg_max, scratch_max;$/;"	m	class:Phreeqc
screen_msg	IPhreeqc.cpp	/^void IPhreeqc::screen_msg(const char *err_str)$/;"	f	class:IPhreeqc
screen_msg	phreeqcpp/PHRQ_io_output.cpp	/^screen_msg(const char *err_str)$/;"	f	class:Phreeqc
screen_msg	phreeqcpp/common/PHRQ_base.cxx	/^screen_msg(const std::string & stdstr)$/;"	f	class:PHRQ_base
screen_msg	phreeqcpp/common/PHRQ_io.cpp	/^screen_msg(const char * str)$/;"	f	class:PHRQ_io
screen_on	phreeqcpp/common/PHRQ_io.h	/^	bool screen_on;$/;"	m	class:PHRQ_io
screen_string	phreeqcpp/Phreeqc.h	/^	std::string screen_string;$/;"	m	class:Phreeqc
secondary	phreeqcpp/global_structures.h	/^	struct master *secondary;	\/* points to master species list, NULL if not secondary master *\/$/;"	m	struct:species	typeref:struct:species::master
secondary_y	phreeqcpp/ChartObject.h	/^	std::map<int, bool> secondary_y;$/;"	m	class:ChartObject
sel_file_name	IPhreeqc.cpp	/^std::string IPhreeqc::sel_file_name(int n_user)$/;"	f	class:IPhreeqc
select_log_k_expression	phreeqcpp/tidy.cpp	/^select_log_k_expression(LDBLE * source_k, LDBLE * target_k)$/;"	f	class:Phreeqc
set	phreeqcpp/model.cpp	/^set(int initial)$/;"	f	class:Phreeqc
set_accumulate	phreeqcpp/common/Parser.h	/^	void set_accumulate(bool tf) $/;"	f	class:CParser
set_advection	phreeqcpp/kinetics.cpp	/^set_advection(int i, int use_mix, int use_kinetics, int nsaver)$/;"	f	class:Phreeqc
set_alk	phreeqcpp/SelectedOutput.h	/^	bool set_alk;$/;"	m	class:SelectedOutput
set_and_run	phreeqcpp/kinetics.cpp	/^set_and_run(int i, int use_mix, int use_kinetics, int nsaver,$/;"	f	class:Phreeqc
set_and_run_attempt	phreeqcpp/Phreeqc.h	/^	int set_and_run_attempt;$/;"	m	class:Phreeqc
set_and_run_wrapper	phreeqcpp/kinetics.cpp	/^set_and_run_wrapper(int i, int use_mix, int use_kinetics, int nsaver,$/;"	f	class:Phreeqc
set_bit	phreeqcpp/inverse.cpp	/^set_bit(unsigned long bits, int position, int value)$/;"	f	class:Phreeqc
set_charge_balance	phreeqcpp/SelectedOutput.h	/^	bool set_charge_balance;$/;"	m	class:SelectedOutput
set_dist	phreeqcpp/SelectedOutput.h	/^	bool set_dist;$/;"	m	class:SelectedOutput
set_echo_file	phreeqcpp/common/Parser.h	/^	void set_echo_file(ECHO_OPTION opt)$/;"	f	class:CParser
set_echo_stream	phreeqcpp/common/Parser.h	/^	void set_echo_stream(ECHO_OPTION opt)$/;"	f	class:CParser
set_forward_output_to_log	phreeqcpp/PHRQ_io_output.cpp	/^set_forward_output_to_log(int value)$/;"	f	class:Phreeqc
set_gfw	phreeqcpp/ISolutionComp.cxx	/^cxxISolutionComp::set_gfw(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxISolutionComp
set_high_precision	phreeqcpp/SelectedOutput.h	/^	bool set_high_precision;$/;"	m	class:SelectedOutput
set_inert_moles	phreeqcpp/model.cpp	/^set_inert_moles(void)$/;"	f	class:Phreeqc
set_initial_moles	phreeqcpp/transport.cpp	/^set_initial_moles(int i)$/;"	f	class:Phreeqc
set_initial_solution	phreeqcpp/inverse.cpp	/^set_initial_solution(int n_user_old, int n_user_new)$/;"	f	class:Phreeqc
set_inverse	phreeqcpp/SelectedOutput.h	/^	bool set_inverse;$/;"	m	class:SelectedOutput
set_kinetics_time	phreeqcpp/tally.cpp	/^set_kinetics_time(int n_user, LDBLE step)$/;"	f	class:Phreeqc
set_mu	phreeqcpp/SelectedOutput.h	/^	bool set_mu;$/;"	m	class:SelectedOutput
set_pe	phreeqcpp/SelectedOutput.h	/^	bool set_pe;$/;"	m	class:SelectedOutput
set_percent_error	phreeqcpp/SelectedOutput.h	/^	bool set_percent_error;$/;"	m	class:SelectedOutput
set_ph	phreeqcpp/SelectedOutput.h	/^	bool set_ph;$/;"	m	class:SelectedOutput
set_ph_c	phreeqcpp/inverse.cpp	/^set_ph_c(struct inverse *inv_ptr,$/;"	f	class:Phreeqc
set_phast	phreeqcpp/Phreeqc.cpp	/^void Phreeqc::set_phast(int tf)$/;"	f	class:Phreeqc
set_pr_in_false	phreeqcpp/print.cpp	/^set_pr_in_false(void)$/;"	f	class:Phreeqc
set_pz	phreeqcpp/pitzer.cpp	/^set_pz(int initial)$/;"	f	class:Phreeqc
set_reaction	phreeqcpp/kinetics.cpp	/^set_reaction(int i, int use_mix, int use_kinetics)$/;"	f	class:Phreeqc
set_reaction_moles	phreeqcpp/tally.cpp	/^set_reaction_moles(int n_user, LDBLE moles)$/;"	f	class:Phreeqc
set_reaction_temperature	phreeqcpp/tally.cpp	/^set_reaction_temperature(int n_user, LDBLE tc)$/;"	f	class:Phreeqc
set_reading_database	phreeqcpp/input.cpp	/^set_reading_database(int reading_database)$/;"	f	class:Phreeqc
set_rxn	phreeqcpp/SelectedOutput.h	/^	bool set_rxn;$/;"	m	class:SelectedOutput
set_sim	phreeqcpp/SelectedOutput.h	/^	bool set_sim;$/;"	m	class:SelectedOutput
set_sit	phreeqcpp/sit.cpp	/^set_sit(int initial)$/;"	f	class:Phreeqc
set_soln	phreeqcpp/SelectedOutput.h	/^	bool set_soln;$/;"	m	class:SelectedOutput
set_state	phreeqcpp/SelectedOutput.h	/^	bool set_state;$/;"	m	class:SelectedOutput
set_step	phreeqcpp/SelectedOutput.h	/^	bool set_step;$/;"	m	class:SelectedOutput
set_temp	phreeqcpp/SelectedOutput.h	/^	bool set_temp;$/;"	m	class:SelectedOutput
set_time	phreeqcpp/SelectedOutput.h	/^	bool set_time;$/;"	m	class:SelectedOutput
set_transport	phreeqcpp/kinetics.cpp	/^set_transport(int i, int use_mix, int use_kinetics, int nsaver)$/;"	f	class:Phreeqc
set_use	phreeqcpp/mainsubs.cpp	/^set_use(void)$/;"	f	class:Phreeqc
set_user_punch	phreeqcpp/SelectedOutput.h	/^	bool set_user_punch;$/;"	m	class:SelectedOutput
set_water	phreeqcpp/SelectedOutput.h	/^	bool set_water;$/;"	m	class:SelectedOutput
setupNonNull	phreeqcpp/cvdense.cpp	/^#define setupNonNull /;"	d	file:
setupNonNull	phreeqcpp/cvode.cpp	/^#define setupNonNull /;"	d	file:
setup_exchange	phreeqcpp/prep.cpp	/^setup_exchange(void)$/;"	f	class:Phreeqc
setup_fixed_volume_gas	phreeqcpp/gases.cpp	/^setup_fixed_volume_gas(void)$/;"	f	class:Phreeqc
setup_gas_phase	phreeqcpp/prep.cpp	/^setup_gas_phase(void)$/;"	f	class:Phreeqc
setup_inverse	phreeqcpp/inverse.cpp	/^setup_inverse(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
setup_master_rxn	phreeqcpp/prep.cpp	/^setup_master_rxn(struct master **master_ptr_list, const std::string &pe_rxn)$/;"	f	class:Phreeqc
setup_pure_phases	phreeqcpp/prep.cpp	/^setup_pure_phases(void)$/;"	f	class:Phreeqc
setup_related_surface	phreeqcpp/prep.cpp	/^setup_related_surface(void)$/;"	f	class:Phreeqc
setup_solution	phreeqcpp/prep.cpp	/^setup_solution(void)$/;"	f	class:Phreeqc
setup_ss_assemblage	phreeqcpp/prep.cpp	/^setup_ss_assemblage(void)$/;"	f	class:Phreeqc
setup_surface	phreeqcpp/prep.cpp	/^setup_surface(void)$/;"	f	class:Phreeqc
setup_unknowns	phreeqcpp/prep.cpp	/^setup_unknowns(void)$/;"	f	class:Phreeqc
sexpr	phreeqcpp/PBasic.cpp	/^sexpr(struct LOC_exec * LINK)$/;"	f	class:PBasic
sformatf	phreeqcpp/print.cpp	/^sformatf(const char *format, ...)$/;"	f	class:Phreeqc
sformatf_buffer	phreeqcpp/Phreeqc.h	/^	char * sformatf_buffer;$/;"	m	class:Phreeqc
sformatf_buffer_size	phreeqcpp/Phreeqc.h	/^	size_t sformatf_buffer_size;$/;"	m	class:Phreeqc
sget_logical_line	phreeqcpp/PBasic.cpp	/^sget_logical_line(char **ptr, int *l, char *return_line)$/;"	f	class:PBasic
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shifts_as_points	phreeqcpp/ChartObject.h	/^	int shifts_as_points;$/;"	m	class:ChartObject
shifts_as_points	phreeqcpp/Phreeqc.h	/^	int shifts_as_points;$/;"	m	class:Phreeqc
shrink	phreeqcpp/inverse.cpp	/^shrink(struct inverse *inv_ptr, LDBLE * array_in, LDBLE * array_out,$/;"	f	class:Phreeqc
si	phreeqcpp/PPassemblageComp.h	/^	LDBLE si;$/;"	m	class:cxxPPassemblageComp
si	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > si;$/;"	m	class:SelectedOutput
si	phreeqcpp/global_structures.h	/^	LDBLE *si;$/;"	m	struct:model
si	phreeqcpp/global_structures.h	/^	LDBLE si;$/;"	m	struct:unknown
si	phreeqcpp/global_structures.h	/^	struct name_phase *si;$/;"	m	struct:punch	typeref:struct:punch::name_phase
si_org	phreeqcpp/PPassemblageComp.h	/^	LDBLE si_org;$/;"	m	class:cxxPPassemblageComp
sigma0	phreeqcpp/SurfaceCharge.h	/^	LDBLE sigma0, sigma1, sigma2, sigmaddl;$/;"	m	class:cxxSurfaceCharge
sigma1	phreeqcpp/SurfaceCharge.h	/^	LDBLE sigma0, sigma1, sigma2, sigmaddl;$/;"	m	class:cxxSurfaceCharge
sigma2	phreeqcpp/SurfaceCharge.h	/^	LDBLE sigma0, sigma1, sigma2, sigmaddl;$/;"	m	class:cxxSurfaceCharge
sigmaddl	phreeqcpp/SurfaceCharge.h	/^	LDBLE sigma0, sigma1, sigma2, sigmaddl;$/;"	m	class:cxxSurfaceCharge
sim	phreeqcpp/SelectedOutput.h	/^	bool sim;$/;"	m	class:SelectedOutput
sim	phreeqcpp/global_structures.h	/^	int sim;$/;"	m	struct:punch
simul_tr	phreeqcpp/Phreeqc.h	/^	int simul_tr;$/;"	m	class:Phreeqc
simulation	phreeqcpp/Phreeqc.h	/^	int simulation;$/;"	m	class:Phreeqc
sit	phreeqcpp/sit.cpp	/^sit(void)$/;"	f	class:Phreeqc
sit_A0	phreeqcpp/Phreeqc.h	/^	LDBLE sit_A0;$/;"	m	class:Phreeqc
sit_FIRSTANION	phreeqcpp/Phreeqc.h	/^	int sit_MAXCATIONS, sit_FIRSTANION, sit_MAXNEUTRAL;$/;"	m	class:Phreeqc
sit_IPRSNT	phreeqcpp/Phreeqc.h	/^	int *sit_IPRSNT;$/;"	m	class:Phreeqc
sit_ISPEC	phreeqcpp/sit.cpp	/^sit_ISPEC(const char *name)$/;"	f	class:Phreeqc
sit_LGAMMA	phreeqcpp/Phreeqc.h	/^	LDBLE *sit_M, *sit_LGAMMA;$/;"	m	class:Phreeqc
sit_M	phreeqcpp/Phreeqc.h	/^	LDBLE *sit_M, *sit_LGAMMA;$/;"	m	class:Phreeqc
sit_MAXCATIONS	phreeqcpp/Phreeqc.h	/^	int sit_MAXCATIONS, sit_FIRSTANION, sit_MAXNEUTRAL;$/;"	m	class:Phreeqc
sit_MAXNEUTRAL	phreeqcpp/Phreeqc.h	/^	int sit_MAXCATIONS, sit_FIRSTANION, sit_MAXNEUTRAL;$/;"	m	class:Phreeqc
sit_clean_up	phreeqcpp/sit.cpp	/^sit_clean_up(void)$/;"	f	class:Phreeqc
sit_count_anions	phreeqcpp/Phreeqc.h	/^	int sit_count_cations, sit_count_anions, sit_count_neutrals;$/;"	m	class:Phreeqc
sit_count_cations	phreeqcpp/Phreeqc.h	/^	int sit_count_cations, sit_count_anions, sit_count_neutrals;$/;"	m	class:Phreeqc
sit_count_neutrals	phreeqcpp/Phreeqc.h	/^	int sit_count_cations, sit_count_anions, sit_count_neutrals;$/;"	m	class:Phreeqc
sit_init	phreeqcpp/sit.cpp	/^sit_init(void)$/;"	f	class:Phreeqc
sit_initial_guesses	phreeqcpp/sit.cpp	/^sit_initial_guesses(void)$/;"	f	class:Phreeqc
sit_make_lists	phreeqcpp/sit.cpp	/^sit_make_lists(void)$/;"	f	class:Phreeqc
sit_model	phreeqcpp/Phreeqc.h	/^	int pitzer_model, sit_model, pitzer_pe;$/;"	m	class:Phreeqc
sit_param_map	phreeqcpp/Phreeqc.h	/^	std::map< std::string, size_t > sit_param_map;$/;"	m	class:Phreeqc
sit_param_store	phreeqcpp/pitzer_structures.cpp	/^sit_param_store(struct pitz_param *pzp_ptr, bool force_copy)$/;"	f	class:Phreeqc
sit_params	phreeqcpp/Phreeqc.h	/^	struct pitz_param **sit_params;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::pitz_param
sit_revise_guesses	phreeqcpp/sit.cpp	/^sit_revise_guesses(void)$/;"	f	class:Phreeqc
sit_tidy	phreeqcpp/sit.cpp	/^sit_tidy(void)$/;"	f	class:Phreeqc
sites_units	phreeqcpp/Surface.h	/^	SITES_UNITS sites_units;$/;"	m	class:cxxSurface
size	phreeqcpp/dense.h	/^		integertype size;$/;"	m	struct:_DenseMat
size	phreeqcpp/global_structures.h	/^	size_t size;				\/* memory request + sizeof(PHRQMemHeader) *\/$/;"	m	struct:PHRQMemHeader
skiploop	phreeqcpp/PBasic.cpp	/^skiploop(int up, int dn, struct LOC_exec *LINK)$/;"	f	class:PBasic
skipparen	phreeqcpp/PBasic.cpp	/^skipparen(struct LOC_exec *LINK)$/;"	f	class:PBasic
skiptoeos	phreeqcpp/PBasic.cpp	/^skiptoeos(struct LOC_exec *LINK)$/;"	f	class:PBasic
sldeton	phreeqcpp/cvode.cpp	/^#define sldeton /;"	d	file:
slnq	phreeqcpp/tidy.cpp	/^slnq(int n, LDBLE * a, LDBLE * l_delta, int ncols, int print)$/;"	f	class:Phreeqc
snch	phreeqcpp/PBasic.h	/^		char snch;$/;"	m	union:tokenrec::__anon25
snerr	phreeqcpp/PBasic.cpp	/^	snerr(const char * l_s)$/;"	f	class:PBasic
sol_D	phreeqcpp/Phreeqc.h	/^	struct sol_D *sol_D;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::sol_D
sol_D	phreeqcpp/global_structures.h	/^struct sol_D$/;"	s
sol_D_dbg	phreeqcpp/Phreeqc.h	/^	struct sol_D *sol_D_dbg;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::sol_D
soln	phreeqcpp/SelectedOutput.h	/^	bool soln;$/;"	m	class:SelectedOutput
soln	phreeqcpp/global_structures.h	/^	int soln;$/;"	m	struct:punch
soln_bits	phreeqcpp/Phreeqc.h	/^	unsigned long soln_bits, phase_bits, current_bits, temp_bits;$/;"	m	class:Phreeqc
soln_vol	phreeqcpp/Solution.h	/^	LDBLE soln_vol;$/;"	m	class:cxxSolution
solns	phreeqcpp/global_structures.h	/^	int *solns;$/;"	m	struct:inverse
solution	phreeqcpp/StorageBinList.h	/^	StorageBinListItem solution;$/;"	m	class:StorageBinList
solution	phreeqcpp/System.h	/^	cxxSolution * solution;$/;"	m	class:cxxSystem
solution	phreeqcpp/global_structures.h	/^	int solution;$/;"	m	struct:save
solution_check	phreeqcpp/step.cpp	/^solution_check(void)$/;"	f	class:Phreeqc
solution_equilibria	phreeqcpp/Exchange.h	/^	bool solution_equilibria;$/;"	m	class:cxxExchange
solution_equilibria	phreeqcpp/GasPhase.h	/^	bool solution_equilibria;$/;"	m	class:cxxGasPhase
solution_equilibria	phreeqcpp/Surface.h	/^	bool solution_equilibria;$/;"	m	class:cxxSurface
solution_in	phreeqcpp/Use.h	/^	bool solution_in;$/;"	m	class:cxxUse
solution_mass	phreeqcpp/Phreeqc.h	/^	LDBLE solution_mass, solution_volume;$/;"	m	class:Phreeqc
solution_mix	phreeqcpp/mainsubs.cpp	/^solution_mix()$/;"	f	class:Phreeqc
solution_number	phreeqcpp/basicsubs.cpp	/^solution_number(void)$/;"	f	class:Phreeqc
solution_pe_x	phreeqcpp/Phreeqc.h	/^	LDBLE solution_pe_x;$/;"	m	class:Phreeqc
solution_phase_boundary_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *solution_phase_boundary_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
solution_ptr	phreeqcpp/Use.h	/^	cxxSolution *solution_ptr;$/;"	m	class:cxxUse
solution_sum_secondary	phreeqcpp/basicsubs.cpp	/^solution_sum_secondary(const char *total_name)$/;"	f	class:Phreeqc
solution_volume	phreeqcpp/Phreeqc.h	/^	LDBLE solution_mass, solution_volume;$/;"	m	class:Phreeqc
solve_inverse	phreeqcpp/inverse.cpp	/^solve_inverse(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
solve_misc	phreeqcpp/tidy.cpp	/^solve_misc(LDBLE * xxc1, LDBLE * xxc2, LDBLE tol)$/;"	f	class:Phreeqc
solve_with_mask	phreeqcpp/inverse.cpp	/^solve_with_mask(struct inverse *inv_ptr, unsigned long cur_bits)$/;"	f	class:Phreeqc
sort_second	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::sort_second(void)$/;"	f	class:cxxNameDouble
sort_species_name	phreeqcpp/transport.cpp	/^sort_species_name(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
source	phreeqcpp/global_structures.h	/^	LDBLE *source;$/;"	m	struct:list1
source	phreeqcpp/global_structures.h	/^	LDBLE *source;$/;"	m	struct:list2
source	phreeqcpp/global_structures.h	/^	LDBLE *source;$/;"	m	struct:unknown_list
sourcedir	Makefile	/^sourcedir = $(docdir)\/src$/;"	m
sp	phreeqcpp/PBasic.h	/^		char *sp;$/;"	m	union:tokenrec::__anon25
space	phreeqcpp/utilities.cpp	/^space(void **ptr, int i, int *max, int struct_size)$/;"	f	class:Phreeqc
spec	phreeqcpp/Phreeqc.h	/^	struct species **spec, **cations, **anions, **neutrals;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species
spec	phreeqcpp/global_structures.h	/^	struct spec *spec;$/;"	m	struct:sol_D	typeref:struct:sol_D::spec
spec	phreeqcpp/global_structures.h	/^struct spec$/;"	s
species	phreeqcpp/global_structures.h	/^	const char *species[3];$/;"	m	struct:pitz_param
species	phreeqcpp/global_structures.h	/^	int species;$/;"	m	struct:prints
species	phreeqcpp/global_structures.h	/^struct species$/;"	s
species_formula	phreeqcpp/basicsubs.cpp	/^species_formula(std::string phase_name, cxxNameDouble &stoichiometry)$/;"	f	class:Phreeqc
species_gamma	phreeqcpp/Solution.h	/^	cxxNameDouble species_gamma;$/;"	m	class:cxxSolution
species_hash_table	phreeqcpp/Phreeqc.h	/^	HashTable *species_hash_table;$/;"	m	class:Phreeqc
species_list	phreeqcpp/Phreeqc.h	/^	struct species_list *species_list;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::species_list
species_list	phreeqcpp/global_structures.h	/^struct species_list$/;"	s
species_list_compare	phreeqcpp/structures.cpp	/^species_list_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
species_list_compare_alk	phreeqcpp/structures.cpp	/^species_list_compare_alk(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
species_list_compare_master	phreeqcpp/structures.cpp	/^species_list_compare_master(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
species_list_sort	phreeqcpp/structures.cpp	/^species_list_sort(void)$/;"	f	class:Phreeqc
species_map	phreeqcpp/Solution.h	/^	std::map<int, double> species_map;$/;"	m	class:cxxSolution
species_rxn_to_trxn	phreeqcpp/tidy.cpp	/^species_rxn_to_trxn(struct species *s_ptr)$/;"	f	class:Phreeqc
specific_area	phreeqcpp/SurfaceCharge.h	/^	LDBLE specific_area;$/;"	m	class:cxxSurfaceCharge
spinner	phreeqcpp/Phreeqc.h	/^	int spinner;$/;"	m	class:Phreeqc
spinodal	phreeqcpp/SS.h	/^	bool spinodal;$/;"	m	class:cxxSS
spread_length	phreeqcpp/Phreeqc.h	/^	int spread_length;$/;"	m	class:Phreeqc
spread_row	phreeqcpp/global_structures.h	/^struct spread_row$/;"	s
spread_row_free	phreeqcpp/spread.cpp	/^spread_row_free(struct spread_row *spread_row_ptr)$/;"	f	class:Phreeqc
spread_row_to_solution	phreeqcpp/spread.cpp	/^spread_row_to_solution(struct spread_row *heading, struct spread_row *units,$/;"	f	class:Phreeqc
spread_sheet	phreeqcpp/global_structures.h	/^struct spread_sheet$/;"	s
squeeze_white	phreeqcpp/common/Utils.cxx	/^Utilities::squeeze_white(std::string & s_l)$/;"	f	class:Utilities
squeeze_white	phreeqcpp/utilities.cpp	/^squeeze_white(char *s_l)$/;"	f	class:Phreeqc
srcdir	Makefile	/^srcdir = .$/;"	m
ss_assemblage	phreeqcpp/StorageBinList.h	/^	StorageBinListItem ss_assemblage;$/;"	m	class:StorageBinList
ss_assemblage	phreeqcpp/global_structures.h	/^	const char **ss_assemblage;$/;"	m	struct:model
ss_assemblage	phreeqcpp/global_structures.h	/^	int ss_assemblage;$/;"	m	struct:prints
ss_assemblage	phreeqcpp/global_structures.h	/^	int ss_assemblage;$/;"	m	struct:save
ss_assemblage_check	phreeqcpp/step.cpp	/^ss_assemblage_check(cxxSSassemblage *ss_assemblage_ptr)$/;"	f	class:Phreeqc
ss_assemblage_in	phreeqcpp/Use.h	/^	bool ss_assemblage_in;$/;"	m	class:cxxUse
ss_assemblage_ptr	phreeqcpp/Use.h	/^	cxxSSassemblage *ss_assemblage_ptr;$/;"	m	class:cxxUse
ss_binary	phreeqcpp/model.cpp	/^ss_binary(cxxSS *ss_ptr)$/;"	f	class:Phreeqc
ss_calc_a0_a1	phreeqcpp/tidy.cpp	/^ss_calc_a0_a1(cxxSS *ss_ptr)$/;"	f	class:Phreeqc
ss_comp_name	phreeqcpp/global_structures.h	/^	const char * ss_comp_name;$/;"	m	struct:unknown
ss_comp_number	phreeqcpp/global_structures.h	/^	int ss_comp_number;$/;"	m	struct:unknown
ss_comp_ptr	phreeqcpp/global_structures.h	/^	void *ss_comp_ptr;$/;"	m	struct:unknown
ss_comps	phreeqcpp/SS.h	/^	std::vector<cxxSScomp> ss_comps;$/;"	m	class:cxxSS
ss_f	phreeqcpp/model.cpp	/^ss_f(LDBLE xb, LDBLE l_a0, LDBLE l_a1, LDBLE l_kc, LDBLE l_kb, LDBLE xcaq,$/;"	f	class:Phreeqc
ss_halve	phreeqcpp/model.cpp	/^ss_halve(LDBLE l_a0, LDBLE l_a1, LDBLE x0, LDBLE x1, LDBLE l_kc, LDBLE l_kb,$/;"	f	class:Phreeqc
ss_ideal	phreeqcpp/model.cpp	/^ss_ideal(cxxSS *ss_ptr)$/;"	f	class:Phreeqc
ss_in	phreeqcpp/SS.h	/^	bool ss_in;$/;"	m	class:cxxSS
ss_in	phreeqcpp/global_structures.h	/^	int ss_in;$/;"	m	struct:unknown
ss_name	phreeqcpp/global_structures.h	/^	const char * ss_name;$/;"	m	struct:unknown
ss_prep	phreeqcpp/tidy.cpp	/^ss_prep(LDBLE t, cxxSS *ss_ptr, int print)$/;"	f	class:Phreeqc
ss_ptr	phreeqcpp/global_structures.h	/^	void *ss_ptr; $/;"	m	struct:unknown
ss_root	phreeqcpp/model.cpp	/^ss_root(LDBLE l_a0, LDBLE l_a1, LDBLE l_kc, LDBLE l_kb, LDBLE xcaq, LDBLE xbaq)$/;"	f	class:Phreeqc
ss_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *ss_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
ssassemblage	phreeqcpp/System.h	/^	cxxSSassemblage * ssassemblage;$/;"	m	class:cxxSystem
ssdat	phreeqcpp/cvode.cpp	/^#define ssdat /;"	d	file:
stag_data	phreeqcpp/Phreeqc.h	/^	struct stag_data *stag_data;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::stag_data
stag_data	phreeqcpp/global_structures.h	/^struct stag_data$/;"	s
standard	phreeqcpp/global_structures.h	/^	LDBLE standard;$/;"	m	struct:master_isotope
start	phreeqcpp/global_structures.h	/^	int *start;$/;"	m	struct:copier
start_chart	phreeqcpp/ChartObject.cpp	/^ChartObject::start_chart(void)$/;"	f	class:ChartObject
start_time	phreeqcpp/runner.h	/^	LDBLE start_time;$/;"	m	class:runner
state	phreeqcpp/Phreeqc.h	/^	int state;$/;"	m	class:Phreeqc
state	phreeqcpp/SelectedOutput.h	/^	bool state;$/;"	m	class:SelectedOutput
state	phreeqcpp/global_structures.h	/^	int state;$/;"	m	struct:punch
status	phreeqcpp/global_structures.h	/^	int status;$/;"	m	struct:prints
status	phreeqcpp/utilities.cpp	/^status(int count, const char *str, bool rk_string)$/;"	f	class:Phreeqc
status_interval	phreeqcpp/Phreeqc.h	/^	clock_t status_interval;$/;"	m	class:Phreeqc
status_on	phreeqcpp/Phreeqc.h	/^	bool status_on;$/;"	m	class:Phreeqc
status_string	phreeqcpp/Phreeqc.h	/^	std::string status_string;$/;"	m	class:Phreeqc
status_timer	phreeqcpp/Phreeqc.h	/^	clock_t status_timer;$/;"	m	class:Phreeqc
step	phreeqcpp/PBasic.h	/^			LDBLE max, step;$/;"	m	struct:looprec::__anon27::__anon28
step	phreeqcpp/SelectedOutput.h	/^	bool step;$/;"	m	class:SelectedOutput
step	phreeqcpp/global_structures.h	/^	int step;$/;"	m	struct:punch
step	phreeqcpp/step.cpp	/^step(LDBLE step_fraction)$/;"	f	class:Phreeqc
step_divide	phreeqcpp/cxxKinetics.h	/^	LDBLE step_divide;$/;"	m	class:cxxKinetics
step_save_exch	phreeqcpp/mainsubs.cpp	/^step_save_exch(int n_user)$/;"	f	class:Phreeqc
step_save_surf	phreeqcpp/mainsubs.cpp	/^step_save_surf(int n_user)$/;"	f	class:Phreeqc
step_size	phreeqcpp/Phreeqc.h	/^	LDBLE step_size;$/;"	m	class:Phreeqc
step_size_now	phreeqcpp/Phreeqc.h	/^	LDBLE step_size_now;$/;"	m	class:Phreeqc
step_x	phreeqcpp/Phreeqc.h	/^	LDBLE step_x;$/;"	m	class:Phreeqc
steps	phreeqcpp/Reaction.h	/^	std::vector < LDBLE >steps;$/;"	m	class:cxxReaction
steps	phreeqcpp/cxxKinetics.h	/^	std::vector < LDBLE >steps;$/;"	m	class:cxxKinetics
stmtline	phreeqcpp/PBasic.h	/^	linerec *stmtline, *dataline;$/;"	m	class:PBasic
stmttok	phreeqcpp/PBasic.h	/^	tokenrec *stmttok, *datatok, *buf;$/;"	m	class:PBasic
stop_calculations	phreeqcpp/Phreeqc.h	/^	int stop_calculations;$/;"	m	class:Phreeqc
stop_program	phreeqcpp/Phreeqc.h	/^	int stop_program;$/;"	m	class:Phreeqc
store_dn	phreeqcpp/prep.cpp	/^store_dn(int k, LDBLE * source, int row, LDBLE coef_in, LDBLE * gamma_source)$/;"	f	class:Phreeqc
store_get_equi_reactants	phreeqcpp/kinetics.cpp	/^store_get_equi_reactants(int l, int kin_end)$/;"	f	class:Phreeqc
store_jacob	phreeqcpp/prep.cpp	/^store_jacob(LDBLE * source, LDBLE * target, LDBLE coef)$/;"	f	class:Phreeqc
store_jacob0	phreeqcpp/prep.cpp	/^store_jacob0(int row, int column, LDBLE coef)$/;"	f	class:Phreeqc
store_mb	phreeqcpp/prep.cpp	/^store_mb(LDBLE * source, LDBLE * target, LDBLE coef)$/;"	f	class:Phreeqc
store_mb_unknowns	phreeqcpp/prep.cpp	/^store_mb_unknowns(struct unknown *unknown_ptr, LDBLE * LDBLE_ptr, LDBLE coef,$/;"	f	class:Phreeqc
store_sum_deltas	phreeqcpp/prep.cpp	/^store_sum_deltas(LDBLE * source, LDBLE * target, LDBLE coef)$/;"	f	class:Phreeqc
store_tally_table	phreeqcpp/tally.cpp	/^store_tally_table(LDBLE * l_array, int row_dim_in, int col_dim, LDBLE fill_factor)$/;"	f	class:Phreeqc
str_tolower	phreeqcpp/common/Utils.cxx	/^Utilities::str_tolower(std::string & str)$/;"	f	class:Utilities
str_tolower	phreeqcpp/utilities.cpp	/^str_tolower(char *str)$/;"	f	class:Phreeqc
str_toupper	phreeqcpp/common/Utils.cxx	/^Utilities::str_toupper(std::string & str)$/;"	f	class:Utilities
str_toupper	phreeqcpp/utilities.cpp	/^str_toupper(char *str)$/;"	f	class:Phreeqc
strcicmp	phreeqcpp/PBasic.cpp	/^strcicmp(register char *s1, register char *s2)$/;"	f	class:PBasic
strcmp_nocase	phreeqcpp/common/Utils.cxx	/^Utilities::strcmp_nocase(const char *str1, const char *str2)$/;"	f	class:Utilities
strcmp_nocase	phreeqcpp/utilities.cpp	/^strcmp_nocase(const char *str1, const char *str2)$/;"	f	class:Phreeqc
strcmp_nocase_arg1	phreeqcpp/common/Utils.cxx	/^Utilities::strcmp_nocase_arg1(const char *str1, const char *str2)$/;"	f	class:Utilities
strcmp_nocase_arg1	phreeqcpp/utilities.cpp	/^strcmp_nocase_arg1(const char *str1, const char *str2)$/;"	f	class:Phreeqc
streamify_to_next_keyword	phreeqcpp/ReadClass.cxx	/^streamify_to_next_keyword(std::istringstream & lines)$/;"	f	class:Phreeqc
strexpr	phreeqcpp/PBasic.cpp	/^strexpr(struct LOC_exec * LINK)$/;"	f	class:PBasic
strfactor	phreeqcpp/PBasic.cpp	/^strfactor(struct LOC_exec * LINK)$/;"	f	class:PBasic
string	phreeqcpp/global_structures.h	/^	int empty, string, number;$/;"	m	struct:spread_row
string_duplicate	phreeqcpp/Phreeqc.h	/^#define   string_duplicate(/;"	d
string_hsave	phreeqcpp/utilities.cpp	/^string_hsave(const char *str)$/;"	f	class:Phreeqc
string_pad	phreeqcpp/utilities.cpp	/^string_pad(const char *str, int i)$/;"	f	class:Phreeqc
string_to_spread_row	phreeqcpp/spread.cpp	/^string_to_spread_row(char *string)$/;"	f	class:Phreeqc
string_trim	phreeqcpp/utilities.cpp	/^string_trim(char *str)$/;"	f	class:Phreeqc
string_trim_left	phreeqcpp/utilities.cpp	/^string_trim_left(char *str)$/;"	f	class:Phreeqc
string_trim_right	phreeqcpp/utilities.cpp	/^string_trim_right(char *str)$/;"	f	class:Phreeqc
stringexpr	phreeqcpp/PBasic.cpp	/^stringexpr(char * Result, struct LOC_exec * LINK)$/;"	f	class:PBasic
stringfactor	phreeqcpp/PBasic.cpp	/^stringfactor(char * Result, struct LOC_exec * LINK)$/;"	f	class:PBasic
stringfactor	phreeqcpp/PBasic.cpp	/^stringfactor(std::string & Result, struct LOC_exec * LINK)$/;"	f	class:PBasic
strings_hash	phreeqcpp/Phreeqc.h	/^	std::hash_map<std::string, std::string *> strings_hash;$/;"	m	class:Phreeqc
strings_hash_clear	phreeqcpp/utilities.cpp	/^strings_hash_clear()$/;"	f	class:Phreeqc
strings_map	phreeqcpp/Phreeqc.h	/^	std::map<std::string, std::string *> strings_map;$/;"	m	class:Phreeqc
strings_map_clear	phreeqcpp/utilities.cpp	/^strings_map_clear()$/;"	f	class:Phreeqc
stringval	phreeqcpp/PBasic.h	/^	bool stringval;$/;"	m	class:valrec
stringvar	phreeqcpp/PBasic.h	/^	bool stringvar;$/;"	m	struct:varrec
strinsert	phreeqcpp/PBasic.cpp	/^strinsert(register char *src, register char *dst, register int pos)$/;"	f	class:PBasic
strltrim	phreeqcpp/PBasic.cpp	/^strltrim(register char *l_s)$/;"	f	class:PBasic
strmove	phreeqcpp/PBasic.cpp	/^strmove(register int len, register char *l_s, register int spos,$/;"	f	class:PBasic
strpos2	phreeqcpp/PBasic.cpp	/^strpos2(char *l_s, register char *pat, register int pos)$/;"	f	class:PBasic
strrtrim	phreeqcpp/PBasic.cpp	/^strrtrim(register char *l_s)$/;"	f	class:PBasic
strsub	phreeqcpp/PBasic.cpp	/^strsub(register char *ret, register char *l_s, register int pos,$/;"	f	class:PBasic
subdir	Makefile	/^subdir = src$/;"	m
subscripts	phreeqcpp/global_structures.h	/^	int *subscripts;$/;"	m	struct:save_values
subset_bad	phreeqcpp/inverse.cpp	/^subset_bad(unsigned long bits)$/;"	f	class:Phreeqc
subset_minimal	phreeqcpp/inverse.cpp	/^subset_minimal(unsigned long bits)$/;"	f	class:Phreeqc
sum	phreeqcpp/global_structures.h	/^	LDBLE sum;$/;"	m	struct:unknown
sum_delta	phreeqcpp/Phreeqc.h	/^	struct list2 *sum_delta;	\/* array of pointers to sources, targets and coefficients for$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::list2
sum_diffuse_layer	phreeqcpp/integrate.cpp	/^sum_diffuse_layer(cxxSurfaceCharge *charge_ptr)$/;"	f	class:Phreeqc
sum_jacob0	phreeqcpp/Phreeqc.h	/^	struct list0 *sum_jacob0;	\/* array of pointers to targets and coefficients for array *\/$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::list0
sum_jacob1	phreeqcpp/Phreeqc.h	/^	struct list1 *sum_jacob1;	\/* array of pointers to sources and targets for array$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::list1
sum_jacob2	phreeqcpp/Phreeqc.h	/^	struct list2 *sum_jacob2;	\/* array of coefficients and pointers to sources and$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::list2
sum_match_gases	phreeqcpp/basicsubs.cpp	/^sum_match_gases(const char *mytemplate, const char *name)$/;"	f	class:Phreeqc
sum_match_species	phreeqcpp/basicsubs.cpp	/^sum_match_species(const char *mytemplate, const char *name)$/;"	f	class:Phreeqc
sum_match_ss	phreeqcpp/basicsubs.cpp	/^sum_match_ss(const char *mytemplate, const char *name)$/;"	f	class:Phreeqc
sum_mb1	phreeqcpp/Phreeqc.h	/^	struct list1 *sum_mb1;	\/* array of pointers to sources and targets for mass$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::list1
sum_mb2	phreeqcpp/Phreeqc.h	/^	struct list2 *sum_mb2;	\/* array of coefficients and pointers to sources and$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::list2
sum_species	phreeqcpp/model.cpp	/^sum_species(void)$/;"	f	class:Phreeqc
sum_species_map	phreeqcpp/Phreeqc.h	/^	std::map<std::string, std::vector < std::string> > sum_species_map; $/;"	m	class:Phreeqc
sum_species_map_db	phreeqcpp/Phreeqc.h	/^	std::map<std::string, std::vector < std::string> > sum_species_map_db;$/;"	m	class:Phreeqc
sum_surface_comp	phreeqcpp/transport.cpp	/^sum_surface_comp(cxxSurface *source1, LDBLE f1,  cxxSurface *source2,$/;"	f	class:Phreeqc
superset_minimal	phreeqcpp/inverse.cpp	/^superset_minimal(unsigned long bits)$/;"	f	class:Phreeqc
surf_total	phreeqcpp/basicsubs.cpp	/^surf_total(const char *total_name, const char *surface_name)$/;"	f	class:Phreeqc
surf_total_no_redox	phreeqcpp/basicsubs.cpp	/^surf_total_no_redox(const char *total_name, const char *surface_name)$/;"	f	class:Phreeqc
surface	phreeqcpp/StorageBinList.h	/^	StorageBinListItem surface;$/;"	m	class:StorageBinList
surface	phreeqcpp/System.h	/^	cxxSurface * surface;$/;"	m	class:cxxSystem
surface	phreeqcpp/global_structures.h	/^	int surface;$/;"	m	struct:prints
surface	phreeqcpp/global_structures.h	/^	int surface;$/;"	m	struct:save
surface_charge	phreeqcpp/global_structures.h	/^	const char **surface_charge;$/;"	m	struct:model
surface_charge	phreeqcpp/global_structures.h	/^	const char *surface_charge;$/;"	m	struct:unknown
surface_charges	phreeqcpp/Surface.h	/^	std::vector < cxxSurfaceCharge > surface_charges;$/;"	m	class:cxxSurface
surface_comp	phreeqcpp/global_structures.h	/^	const char **surface_comp;$/;"	m	struct:model
surface_comp	phreeqcpp/global_structures.h	/^	const char *surface_comp;$/;"	m	struct:unknown
surface_comps	phreeqcpp/Surface.h	/^	std::vector < cxxSurfaceComp > surface_comps;$/;"	m	class:cxxSurface
surface_get_psi_master	phreeqcpp/structures.cpp	/^surface_get_psi_master(const char *name, int plane)$/;"	f	class:Phreeqc
surface_in	phreeqcpp/Use.h	/^	bool surface_in;$/;"	m	class:cxxUse
surface_model	phreeqcpp/model.cpp	/^surface_model(void)$/;"	f	class:Phreeqc
surface_ptr	phreeqcpp/Use.h	/^	cxxSurface *surface_ptr;$/;"	m	class:cxxUse
surface_type	phreeqcpp/global_structures.h	/^	cxxSurface::SURFACE_TYPE surface_type;$/;"	m	struct:model
surface_unknown	phreeqcpp/Phreeqc.h	/^	struct unknown *surface_unknown;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
sv	phreeqcpp/PBasic.h	/^			char **sval, *sv;$/;"	m	struct:varrec::__anon22::__anon24
sval	phreeqcpp/PBasic.h	/^			char **sval, *sv;$/;"	m	struct:varrec::__anon22::__anon24
sval	phreeqcpp/PBasic.h	/^		char *sval;$/;"	m	union:valrec::__anon26
switch_bases	phreeqcpp/prep.cpp	/^switch_bases(void)$/;"	f	class:Phreeqc
symbol	phreeqcpp/CurveObject.h	/^	std::string id, color, symbol;$/;"	m	class:CurveObject
symbol_size	phreeqcpp/CurveObject.h	/^	LDBLE line_w, symbol_size;$/;"	m	class:CurveObject
symbol_use	phreeqcpp/Form1.h	/^			 int col_use, symbol_use;$/;"	m	class:zdg_ui2::Form1
sys	phreeqcpp/Phreeqc.h	/^	struct system_species *sys;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::system_species
sys_tot	phreeqcpp/Phreeqc.h	/^	LDBLE sys_tot;$/;"	m	class:Phreeqc
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
system	phreeqcpp/StorageBin.h	/^	cxxSystem system;$/;"	m	class:cxxStorageBin
system_duplicate	phreeqcpp/structures.cpp	/^system_duplicate(int i, int save_old)$/;"	f	class:Phreeqc
system_species	phreeqcpp/global_structures.h	/^struct system_species$/;"	s
system_species_compare	phreeqcpp/basicsubs.cpp	/^system_species_compare(const void *ptr1, const void *ptr2)$/;"	f	class:Phreeqc
system_total	phreeqcpp/basicsubs.cpp	/^system_total(const char *total_name, LDBLE * count, char ***names,$/;"	f	class:Phreeqc
system_total_aq	phreeqcpp/basicsubs.cpp	/^system_total_aq(void)$/;"	f	class:Phreeqc
system_total_elements	phreeqcpp/basicsubs.cpp	/^system_total_elements(void)$/;"	f	class:Phreeqc
system_total_elt	phreeqcpp/basicsubs.cpp	/^system_total_elt(const char *total_name)$/;"	f	class:Phreeqc
system_total_elt_secondary	phreeqcpp/basicsubs.cpp	/^system_total_elt_secondary(const char *total_name)$/;"	f	class:Phreeqc
system_total_equi	phreeqcpp/basicsubs.cpp	/^system_total_equi(void)$/;"	f	class:Phreeqc
system_total_ex	phreeqcpp/basicsubs.cpp	/^system_total_ex(void)$/;"	f	class:Phreeqc
system_total_gas	phreeqcpp/basicsubs.cpp	/^system_total_gas(void)$/;"	f	class:Phreeqc
system_total_si	phreeqcpp/basicsubs.cpp	/^system_total_si(void)$/;"	f	class:Phreeqc
system_total_solids	phreeqcpp/basicsubs.cpp	/^system_total_solids(cxxExchange *exchange_ptr,$/;"	f	class:Phreeqc
system_total_ss	phreeqcpp/basicsubs.cpp	/^system_total_ss(void)$/;"	f	class:Phreeqc
system_total_surf	phreeqcpp/basicsubs.cpp	/^system_total_surf(void)$/;"	f	class:Phreeqc
szFileName	phreeqcpp/global_structures.h	/^	char *szFileName;			\/* file name *\/$/;"	m	struct:PHRQMemHeader
sz_num	phreeqcpp/PBasic.h	/^	char *sz_num;$/;"	m	struct:tokenrec
t	phreeqcpp/PBasic.h	/^	tokenrec *t;$/;"	m	struct:LOC_exec
t_buffer	phreeqcpp/Phreeqc.h	/^	struct tally_buffer *t_buffer;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::tally_buffer
t_c	phreeqcpp/global_structures.h	/^	LDBLE t_c, p_c, omega; \/* gas: critical TK, critical P(atm), Pitzer acentric coeff *\/$/;"	m	struct:phase
tag	phreeqcpp/nvector.h	/^		char tag[8];$/;"	m	struct:_generic_M_Env
tally	phreeqcpp/global_structures.h	/^struct tally$/;"	s
tally_buffer	phreeqcpp/global_structures.h	/^struct tally_buffer$/;"	s
tally_count_component	phreeqcpp/Phreeqc.h	/^	int tally_count_component;$/;"	m	class:Phreeqc
tally_table	phreeqcpp/Phreeqc.h	/^	struct tally *tally_table;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::tally
target	phreeqcpp/global_structures.h	/^	LDBLE *target;$/;"	m	struct:list0
target	phreeqcpp/global_structures.h	/^	LDBLE *target;$/;"	m	struct:list1
target	phreeqcpp/global_structures.h	/^	LDBLE *target;$/;"	m	struct:list2
target_alias	Makefile	/^target_alias = $/;"	m
tau	phreeqcpp/cvode.cpp	/^#define tau /;"	d	file:
tc	phreeqcpp/Solution.h	/^	LDBLE tc;$/;"	m	class:cxxSolution
tc_x	phreeqcpp/Phreeqc.h	/^	LDBLE tc_x;$/;"	m	class:Phreeqc
temp	phreeqcpp/SelectedOutput.h	/^	bool temp;$/;"	m	class:SelectedOutput
temp	phreeqcpp/global_structures.h	/^	LDBLE temp;$/;"	m	struct:cell_data
temp	phreeqcpp/global_structures.h	/^	LDBLE temp;$/;"	m	struct:defaults
temp	phreeqcpp/global_structures.h	/^	int temp;$/;"	m	struct:punch
temp1	phreeqcpp/Phreeqc.h	/^	LDBLE *temp1, *temp2;$/;"	m	class:Phreeqc
temp2	phreeqcpp/Phreeqc.h	/^	LDBLE *temp1, *temp2;$/;"	m	class:Phreeqc
temp_bits	phreeqcpp/Phreeqc.h	/^	unsigned long soln_bits, phase_bits, current_bits, temp_bits;$/;"	m	class:Phreeqc
temp_keyword_names	phreeqcpp/PhreeqcKeywords/Keywords.cpp	/^const std::map<Keywords::KEYWORDS, std::string>::value_type temp_keyword_names[] = {$/;"	v
temp_keywords	phreeqcpp/PhreeqcKeywords/Keywords.cpp	/^const std::map<const std::string, Keywords::KEYWORDS>::value_type temp_keywords[] = {$/;"	v
temp_tokens	phreeqcpp/PBasic.cpp	/^const std::map<const std::string, PBasic::BASIC_TOKEN>::value_type temp_tokens[] = {$/;"	v
temp_vopts	phreeqcpp/ChartObject.cpp	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/ExchComp.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/Exchange.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/GasComp.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/GasPhase.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/KineticsComp.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/PPassemblage.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/PPassemblageComp.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/Pressure.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/Reaction.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/SS.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/SSassemblage.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/SScomp.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/Solution.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/SolutionIsotope.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/StorageBinList.cpp	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/Surface.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/SurfaceCharge.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/SurfaceComp.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/Temperature.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/cxxKinetics.cxx	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/dumper.cpp	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temp_vopts	phreeqcpp/runner.cpp	/^const std::vector< std::string >::value_type temp_vopts[] = {$/;"	v
temperature	phreeqcpp/GasPhase.h	/^	LDBLE temperature;$/;"	m	class:cxxGasPhase
temperature	phreeqcpp/StorageBinList.h	/^	StorageBinListItem temperature;$/;"	m	class:StorageBinList
temperature	phreeqcpp/System.h	/^	cxxTemperature * temperature;$/;"	m	class:cxxSystem
temperature	phreeqcpp/global_structures.h	/^	LDBLE temperature;$/;"	m	struct:model
temperature_in	phreeqcpp/Use.h	/^	bool temperature_in;$/;"	m	class:cxxUse
temperature_ptr	phreeqcpp/Use.h	/^	cxxTemperature *temperature_ptr;$/;"	m	class:cxxUse
tempr	phreeqcpp/Phreeqc.h	/^	LDBLE tempr;$/;"	m	class:Phreeqc
temps	phreeqcpp/Temperature.h	/^	std::vector < LDBLE >temps;$/;"	m	class:cxxTemperature
tempv	phreeqcpp/cvode.cpp	/^#define tempv /;"	d	file:
term	phreeqcpp/PBasic.cpp	/^term(struct LOC_exec * LINK)$/;"	f	class:PBasic
test_cl1_solution	phreeqcpp/inverse.cpp	/^test_cl1_solution(void)$/;"	f	class:Phreeqc
test_db	IPhreeqc.cpp	/^int IPhreeqc::test_db(void)$/;"	f	class:IPhreeqc
th_im	phreeqcpp/global_structures.h	/^	LDBLE th_im;$/;"	m	struct:stag_data
th_m	phreeqcpp/global_structures.h	/^	LDBLE th_m;$/;"	m	struct:stag_data
theta	phreeqcpp/global_structures.h	/^		LDBLE theta;$/;"	m	union:pitz_param::__anon21
theta_param	phreeqcpp/global_structures.h	/^struct theta_param$/;"	s
theta_param_alloc	phreeqcpp/pitzer_structures.cpp	/^theta_param_alloc(void)$/;"	f	class:Phreeqc
theta_param_init	phreeqcpp/pitzer_structures.cpp	/^theta_param_init(struct theta_param *theta_param_ptr)$/;"	f	class:Phreeqc
theta_param_search	phreeqcpp/pitzer_structures.cpp	/^theta_param_search(LDBLE zj, LDBLE zk)$/;"	f	class:Phreeqc
theta_params	phreeqcpp/Phreeqc.h	/^	struct theta_param **theta_params;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::theta_param
thetas	phreeqcpp/global_structures.h	/^	struct theta_param *thetas;$/;"	m	struct:pitz_param	typeref:struct:pitz_param::theta_param
thickness	phreeqcpp/Surface.h	/^	LDBLE thickness;$/;"	m	class:cxxSurface
thickness	phreeqcpp/global_structures.h	/^	LDBLE thickness;$/;"	m	struct:model
tickStart	phreeqcpp/Form1.h	/^	public:	long int tickStart;$/;"	m	class:zdg_ui2::Form1
tidy_exchange	phreeqcpp/tidy.cpp	/^tidy_exchange(void)$/;"	f	class:Phreeqc
tidy_gas_phase	phreeqcpp/tidy.cpp	/^tidy_gas_phase(void)$/;"	f	class:Phreeqc
tidy_inverse	phreeqcpp/tidy.cpp	/^tidy_inverse(void)$/;"	f	class:Phreeqc
tidy_isotope_alphas	phreeqcpp/tidy.cpp	/^tidy_isotope_alphas(void)$/;"	f	class:Phreeqc
tidy_isotope_ratios	phreeqcpp/tidy.cpp	/^tidy_isotope_ratios(void)$/;"	f	class:Phreeqc
tidy_isotopes	phreeqcpp/tidy.cpp	/^tidy_isotopes(void)$/;"	f	class:Phreeqc
tidy_kin_exchange	phreeqcpp/tidy.cpp	/^tidy_kin_exchange(void)$/;"	f	class:Phreeqc
tidy_kin_surface	phreeqcpp/tidy.cpp	/^tidy_kin_surface(void)$/;"	f	class:Phreeqc
tidy_logk	phreeqcpp/tidy.cpp	/^tidy_logk(void)$/;"	f	class:Phreeqc
tidy_master_isotope	phreeqcpp/tidy.cpp	/^tidy_master_isotope(void)$/;"	f	class:Phreeqc
tidy_min_exchange	phreeqcpp/tidy.cpp	/^tidy_min_exchange(void)$/;"	f	class:Phreeqc
tidy_min_surface	phreeqcpp/tidy.cpp	/^tidy_min_surface(void)$/;"	f	class:Phreeqc
tidy_model	phreeqcpp/tidy.cpp	/^tidy_model(void)$/;"	f	class:Phreeqc
tidy_phases	phreeqcpp/tidy.cpp	/^tidy_phases(void)$/;"	f	class:Phreeqc
tidy_pp_assemblage	phreeqcpp/tidy.cpp	/^tidy_pp_assemblage(void)$/;"	f	class:Phreeqc
tidy_punch	phreeqcpp/tidy.cpp	/^tidy_punch(void)$/;"	f	class:Phreeqc
tidy_redox	phreeqcpp/prep.cpp	/^tidy_redox(void)$/;"	f	class:Phreeqc
tidy_solutions	phreeqcpp/tidy.cpp	/^tidy_solutions(void)$/;"	f	class:Phreeqc
tidy_species	phreeqcpp/tidy.cpp	/^tidy_species(void)$/;"	f	class:Phreeqc
tidy_ss_assemblage	phreeqcpp/tidy.cpp	/^tidy_ss_assemblage(void)$/;"	f	class:Phreeqc
tidy_surface	phreeqcpp/tidy.cpp	/^tidy_surface(void)$/;"	f	class:Phreeqc
time	phreeqcpp/SelectedOutput.h	/^	bool time;$/;"	m	class:SelectedOutput
time	phreeqcpp/global_structures.h	/^	int time;$/;"	m	struct:punch
time_step	phreeqcpp/runner.h	/^	LDBLE time_step;$/;"	m	class:runner
timer	phreeqcpp/ChartHandler.h	/^	bool timer;$/;"	m	class:ChartHandler
timer1	phreeqcpp/Form1.h	/^	private: System::Windows::Forms::Timer ^timer1;$/;"	m	class:zdg_ui2::Form1
timest	phreeqcpp/Phreeqc.h	/^	LDBLE timest;$/;"	m	class:Phreeqc
title_x	phreeqcpp/Phreeqc.h	/^	char *title_x;$/;"	m	class:Phreeqc
tk	phreeqcpp/SS.h	/^	LDBLE tk, xb1, xb2;$/;"	m	class:cxxSS
tk_x	phreeqcpp/Phreeqc.h	/^	LDBLE tk_x;$/;"	m	class:Phreeqc
tmerr	phreeqcpp/PBasic.cpp	/^	tmerr(const char * l_s)$/;"	f	class:PBasic
tn	phreeqcpp/cvdense.cpp	/^#define tn /;"	d	file:
tn	phreeqcpp/cvode.cpp	/^#define tn /;"	d	file:
tokabs	phreeqcpp/PBasic.h	/^		tokabs,$/;"	e	enum:PBasic::BASIC_TOKEN
tokact	phreeqcpp/PBasic.h	/^		tokact,$/;"	e	enum:PBasic::BASIC_TOKEN
tokalk	phreeqcpp/PBasic.h	/^		tokalk,$/;"	e	enum:PBasic::BASIC_TOKEN
tokand	phreeqcpp/PBasic.h	/^		tokand,$/;"	e	enum:PBasic::BASIC_TOKEN
tokarctan	phreeqcpp/PBasic.h	/^		tokarctan,$/;"	e	enum:PBasic::BASIC_TOKEN
tokasc	phreeqcpp/PBasic.h	/^		tokasc,$/;"	e	enum:PBasic::BASIC_TOKEN
tokbye	phreeqcpp/PBasic.h	/^		tokbye,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcalc_value	phreeqcpp/PBasic.h	/^		tokcalc_value,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcallback	phreeqcpp/PBasic.h	/^		tokcallback,$/;"	e	enum:PBasic::BASIC_TOKEN
tokceil	phreeqcpp/PBasic.h	/^		tokceil,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcell_no	phreeqcpp/PBasic.h	/^		tokcell_no,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcell_pore_volume	phreeqcpp/PBasic.h	/^		tokcell_pore_volume,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcell_porosity	phreeqcpp/PBasic.h	/^		tokcell_porosity,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcell_saturation	phreeqcpp/PBasic.h	/^		tokcell_saturation,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcell_volume	phreeqcpp/PBasic.h	/^		tokcell_volume,$/;"	e	enum:PBasic::BASIC_TOKEN
tokchange_por	phreeqcpp/PBasic.h	/^		tokchange_por,$/;"	e	enum:PBasic::BASIC_TOKEN
tokchange_surf	phreeqcpp/PBasic.h	/^		tokchange_surf,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcharge_balance	phreeqcpp/PBasic.h	/^		tokcharge_balance,$/;"	e	enum:PBasic::BASIC_TOKEN
tokchr_	phreeqcpp/PBasic.h	/^		tokchr_,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcolon	phreeqcpp/PBasic.h	/^		tokcolon,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcomma	phreeqcpp/PBasic.h	/^		tokcomma,$/;"	e	enum:PBasic::BASIC_TOKEN
tokcos	phreeqcpp/PBasic.h	/^		tokcos,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdata	phreeqcpp/PBasic.h	/^		tokdata,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdel	phreeqcpp/PBasic.h	/^		tokdel,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdescription	phreeqcpp/PBasic.h	/^		tokdescription,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdh_a	phreeqcpp/PBasic.h	/^		tokdh_a,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdh_av	phreeqcpp/PBasic.h	/^		tokdh_av,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdh_b	phreeqcpp/PBasic.h	/^		tokdh_b,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdiff_c	phreeqcpp/PBasic.h	/^		tokdiff_c,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdim	phreeqcpp/PBasic.h	/^		tokdim,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdist	phreeqcpp/PBasic.h	/^		tokdist,$/;"	e	enum:PBasic::BASIC_TOKEN
tokdiv	phreeqcpp/PBasic.h	/^		tokdiv,$/;"	e	enum:PBasic::BASIC_TOKEN
tokedl	phreeqcpp/PBasic.h	/^		tokedl,$/;"	e	enum:PBasic::BASIC_TOKEN
tokedl_species	phreeqcpp/PBasic.h	/^		tokedl_species$/;"	e	enum:PBasic::BASIC_TOKEN
tokelse	phreeqcpp/PBasic.h	/^		tokelse,$/;"	e	enum:PBasic::BASIC_TOKEN
token	phreeqcpp/global_structures.h	/^	struct rxn_token *token;$/;"	m	struct:reaction	typeref:struct:reaction::rxn_token
token	phreeqcpp/global_structures.h	/^	struct rxn_token_temp *token;$/;"	m	struct:reaction_temp	typeref:struct:reaction_temp::rxn_token_temp
token_type	phreeqcpp/common/Parser.cxx	/^CParser::TOKEN_TYPE CParser::token_type(const std::string & token)$/;"	f	class:CParser
tokend	phreeqcpp/PBasic.h	/^		tokend,$/;"	e	enum:PBasic::BASIC_TOKEN
tokenrec	phreeqcpp/PBasic.h	/^typedef struct tokenrec$/;"	s
tokenrec	phreeqcpp/PBasic.h	/^} tokenrec;$/;"	t	typeref:struct:tokenrec
tokens	phreeqcpp/global_structures.h	/^	std::vector<struct rxn_token> tokens;$/;"	m	class:cxxChemRxn
tokeol_	phreeqcpp/PBasic.h	/^		tokeol_,$/;"	e	enum:PBasic::BASIC_TOKEN
tokeps_r	phreeqcpp/PBasic.h	/^		tokeps_r,$/;"	e	enum:PBasic::BASIC_TOKEN
tokeq	phreeqcpp/PBasic.h	/^		tokeq,$/;"	e	enum:PBasic::BASIC_TOKEN
tokeq_frac	phreeqcpp/PBasic.h	/^		tokeq_frac,$/;"	e	enum:PBasic::BASIC_TOKEN
tokequi	phreeqcpp/PBasic.h	/^		tokequi,$/;"	e	enum:PBasic::BASIC_TOKEN
tokequi_delta	phreeqcpp/PBasic.h	/^		tokequi_delta,$/;"	e	enum:PBasic::BASIC_TOKEN
tokequiv_frac	phreeqcpp/PBasic.h	/^		tokequiv_frac,$/;"	e	enum:PBasic::BASIC_TOKEN
tokerase	phreeqcpp/PBasic.h	/^		tokerase,$/;"	e	enum:PBasic::BASIC_TOKEN
tokexists	phreeqcpp/PBasic.h	/^		tokexists,$/;"	e	enum:PBasic::BASIC_TOKEN
tokexp	phreeqcpp/PBasic.h	/^		tokexp,$/;"	e	enum:PBasic::BASIC_TOKEN
tokfloor	phreeqcpp/PBasic.h	/^		tokfloor,$/;"	e	enum:PBasic::BASIC_TOKEN
tokfor	phreeqcpp/PBasic.h	/^		tokfor,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgamma	phreeqcpp/PBasic.h	/^		tokgamma,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgas	phreeqcpp/PBasic.h	/^		tokgas,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgas_p	phreeqcpp/PBasic.h	/^		tokgas_p,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgas_vm	phreeqcpp/PBasic.h	/^		tokgas_vm,$/;"	e	enum:PBasic::BASIC_TOKEN
tokge	phreeqcpp/PBasic.h	/^		tokge,$/;"	e	enum:PBasic::BASIC_TOKEN
tokget	phreeqcpp/PBasic.h	/^		tokget,$/;"	e	enum:PBasic::BASIC_TOKEN
tokget_por	phreeqcpp/PBasic.h	/^		tokget_por,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgfw	phreeqcpp/PBasic.h	/^		tokgfw,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgosub	phreeqcpp/PBasic.h	/^		tokgosub,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgoto	phreeqcpp/PBasic.h	/^		tokgoto,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgotoxy	phreeqcpp/PBasic.h	/^		tokgotoxy,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgraph_sy	phreeqcpp/PBasic.h	/^		tokgraph_sy,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgraph_x	phreeqcpp/PBasic.h	/^		tokgraph_x,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgraph_y	phreeqcpp/PBasic.h	/^		tokgraph_y,$/;"	e	enum:PBasic::BASIC_TOKEN
tokgt	phreeqcpp/PBasic.h	/^		tokgt,$/;"	e	enum:PBasic::BASIC_TOKEN
tokif	phreeqcpp/PBasic.h	/^		tokif,$/;"	e	enum:PBasic::BASIC_TOKEN
tokinput	phreeqcpp/PBasic.h	/^		tokinput,$/;"	e	enum:PBasic::BASIC_TOKEN
tokinstr	phreeqcpp/PBasic.h	/^		tokinstr,$/;"	e	enum:PBasic::BASIC_TOKEN
tokiso	phreeqcpp/PBasic.h	/^		tokiso,$/;"	e	enum:PBasic::BASIC_TOKEN
tokiso_unit	phreeqcpp/PBasic.h	/^		tokiso_unit,$/;"	e	enum:PBasic::BASIC_TOKEN
tokkappa	phreeqcpp/PBasic.h	/^		tokkappa,$/;"	e	enum:PBasic::BASIC_TOKEN
tokkin	phreeqcpp/PBasic.h	/^		tokkin,$/;"	e	enum:PBasic::BASIC_TOKEN
tokkin_delta	phreeqcpp/PBasic.h	/^		tokkin_delta,$/;"	e	enum:PBasic::BASIC_TOKEN
tokkin_time	phreeqcpp/PBasic.h	/^		tokkin_time,$/;"	e	enum:PBasic::BASIC_TOKEN
tokla	phreeqcpp/PBasic.h	/^		tokla,$/;"	e	enum:PBasic::BASIC_TOKEN
tokle	phreeqcpp/PBasic.h	/^		tokle,$/;"	e	enum:PBasic::BASIC_TOKEN
toklen	phreeqcpp/PBasic.h	/^		toklen,$/;"	e	enum:PBasic::BASIC_TOKEN
toklength	phreeqcpp/PBasic.cpp	/^#define toklength /;"	d	file:
toklength	phreeqcpp/PBasic.cpp	/^#undef toklength$/;"	d	file:
toklet	phreeqcpp/PBasic.h	/^		toklet,$/;"	e	enum:PBasic::BASIC_TOKEN
toklg	phreeqcpp/PBasic.h	/^		toklg,$/;"	e	enum:PBasic::BASIC_TOKEN
toklist	phreeqcpp/PBasic.h	/^		toklist,$/;"	e	enum:PBasic::BASIC_TOKEN
toklist_s_s	phreeqcpp/PBasic.h	/^		toklist_s_s,$/;"	e	enum:PBasic::BASIC_TOKEN
toklk_named	phreeqcpp/PBasic.h	/^		toklk_named,$/;"	e	enum:PBasic::BASIC_TOKEN
toklk_phase	phreeqcpp/PBasic.h	/^		toklk_phase,$/;"	e	enum:PBasic::BASIC_TOKEN
toklk_species	phreeqcpp/PBasic.h	/^		toklk_species,$/;"	e	enum:PBasic::BASIC_TOKEN
toklm	phreeqcpp/PBasic.h	/^		toklm,$/;"	e	enum:PBasic::BASIC_TOKEN
tokload	phreeqcpp/PBasic.h	/^		tokload,$/;"	e	enum:PBasic::BASIC_TOKEN
toklog	phreeqcpp/PBasic.h	/^		toklog,$/;"	e	enum:PBasic::BASIC_TOKEN
toklog10	phreeqcpp/PBasic.h	/^		toklog10,$/;"	e	enum:PBasic::BASIC_TOKEN
toklp	phreeqcpp/PBasic.h	/^		toklp,$/;"	e	enum:PBasic::BASIC_TOKEN
toklt	phreeqcpp/PBasic.h	/^		toklt,$/;"	e	enum:PBasic::BASIC_TOKEN
tokltrim	phreeqcpp/PBasic.h	/^		tokltrim,$/;"	e	enum:PBasic::BASIC_TOKEN
tokm	phreeqcpp/PBasic.h	/^		tokm,$/;"	e	enum:PBasic::BASIC_TOKEN
tokm0	phreeqcpp/PBasic.h	/^		tokm0,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmerge	phreeqcpp/PBasic.h	/^		tokmerge,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmid_	phreeqcpp/PBasic.h	/^		tokmid_,$/;"	e	enum:PBasic::BASIC_TOKEN
tokminus	phreeqcpp/PBasic.h	/^		tokminus,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmisc1	phreeqcpp/PBasic.h	/^		tokmisc1,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmisc2	phreeqcpp/PBasic.h	/^		tokmisc2,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmod	phreeqcpp/PBasic.h	/^		tokmod,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmol	phreeqcpp/PBasic.h	/^		tokmol,$/;"	e	enum:PBasic::BASIC_TOKEN
tokmu	phreeqcpp/PBasic.h	/^		tokmu,$/;"	e	enum:PBasic::BASIC_TOKEN
tokne	phreeqcpp/PBasic.h	/^		tokne,$/;"	e	enum:PBasic::BASIC_TOKEN
toknew	phreeqcpp/PBasic.h	/^		toknew,$/;"	e	enum:PBasic::BASIC_TOKEN
toknext	phreeqcpp/PBasic.h	/^		toknext,$/;"	e	enum:PBasic::BASIC_TOKEN
toknot	phreeqcpp/PBasic.h	/^		toknot,$/;"	e	enum:PBasic::BASIC_TOKEN
toknum	phreeqcpp/PBasic.h	/^		toknum,$/;"	e	enum:PBasic::BASIC_TOKEN
tokon	phreeqcpp/PBasic.h	/^		tokon,$/;"	e	enum:PBasic::BASIC_TOKEN
tokor	phreeqcpp/PBasic.h	/^		tokor,$/;"	e	enum:PBasic::BASIC_TOKEN
tokosmotic	phreeqcpp/PBasic.h	/^		tokosmotic,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpad	phreeqcpp/PBasic.h	/^		tokpad,$/;"	e	enum:PBasic::BASIC_TOKEN
tokparm	phreeqcpp/PBasic.h	/^		tokparm,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpeek	phreeqcpp/PBasic.h	/^		tokpeek,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpercent_error	phreeqcpp/PBasic.h	/^		tokpercent_error,$/;"	e	enum:PBasic::BASIC_TOKEN
tokphase_formula	phreeqcpp/PBasic.h	/^		tokphase_formula,$/;"	e	enum:PBasic::BASIC_TOKEN
tokphase_formula_	phreeqcpp/PBasic.h	/^		tokphase_formula_,$/;"	e	enum:PBasic::BASIC_TOKEN
tokplot_xy	phreeqcpp/PBasic.h	/^		tokplot_xy,$/;"	e	enum:PBasic::BASIC_TOKEN
tokplus	phreeqcpp/PBasic.h	/^		tokplus,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpoke	phreeqcpp/PBasic.h	/^		tokpoke,$/;"	e	enum:PBasic::BASIC_TOKEN
tokporevolume	phreeqcpp/PBasic.h	/^		tokporevolume,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpr_p	phreeqcpp/PBasic.h	/^		tokpr_p,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpr_phi	phreeqcpp/PBasic.h	/^		tokpr_phi,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpressure	phreeqcpp/PBasic.h	/^		tokpressure,$/;"	e	enum:PBasic::BASIC_TOKEN
tokprint	phreeqcpp/PBasic.h	/^		tokprint,$/;"	e	enum:PBasic::BASIC_TOKEN
tokpunch	phreeqcpp/PBasic.h	/^		tokpunch,$/;"	e	enum:PBasic::BASIC_TOKEN
tokput	phreeqcpp/PBasic.h	/^		tokput,$/;"	e	enum:PBasic::BASIC_TOKEN
tokqbrn	phreeqcpp/PBasic.h	/^		tokqbrn,$/;"	e	enum:PBasic::BASIC_TOKEN
tokread	phreeqcpp/PBasic.h	/^		tokread,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrem	phreeqcpp/PBasic.h	/^		tokrem,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrenum	phreeqcpp/PBasic.h	/^		tokrenum,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrestore	phreeqcpp/PBasic.h	/^		tokrestore,$/;"	e	enum:PBasic::BASIC_TOKEN
tokreturn	phreeqcpp/PBasic.h	/^		tokreturn,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrho	phreeqcpp/PBasic.h	/^		tokrho,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrho_0	phreeqcpp/PBasic.h	/^		tokrho_0,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrp	phreeqcpp/PBasic.h	/^		tokrp,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrtrim	phreeqcpp/PBasic.h	/^		tokrtrim,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrun	phreeqcpp/PBasic.h	/^		tokrun,$/;"	e	enum:PBasic::BASIC_TOKEN
tokrxn	phreeqcpp/PBasic.h	/^		tokrxn,$/;"	e	enum:PBasic::BASIC_TOKEN
toks_s	phreeqcpp/PBasic.h	/^		toks_s,$/;"	e	enum:PBasic::BASIC_TOKEN
toksa_declercq	phreeqcpp/PBasic.h	/^		toksa_declercq,$/;"	e	enum:PBasic::BASIC_TOKEN
toksave	phreeqcpp/PBasic.h	/^		toksave,$/;"	e	enum:PBasic::BASIC_TOKEN
toksc	phreeqcpp/PBasic.h	/^		toksc,$/;"	e	enum:PBasic::BASIC_TOKEN
toksemi	phreeqcpp/PBasic.h	/^		toksemi,$/;"	e	enum:PBasic::BASIC_TOKEN
toksgn	phreeqcpp/PBasic.h	/^		toksgn,$/;"	e	enum:PBasic::BASIC_TOKEN
toksi	phreeqcpp/PBasic.h	/^		toksi,$/;"	e	enum:PBasic::BASIC_TOKEN
toksim_no	phreeqcpp/PBasic.h	/^		toksim_no,$/;"	e	enum:PBasic::BASIC_TOKEN
toksim_time	phreeqcpp/PBasic.h	/^		toksim_time,$/;"	e	enum:PBasic::BASIC_TOKEN
toksin	phreeqcpp/PBasic.h	/^		toksin,$/;"	e	enum:PBasic::BASIC_TOKEN
toksnerr	phreeqcpp/PBasic.h	/^		toksnerr,$/;"	e	enum:PBasic::BASIC_TOKEN
toksoln_vol	phreeqcpp/PBasic.h	/^		toksoln_vol,$/;"	e	enum:PBasic::BASIC_TOKEN
tokspecies_formula	phreeqcpp/PBasic.h	/^		tokspecies_formula,$/;"	e	enum:PBasic::BASIC_TOKEN
tokspecies_formula_	phreeqcpp/PBasic.h	/^		tokspecies_formula_,$/;"	e	enum:PBasic::BASIC_TOKEN
toksqr	phreeqcpp/PBasic.h	/^		toksqr,$/;"	e	enum:PBasic::BASIC_TOKEN
toksqrt	phreeqcpp/PBasic.h	/^		toksqrt,$/;"	e	enum:PBasic::BASIC_TOKEN
toksr	phreeqcpp/PBasic.h	/^		toksr,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstep	phreeqcpp/PBasic.h	/^		tokstep,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstep_no	phreeqcpp/PBasic.h	/^		tokstep_no,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstop	phreeqcpp/PBasic.h	/^		tokstop,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstr	phreeqcpp/PBasic.h	/^		tokstr,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstr_	phreeqcpp/PBasic.h	/^		tokstr_,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstr_e_	phreeqcpp/PBasic.h	/^		tokstr_e_,$/;"	e	enum:PBasic::BASIC_TOKEN
tokstr_f_	phreeqcpp/PBasic.h	/^		tokstr_f_,$/;"	e	enum:PBasic::BASIC_TOKEN
toksum_gas	phreeqcpp/PBasic.h	/^		toksum_gas,$/;"	e	enum:PBasic::BASIC_TOKEN
toksum_s_s	phreeqcpp/PBasic.h	/^		toksum_s_s,$/;"	e	enum:PBasic::BASIC_TOKEN
toksum_species	phreeqcpp/PBasic.h	/^		toksum_species,$/;"	e	enum:PBasic::BASIC_TOKEN
toksurf	phreeqcpp/PBasic.h	/^		toksurf,$/;"	e	enum:PBasic::BASIC_TOKEN
toksys	phreeqcpp/PBasic.h	/^		toksys,$/;"	e	enum:PBasic::BASIC_TOKEN
toktan	phreeqcpp/PBasic.h	/^		toktan,$/;"	e	enum:PBasic::BASIC_TOKEN
toktc	phreeqcpp/PBasic.h	/^		toktc,$/;"	e	enum:PBasic::BASIC_TOKEN
tokthen	phreeqcpp/PBasic.h	/^		tokthen,$/;"	e	enum:PBasic::BASIC_TOKEN
toktime	phreeqcpp/PBasic.h	/^		toktime,$/;"	e	enum:PBasic::BASIC_TOKEN
toktimes	phreeqcpp/PBasic.h	/^		toktimes,$/;"	e	enum:PBasic::BASIC_TOKEN
toktk	phreeqcpp/PBasic.h	/^		toktk,$/;"	e	enum:PBasic::BASIC_TOKEN
tokto	phreeqcpp/PBasic.h	/^		tokto,$/;"	e	enum:PBasic::BASIC_TOKEN
toktot	phreeqcpp/PBasic.h	/^		toktot,$/;"	e	enum:PBasic::BASIC_TOKEN
toktotal_time	phreeqcpp/PBasic.h	/^		toktotal_time,$/;"	e	enum:PBasic::BASIC_TOKEN
toktotmol	phreeqcpp/PBasic.h	/^		toktotmol,$/;"	e	enum:PBasic::BASIC_TOKEN
toktotmole	phreeqcpp/PBasic.h	/^		toktotmole,$/;"	e	enum:PBasic::BASIC_TOKEN
toktotmoles	phreeqcpp/PBasic.h	/^		toktotmoles,$/;"	e	enum:PBasic::BASIC_TOKEN
toktrim	phreeqcpp/PBasic.h	/^		toktrim,$/;"	e	enum:PBasic::BASIC_TOKEN
tokup	phreeqcpp/PBasic.h	/^		tokup,$/;"	e	enum:PBasic::BASIC_TOKEN
tokval	phreeqcpp/PBasic.h	/^		tokval,$/;"	e	enum:PBasic::BASIC_TOKEN
tokvar	phreeqcpp/PBasic.h	/^		tokvar,$/;"	e	enum:PBasic::BASIC_TOKEN
tokvm	phreeqcpp/PBasic.h	/^		tokvm,$/;"	e	enum:PBasic::BASIC_TOKEN
tokwend	phreeqcpp/PBasic.h	/^		tokwend,$/;"	e	enum:PBasic::BASIC_TOKEN
tokwhile	phreeqcpp/PBasic.h	/^		tokwhile,$/;"	e	enum:PBasic::BASIC_TOKEN
tokxor	phreeqcpp/PBasic.h	/^		tokxor,$/;"	e	enum:PBasic::BASIC_TOKEN
tol	phreeqcpp/KineticsComp.h	/^	  LDBLE tol;$/;"	m	class:cxxKineticsComp
tol	phreeqcpp/Phreeqc.h	/^	LDBLE halve(LDBLE f(LDBLE x, void *), LDBLE x0, LDBLE x1, LDBLE tol);$/;"	m	class:Phreeqc
toler	phreeqcpp/Phreeqc.h	/^	LDBLE toler, error, max_pct, scaled_error;$/;"	m	class:Phreeqc
tolerance	phreeqcpp/global_structures.h	/^	LDBLE tolerance;$/;"	m	struct:inverse
tolsf	phreeqcpp/cvode.cpp	/^#define tolsf /;"	d	file:
top_build_prefix	Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
tot1	phreeqcpp/global_structures.h	/^	LDBLE tot1, tot2;$/;"	m	struct:J_ij
tot1	phreeqcpp/global_structures.h	/^	LDBLE tot1, tot2;$/;"	m	struct:M_S
tot1_h	phreeqcpp/Phreeqc.h	/^	LDBLE tot1_h, tot1_o, tot2_h, tot2_o;$/;"	m	class:Phreeqc
tot1_o	phreeqcpp/Phreeqc.h	/^	LDBLE tot1_h, tot1_o, tot2_h, tot2_o;$/;"	m	class:Phreeqc
tot2	phreeqcpp/global_structures.h	/^	LDBLE tot1, tot2;$/;"	m	struct:J_ij
tot2	phreeqcpp/global_structures.h	/^	LDBLE tot1, tot2;$/;"	m	struct:M_S
tot2_h	phreeqcpp/Phreeqc.h	/^	LDBLE tot1_h, tot1_o, tot2_h, tot2_o;$/;"	m	class:Phreeqc
tot2_o	phreeqcpp/Phreeqc.h	/^	LDBLE tot1_h, tot1_o, tot2_h, tot2_o;$/;"	m	class:Phreeqc
tot_dh2o_moles	phreeqcpp/global_structures.h	/^	LDBLE tot_dh2o_moles;		\/* sum(moles*g*Ws\/Waq) *\/$/;"	m	struct:species
tot_g_moles	phreeqcpp/global_structures.h	/^	LDBLE tot_g_moles;			\/* (1 + sum(g)) * moles *\/$/;"	m	struct:species
total	phreeqcpp/SolutionIsotope.h	/^	LDBLE total;$/;"	m	class:cxxSolutionIsotope
total	phreeqcpp/basicsubs.cpp	/^total(const char *total_name)$/;"	f	class:Phreeqc
total	phreeqcpp/global_structures.h	/^	struct tally_buffer *total[3];$/;"	m	struct:tally	typeref:struct:tally::tally_buffer
total	phreeqcpp/global_structures.h	/^ 	LDBLE total;				\/* total concentration for element or valence state *\/$/;"	m	struct:master
total	phreeqcpp/global_structures.h	/^ 	LDBLE total;$/;"	m	struct:isotope
total_alkalinity	phreeqcpp/Phreeqc.h	/^	LDBLE total_alkalinity;$/;"	m	class:Phreeqc
total_alkalinity	phreeqcpp/Solution.h	/^	LDBLE total_alkalinity;$/;"	m	class:cxxSolution
total_carbon	phreeqcpp/Phreeqc.h	/^	LDBLE total_carbon;$/;"	m	class:Phreeqc
total_co2	phreeqcpp/Phreeqc.h	/^	LDBLE total_co2;$/;"	m	class:Phreeqc
total_h	phreeqcpp/Solution.h	/^	LDBLE total_h;$/;"	m	class:cxxSolution
total_h_x	phreeqcpp/Phreeqc.h	/^	LDBLE total_h_x;$/;"	m	class:Phreeqc
total_ions_x	phreeqcpp/Phreeqc.h	/^	LDBLE total_ions_x;$/;"	m	class:Phreeqc
total_is_major	phreeqcpp/global_structures.h	/^	int total_is_major;$/;"	m	struct:master_isotope
total_mole	phreeqcpp/basicsubs.cpp	/^total_mole(const char *total_name)$/;"	f	class:Phreeqc
total_moles	phreeqcpp/GasPhase.h	/^	LDBLE total_moles;$/;"	m	class:cxxGasPhase
total_moles	phreeqcpp/SS.h	/^	LDBLE total_moles;$/;"	m	class:cxxSS
total_o	phreeqcpp/Solution.h	/^	LDBLE total_o;$/;"	m	class:cxxSolution
total_o_x	phreeqcpp/Phreeqc.h	/^	LDBLE total_o_x;$/;"	m	class:Phreeqc
total_p	phreeqcpp/GasPhase.h	/^	LDBLE total_p;$/;"	m	class:cxxGasPhase
total_primary	phreeqcpp/global_structures.h	/^ 	LDBLE total_primary;$/;"	m	struct:master
totalize	phreeqcpp/Exchange.cxx	/^cxxExchange::totalize()$/;"	f	class:cxxExchange
totalize	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::totalize(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxGasPhase
totalize	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::totalize(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxPPassemblage
totalize	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::totalize(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxPPassemblageComp
totalize	phreeqcpp/SS.cxx	/^cxxSS::totalize(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxSS
totalize	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::totalize(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxSSassemblage
totalize	phreeqcpp/SScomp.cxx	/^cxxSScomp::totalize(Phreeqc * phreeqc_ptr)$/;"	f	class:cxxSScomp
totalize	phreeqcpp/Surface.cxx	/^cxxSurface::totalize()$/;"	f	class:cxxSurface
totalize	phreeqcpp/System.cxx	/^cxxSystem::totalize(Phreeqc * phreeqc_ptr) $/;"	f	class:cxxSystem
totals	phreeqcpp/ExchComp.h	/^	cxxNameDouble totals;$/;"	m	class:cxxExchComp
totals	phreeqcpp/Exchange.h	/^	cxxNameDouble totals;$/;"	m	class:cxxExchange
totals	phreeqcpp/GasPhase.h	/^	cxxNameDouble totals;$/;"	m	class:cxxGasPhase
totals	phreeqcpp/PPassemblageComp.h	/^	cxxNameDouble totals;$/;"	m	class:cxxPPassemblageComp
totals	phreeqcpp/SS.h	/^	cxxNameDouble totals;$/;"	m	class:cxxSS
totals	phreeqcpp/SSassemblage.h	/^	cxxNameDouble totals;$/;"	m	class:cxxSSassemblage
totals	phreeqcpp/SelectedOutput.h	/^	std::vector< std::pair< std::string, void * > > totals;$/;"	m	class:SelectedOutput
totals	phreeqcpp/Solution.h	/^	cxxNameDouble totals;$/;"	m	class:cxxSolution
totals	phreeqcpp/Surface.h	/^	cxxNameDouble totals;$/;"	m	class:cxxSurface
totals	phreeqcpp/SurfaceComp.h	/^	cxxNameDouble totals;$/;"	m	class:cxxSurfaceComp
totals	phreeqcpp/System.h	/^	cxxNameDouble totals;$/;"	m	class:cxxSystem
totals	phreeqcpp/cxxKinetics.h	/^	cxxNameDouble totals;$/;"	m	class:cxxKinetics
totals	phreeqcpp/global_structures.h	/^	int totals;$/;"	m	struct:prints
totals	phreeqcpp/global_structures.h	/^	struct name_master *totals;$/;"	m	struct:punch	typeref:struct:punch::name_master
tq	phreeqcpp/cvode.cpp	/^#define tq /;"	d	file:
trans_in	phreeqcpp/Use.h	/^	bool trans_in;$/;"	m	class:cxxUse
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transp_surf	phreeqcpp/Phreeqc.h	/^	int transp_surf;$/;"	m	class:Phreeqc
transport	phreeqcpp/Surface.h	/^	bool transport;$/;"	m	class:cxxSurface
transport	phreeqcpp/transport.cpp	/^transport(void)$/;"	f	class:Phreeqc
transport_start	phreeqcpp/Phreeqc.h	/^	int transport_start;$/;"	m	class:Phreeqc
transport_step	phreeqcpp/Phreeqc.h	/^	int transport_step;$/;"	m	class:Phreeqc
transport_warnings	phreeqcpp/Phreeqc.h	/^	int transport_warnings;$/;"	m	class:Phreeqc
trim	phreeqcpp/common/Parser.h	/^static inline std::string &trim(std::string &s)$/;"	f
trim_left	phreeqcpp/common/Parser.h	/^static inline std::string &trim_left(std::string &s)$/;"	f
trim_right	phreeqcpp/common/Parser.h	/^static inline std::string &trim_right(std::string &s)$/;"	f
trxn	phreeqcpp/Phreeqc.h	/^	struct reaction_temp trxn;	\/* structure array of working space while reading equations$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::reaction_temp
trxn_add	phreeqcpp/structures.cpp	/^trxn_add(cxxChemRxn &r_ptr, LDBLE coef, int combine)$/;"	f	class:Phreeqc
trxn_add	phreeqcpp/structures.cpp	/^trxn_add(struct reaction *r_ptr, LDBLE coef, int combine)$/;"	f	class:Phreeqc
trxn_add_phase	phreeqcpp/structures.cpp	/^trxn_add_phase(struct reaction *r_ptr, LDBLE coef, int combine)$/;"	f	class:Phreeqc
trxn_combine	phreeqcpp/structures.cpp	/^trxn_combine(void)$/;"	f	class:Phreeqc
trxn_copy	phreeqcpp/structures.cpp	/^trxn_copy(struct reaction *rxn_ptr)$/;"	f	class:Phreeqc
trxn_find_coef	phreeqcpp/structures.cpp	/^trxn_find_coef(const char *str, int start)$/;"	f	class:Phreeqc
trxn_multiply	phreeqcpp/structures.cpp	/^trxn_multiply(LDBLE coef)$/;"	f	class:Phreeqc
trxn_print	phreeqcpp/structures.cpp	/^trxn_print(void)$/;"	f	class:Phreeqc
trxn_reverse_k	phreeqcpp/structures.cpp	/^trxn_reverse_k(void)$/;"	f	class:Phreeqc
trxn_sort	phreeqcpp/structures.cpp	/^trxn_sort(void)$/;"	f	class:Phreeqc
trxn_swap	phreeqcpp/structures.cpp	/^trxn_swap(const char *token)$/;"	f	class:Phreeqc
txt	phreeqcpp/PBasic.h	/^	tokenrec *txt;$/;"	m	struct:linerec
type	Var.h	/^	VAR_TYPE type;         \/*!< holds datatype of <code>VAR<\/code>          *\/$/;"	m	struct:__anon31
type	phreeqcpp/GasPhase.h	/^	GP_TYPE type;$/;"	m	class:cxxGasPhase
type	phreeqcpp/NameDouble.h	/^	enum ND_TYPE type;$/;"	m	class:cxxNameDouble	typeref:enum:cxxNameDouble::ND_TYPE
type	phreeqcpp/Surface.h	/^	SURFACE_TYPE type;$/;"	m	class:cxxSurface
type	phreeqcpp/global_structures.h	/^	char *type;$/;"	m	struct:system_species
type	phreeqcpp/global_structures.h	/^	enum entity_type type;$/;"	m	struct:tally	typeref:enum:tally::entity_type
type	phreeqcpp/global_structures.h	/^	int type;					\/* flag indicating presence in model and types of equations *\/$/;"	m	struct:phase
type	phreeqcpp/global_structures.h	/^	int type;					\/* flag indicating presence in model and types of equations *\/$/;"	m	struct:species
type	phreeqcpp/global_structures.h	/^	int type;					\/* type: AQ or EX *\/$/;"	m	struct:spec
type	phreeqcpp/global_structures.h	/^	int type;$/;"	m	struct:unknown
type	phreeqcpp/global_structures.h	/^	pitz_param_type type;$/;"	m	struct:pitz_param
type	phreeqcpp/global_structures.h	/^ 	int type;					\/* AQ or EX *\/$/;"	m	struct:master
type_vector	phreeqcpp/global_structures.h	/^	int *type_vector;$/;"	m	struct:spread_row
u_g_defined	phreeqcpp/ChartHandler.h	/^	bool u_g_defined;$/;"	m	class:ChartHandler
uncertainties	phreeqcpp/global_structures.h	/^	LDBLE *uncertainties;$/;"	m	struct:inv_elts
uncertainties	phreeqcpp/global_structures.h	/^	LDBLE *uncertainties;$/;"	m	struct:inv_isotope
uncertainties	phreeqcpp/global_structures.h	/^	LDBLE *uncertainties;$/;"	m	struct:inverse
uncertainty	phreeqcpp/global_structures.h	/^	LDBLE uncertainty;$/;"	m	struct:const_iso
uncertainty	phreeqcpp/global_structures.h	/^	LDBLE uncertainty;$/;"	m	struct:iso
under	phreeqcpp/utilities.cpp	/^under(LDBLE xval)$/;"	f	class:Phreeqc
units	phreeqcpp/ISolution.h	/^	std::string units;$/;"	m	class:cxxISolution
units	phreeqcpp/ISolutionComp.h	/^	  std::string units;$/;"	m	class:cxxISolutionComp
units	phreeqcpp/Reaction.h	/^	std::string units;$/;"	m	class:cxxReaction
units	phreeqcpp/global_structures.h	/^	const char *units;$/;"	m	struct:defaults
units	phreeqcpp/global_structures.h	/^	const char *units;$/;"	m	struct:master_isotope
units	phreeqcpp/global_structures.h	/^	struct spread_row *units;$/;"	m	struct:spread_sheet	typeref:struct:spread_sheet::spread_row
units_x	phreeqcpp/Phreeqc.h	/^	char *units_x;$/;"	m	class:Phreeqc
unknown	phreeqcpp/global_structures.h	/^	struct unknown *unknown;$/;"	m	struct:rxn_token_temp	typeref:struct:rxn_token_temp::unknown
unknown	phreeqcpp/global_structures.h	/^	struct unknown *unknown;$/;"	m	struct:unknown_list	typeref:struct:unknown_list::unknown
unknown	phreeqcpp/global_structures.h	/^ 	struct unknown *unknown;	\/* pointer to unknown structure *\/$/;"	m	struct:master	typeref:struct:master::unknown
unknown	phreeqcpp/global_structures.h	/^struct unknown$/;"	s
unknown_alloc	phreeqcpp/structures.cpp	/^unknown_alloc(void)$/;"	f	class:Phreeqc
unknown_alloc_master	phreeqcpp/prep.cpp	/^unknown_alloc_master(void)$/;"	f	class:Phreeqc
unknown_delete	phreeqcpp/structures.cpp	/^unknown_delete(int i)$/;"	f	class:Phreeqc
unknown_free	phreeqcpp/structures.cpp	/^unknown_free(struct unknown *unknown_ptr)$/;"	f	class:Phreeqc
unknown_list	phreeqcpp/global_structures.h	/^struct unknown_list$/;"	s
unnumbered_solutions	phreeqcpp/Phreeqc.h	/^	std::vector<cxxSolution> unnumbered_solutions;$/;"	m	class:Phreeqc
unset_inert_moles	phreeqcpp/model.cpp	/^unset_inert_moles()$/;"	f	class:Phreeqc
update_errors	IPhreeqc.cpp	/^void IPhreeqc::update_errors(void)$/;"	f	class:IPhreeqc
update_time_chart	phreeqcpp/ChartObject.h	/^	int update_time_chart;			\/* milliseconds, maybe read *\/$/;"	m	class:ChartObject
upexpr	phreeqcpp/PBasic.cpp	/^upexpr(struct LOC_exec * LINK)$/;"	f	class:PBasic
uround	phreeqcpp/cvdense.cpp	/^#define uround /;"	d	file:
uround	phreeqcpp/cvode.cpp	/^#define uround /;"	d	file:
use	phreeqcpp/Phreeqc.h	/^	cxxUse use;$/;"	m	class:Phreeqc
use	phreeqcpp/global_structures.h	/^	int use;$/;"	m	struct:prints
use_cvode	phreeqcpp/cxxKinetics.h	/^	bool use_cvode;$/;"	m	class:cxxKinetics
use_etheta	phreeqcpp/Phreeqc.h	/^	int use_etheta;$/;"	m	class:Phreeqc
use_kinetics_limiter	phreeqcpp/Phreeqc.h	/^	bool use_kinetics_limiter;$/;"	m	class:Phreeqc
user_database	phreeqcpp/Phreeqc.h	/^	char *user_database;$/;"	m	class:Phreeqc
user_graph	phreeqcpp/ChartObject.h	/^	struct rate *user_graph;$/;"	m	class:ChartObject	typeref:struct:ChartObject::rate
user_graph	phreeqcpp/Phreeqc.h	/^	struct rate *user_graph;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::rate
user_graph	phreeqcpp/global_structures.h	/^	int user_graph;$/;"	m	struct:prints
user_graph_count_headings	phreeqcpp/Phreeqc.h	/^	int user_graph_count_headings;$/;"	m	class:Phreeqc
user_graph_headings	phreeqcpp/Phreeqc.h	/^	char **user_graph_headings;$/;"	m	class:Phreeqc
user_print	phreeqcpp/Phreeqc.h	/^	struct rate *user_print;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::rate
user_print	phreeqcpp/global_structures.h	/^	int user_print;$/;"	m	struct:prints
user_punch	phreeqcpp/SelectedOutput.h	/^	bool user_punch;$/;"	m	class:SelectedOutput
user_punch	phreeqcpp/global_structures.h	/^	int user_punch;$/;"	m	struct:punch
user_punch_new_def	phreeqcpp/SelectedOutput.h	/^	bool user_punch_new_def;$/;"	m	class:SelectedOutput
usingResource	phreeqcpp/ChartObject.h	/^	int usingResource;$/;"	m	class:ChartObject
v_m	phreeqcpp/GasPhase.h	/^	LDBLE v_m;$/;"	m	class:cxxGasPhase
val	phreeqcpp/PBasic.h	/^			LDBLE *val, rv;$/;"	m	struct:varrec::__anon22::__anon23
val	phreeqcpp/PBasic.h	/^		LDBLE val;$/;"	m	union:valrec::__anon26
valrec	phreeqcpp/PBasic.h	/^	valrec()$/;"	f	class:valrec
valrec	phreeqcpp/PBasic.h	/^class valrec$/;"	c
value	phreeqcpp/global_structures.h	/^	LDBLE value;$/;"	m	struct:calculate_value
value	phreeqcpp/global_structures.h	/^	LDBLE value;$/;"	m	struct:const_iso
value	phreeqcpp/global_structures.h	/^	LDBLE value;$/;"	m	struct:iso
value	phreeqcpp/global_structures.h	/^	LDBLE value;$/;"	m	struct:isotope_alpha
value	phreeqcpp/global_structures.h	/^	LDBLE value;$/;"	m	struct:save_values
varbase	phreeqcpp/PBasic.h	/^	varrec *varbase;$/;"	m	class:PBasic
varbase	phreeqcpp/global_structures.h	/^	void *varbase;$/;"	m	struct:calculate_value
varbase	phreeqcpp/global_structures.h	/^	void *varbase;$/;"	m	struct:rate
varnamelen	phreeqcpp/PBasic.h	/^#define varnamelen /;"	d
varnamestring	phreeqcpp/PBasic.h	/^typedef char varnamestring[varnamelen + 1];$/;"	t
varrec	phreeqcpp/PBasic.h	/^typedef struct varrec$/;"	s
varrec	phreeqcpp/PBasic.h	/^} varrec;$/;"	t	typeref:struct:varrec
viscosity	phreeqcpp/transport.cpp	/^viscosity(void)$/;"	f	class:Phreeqc
vm0	phreeqcpp/global_structures.h	/^	vm0,		\/* read: molar volume of a phase *\/$/;"	e	enum:__anon16
vm_tc	phreeqcpp/global_structures.h	/^	vm_tc,		\/* set in calc_vm: calculated molal volume of the species at tc *\/$/;"	e	enum:__anon16
vma1	phreeqcpp/global_structures.h	/^	vma1, vma2, vma3, vma4, \/* read: a1..a4 from supcrt, see calc_vm *\/$/;"	e	enum:__anon16
vma2	phreeqcpp/global_structures.h	/^	vma1, vma2, vma3, vma4, \/* read: a1..a4 from supcrt, see calc_vm *\/$/;"	e	enum:__anon16
vma3	phreeqcpp/global_structures.h	/^	vma1, vma2, vma3, vma4, \/* read: a1..a4 from supcrt, see calc_vm *\/$/;"	e	enum:__anon16
vma4	phreeqcpp/global_structures.h	/^	vma1, vma2, vma3, vma4, \/* read: a1..a4 from supcrt, see calc_vm *\/$/;"	e	enum:__anon16
vmi1	phreeqcpp/global_structures.h	/^	vmi1, vmi2, vmi3, vmi4, \/* ionic strength terms: (i1 + i2\/(TK - 228) + i3 * (TK - 228) ) * I^i4 *\/$/;"	e	enum:__anon16
vmi2	phreeqcpp/global_structures.h	/^	vmi1, vmi2, vmi3, vmi4, \/* ionic strength terms: (i1 + i2\/(TK - 228) + i3 * (TK - 228) ) * I^i4 *\/$/;"	e	enum:__anon16
vmi3	phreeqcpp/global_structures.h	/^	vmi1, vmi2, vmi3, vmi4, \/* ionic strength terms: (i1 + i2\/(TK - 228) + i3 * (TK - 228) ) * I^i4 *\/$/;"	e	enum:__anon16
vmi4	phreeqcpp/global_structures.h	/^	vmi1, vmi2, vmi3, vmi4, \/* ionic strength terms: (i1 + i2\/(TK - 228) + i3 * (TK - 228) ) * I^i4 *\/$/;"	e	enum:__anon16
volume	phreeqcpp/GasPhase.h	/^	LDBLE volume;$/;"	m	class:cxxGasPhase
vopts	phreeqcpp/ChartObject.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:ChartObject
vopts	phreeqcpp/ExchComp.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxExchComp
vopts	phreeqcpp/Exchange.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxExchange
vopts	phreeqcpp/GasComp.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxGasComp
vopts	phreeqcpp/GasPhase.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxGasPhase
vopts	phreeqcpp/KineticsComp.h	/^	  const static std::vector < std::string > vopts;$/;"	m	class:cxxKineticsComp
vopts	phreeqcpp/PPassemblage.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxPPassemblage
vopts	phreeqcpp/PPassemblageComp.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxPPassemblageComp
vopts	phreeqcpp/Pressure.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxPressure
vopts	phreeqcpp/Reaction.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxReaction
vopts	phreeqcpp/SS.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSS
vopts	phreeqcpp/SSassemblage.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSSassemblage
vopts	phreeqcpp/SScomp.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSScomp
vopts	phreeqcpp/Solution.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSolution
vopts	phreeqcpp/SolutionIsotope.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSolutionIsotope
vopts	phreeqcpp/StorageBinList.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:StorageBinList
vopts	phreeqcpp/Surface.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSurface
vopts	phreeqcpp/SurfaceCharge.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSurfaceCharge
vopts	phreeqcpp/SurfaceComp.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxSurfaceComp
vopts	phreeqcpp/Temperature.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxTemperature
vopts	phreeqcpp/cxxKinetics.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxKinetics
vopts	phreeqcpp/cxxMix.cxx	/^const std::vector< std::string > cxxMix::vopts;/;"	m	class:cxxMix	file:
vopts	phreeqcpp/cxxMix.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:cxxMix
vopts	phreeqcpp/dumper.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:dumper
vopts	phreeqcpp/runner.h	/^	const static std::vector < std::string > vopts;$/;"	m	class:runner
vp	phreeqcpp/PBasic.h	/^			varrec *vp;$/;"	m	struct:looprec::__anon27::__anon28
vp	phreeqcpp/PBasic.h	/^		struct varrec *vp;$/;"	m	union:tokenrec::__anon25	typeref:struct:tokenrec::__anon25::varrec
vresult	Var.h	/^		VRESULT vresult;   \/*!< valid when <code>(type == TT_ERROR)<\/code>  *\/$/;"	m	union:__anon31::__anon32
warn_MCD_X	phreeqcpp/Phreeqc.h	/^	int warn_MCD_X, warn_fixed_Surf;$/;"	m	class:Phreeqc
warn_fixed_Surf	phreeqcpp/Phreeqc.h	/^	int warn_MCD_X, warn_fixed_Surf;$/;"	m	class:Phreeqc
warning_msg	IPhreeqc.cpp	/^void IPhreeqc::warning_msg(const char *str)$/;"	f	class:IPhreeqc
warning_msg	phreeqcpp/PHRQ_io_output.cpp	/^warning_msg(const char *err_str)$/;"	f	class:Phreeqc
warning_msg	phreeqcpp/common/PHRQ_base.cxx	/^warning_msg(const std::string & stdstr)$/;"	f	class:PHRQ_base
warning_msg	phreeqcpp/common/PHRQ_io.cpp	/^warning_msg(const char *err_str)$/;"	f	class:PHRQ_io
warnings	phreeqcpp/global_structures.h	/^	int warnings;$/;"	m	struct:prints
was_set_alk	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_alk()const                                    {return this->set_alk;}$/;"	f	class:SelectedOutput
was_set_charge_balance	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_charge_balance()const                         {return this->set_charge_balance;}$/;"	f	class:SelectedOutput
was_set_dist	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_dist()const                                   {return this->set_dist;}$/;"	f	class:SelectedOutput
was_set_high_precision	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_high_precision()const                         {return this->set_high_precision;}$/;"	f	class:SelectedOutput
was_set_inverse	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_inverse()const                                {return this->set_inverse;}$/;"	f	class:SelectedOutput
was_set_mu	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_mu()const                                     {return this->set_mu;}$/;"	f	class:SelectedOutput
was_set_pe	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_pe()const                                     {return this->set_pe;}$/;"	f	class:SelectedOutput
was_set_percent_error	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_percent_error()const                          {return this->set_percent_error;}$/;"	f	class:SelectedOutput
was_set_ph	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_ph()const                                     {return this->set_ph;}$/;"	f	class:SelectedOutput
was_set_rxn	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_rxn()const                                    {return this->set_rxn;}$/;"	f	class:SelectedOutput
was_set_sim	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_sim()const                                    {return this->set_sim;}$/;"	f	class:SelectedOutput
was_set_soln	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_soln()const                                   {return this->set_soln;}$/;"	f	class:SelectedOutput
was_set_state	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_state()const                                  {return this->set_state;}$/;"	f	class:SelectedOutput
was_set_step	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_step()const                                   {return this->set_step;}$/;"	f	class:SelectedOutput
was_set_temp	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_temp()const                                   {return this->set_temp;}$/;"	f	class:SelectedOutput
was_set_time	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_time()const                                   {return this->set_time;}$/;"	f	class:SelectedOutput
was_set_user_punch	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_user_punch()const                             {return this->set_user_punch;}$/;"	f	class:SelectedOutput
was_set_water	phreeqcpp/SelectedOutput.h	/^	inline bool was_set_water()const                                  {return this->set_water;}$/;"	f	class:SelectedOutput
water	phreeqcpp/SelectedOutput.h	/^	bool water;$/;"	m	class:SelectedOutput
water	phreeqcpp/global_structures.h	/^	LDBLE water;$/;"	m	struct:defaults
water	phreeqcpp/global_structures.h	/^	int water;$/;"	m	struct:punch
water_uncertainty	phreeqcpp/global_structures.h	/^	LDBLE water_uncertainty;$/;"	m	struct:inverse
what	IPhreeqc.hpp	/^  virtual const char *what() const throw () {return "Failure in IPhreeqc\\n";}$/;"	f	class:IPhreeqcStop
whileloop	phreeqcpp/PBasic.h	/^#define whileloop /;"	d
words	phreeqcpp/Dictionary.h	/^	std::vector<std::string> words;$/;"	m	class:Dictionary
wref	phreeqcpp/global_structures.h	/^	wref,       \/* from supcrt *\/$/;"	e	enum:__anon16
write_mass_action_eqn_x	phreeqcpp/prep.cpp	/^write_mass_action_eqn_x(int stop)$/;"	f	class:Phreeqc
write_mb_eqn_x	phreeqcpp/prep.cpp	/^write_mb_eqn_x(void)$/;"	f	class:Phreeqc
write_mb_for_species_list	phreeqcpp/prep.cpp	/^write_mb_for_species_list(int n)$/;"	f	class:Phreeqc
write_optimize_names	phreeqcpp/inverse.cpp	/^write_optimize_names(struct inverse *inv_ptr)$/;"	f	class:Phreeqc
write_phase_sys_total	phreeqcpp/prep.cpp	/^write_phase_sys_total(int n)$/;"	f	class:Phreeqc
x	phreeqcpp/CurveObject.h	/^	std::vector<LDBLE> x, y;$/;"	m	class:CurveObject
x	phreeqcpp/Phreeqc.h	/^	struct unknown **x;$/;"	m	class:Phreeqc	typeref:struct:Phreeqc::unknown
x0	phreeqcpp/Phreeqc.h	/^	LDBLE halve(LDBLE f(LDBLE x, void *), LDBLE x0, LDBLE x1, LDBLE tol);$/;"	m	class:Phreeqc
x0	phreeqcpp/tidy.cpp	/^halve(LDBLE f(LDBLE x, void *), LDBLE x0, LDBLE x1, LDBLE tol)$/;"	v
x0_moles	phreeqcpp/Phreeqc.h	/^	LDBLE *x0_moles;$/;"	m	class:Phreeqc
x1	phreeqcpp/Phreeqc.h	/^	LDBLE halve(LDBLE f(LDBLE x, void *), LDBLE x0, LDBLE x1, LDBLE tol);$/;"	m	class:Phreeqc
x1	phreeqcpp/tidy.cpp	/^halve(LDBLE f(LDBLE x, void *), LDBLE x0, LDBLE x1, LDBLE tol)$/;"	v
x_arg	phreeqcpp/Phreeqc.h	/^	LDBLE *x_arg, *res_arg, *scratch;$/;"	m	class:Phreeqc
x_arg_max	phreeqcpp/Phreeqc.h	/^	int x_arg_max, res_arg_max, scratch_max;$/;"	m	class:Phreeqc
x_max	phreeqcpp/global_structures.h	/^	LDBLE exch_total, x_max;	\/* total moles of X-, max X- in transport step in sol_D[1] *\/$/;"	m	struct:sol_D
x_ratio_uncertainty	phreeqcpp/SolutionIsotope.h	/^ 	LDBLE x_ratio_uncertainty;$/;"	m	class:cxxSolutionIsotope
x_ratio_uncertainty	phreeqcpp/global_structures.h	/^ 	LDBLE x_ratio_uncertainty;$/;"	m	struct:isotope
xb1	phreeqcpp/SS.h	/^	LDBLE tk, xb1, xb2;$/;"	m	class:cxxSS
xb2	phreeqcpp/SS.h	/^	LDBLE tk, xb1, xb2;$/;"	m	class:cxxSS
xd_global	phreeqcpp/Phreeqc.h	/^	LDBLE z_global, xd_global, alpha_global;$/;"	m	class:Phreeqc
xexchange_save	phreeqcpp/mainsubs.cpp	/^xexchange_save(int n_user)$/;"	f	class:Phreeqc
xgas_save	phreeqcpp/mainsubs.cpp	/^xgas_save(int n_user)$/;"	f	class:Phreeqc
xpp_assemblage_save	phreeqcpp/mainsubs.cpp	/^xpp_assemblage_save(int n_user)$/;"	f	class:Phreeqc
xsolution_save	phreeqcpp/mainsubs.cpp	/^xsolution_save(int n_user)$/;"	f	class:Phreeqc
xsolution_zero	phreeqcpp/step.cpp	/^xsolution_zero(void)$/;"	f	class:Phreeqc
xss_assemblage_save	phreeqcpp/mainsubs.cpp	/^xss_assemblage_save(int n_user)$/;"	f	class:Phreeqc
xsurface_save	phreeqcpp/mainsubs.cpp	/^xsurface_save(int n_user)$/;"	f	class:Phreeqc
xx0	phreeqcpp/Phreeqc.h	/^	int scan(LDBLE f(LDBLE x, void *), LDBLE * xx0, LDBLE * xx1);$/;"	m	class:Phreeqc
xx0	phreeqcpp/tidy.cpp	/^scan(LDBLE f(LDBLE x, void *), LDBLE * xx0, LDBLE * xx1)$/;"	v
xx1	phreeqcpp/Phreeqc.h	/^	int scan(LDBLE f(LDBLE x, void *), LDBLE * xx0, LDBLE * xx1);$/;"	m	class:Phreeqc
y	phreeqcpp/CurveObject.h	/^	std::vector<LDBLE> x, y;$/;"	m	class:CurveObject
y	phreeqcpp/cvode.cpp	/^#define y /;"	d	file:
y_axis	phreeqcpp/CurveObject.h	/^	int y_axis; $/;"	m	class:CurveObject
z	phreeqcpp/global_structures.h	/^	LDBLE z;					\/* charge number *\/$/;"	m	struct:spec
z	phreeqcpp/global_structures.h	/^	LDBLE z;					\/* charge of species *\/$/;"	m	struct:species
z	phreeqcpp/global_structures.h	/^	LDBLE z;					\/* charge on species *\/$/;"	m	struct:rxn_token_temp
z	phreeqcpp/global_structures.h	/^	LDBLE z;$/;"	m	struct:Charge_Group
z_global	phreeqcpp/Phreeqc.h	/^	LDBLE z_global, xd_global, alpha_global;$/;"	m	class:Phreeqc
zdg_ui2	phreeqcpp/Form1.h	/^namespace zdg_ui2 {$/;"	n
zero	phreeqcpp/Phreeqc.h	/^	LDBLE *normal, *ineq_array, *res, *cu, *zero, *delta1;$/;"	m	class:Phreeqc
zero	phreeqcpp/Solution.cxx	/^cxxSolution::zero()$/;"	f	class:cxxSolution
zero_double	phreeqcpp/utilities.cpp	/^zero_double(LDBLE * target, int n)$/;"	f	class:Phreeqc
zero_max	phreeqcpp/Phreeqc.h	/^	int normal_max, ineq_array_max, res_max, cu_max, zero_max,$/;"	m	class:Phreeqc
zero_tally_table	phreeqcpp/tally.cpp	/^zero_tally_table(void)$/;"	f	class:Phreeqc
zeros	phreeqcpp/Phreeqc.h	/^	LDBLE *zeros;$/;"	m	class:Phreeqc
zeros_max	phreeqcpp/Phreeqc.h	/^	int zeros_max;$/;"	m	class:Phreeqc
zeta	phreeqcpp/global_structures.h	/^		LDBLE zeta;$/;"	m	union:pitz_param::__anon21
zg1	phreeqcpp/Form1.h	/^	public: ZedGraph::ZedGraphControl ^zg1;$/;"	m	class:zdg_ui2::Form1
zj	phreeqcpp/global_structures.h	/^	LDBLE zj;$/;"	m	struct:theta_param
zk	phreeqcpp/global_structures.h	/^	LDBLE zk;$/;"	m	struct:theta_param
zn	phreeqcpp/cvode.cpp	/^#define zn /;"	d	file:
~CErrorReporter	ErrorReporter.hxx	/^CErrorReporter<OS>::~CErrorReporter(void)$/;"	f	class:CErrorReporter
~CParser	phreeqcpp/common/Parser.cxx	/^CParser::~CParser()$/;"	f	class:CParser
~CSelectedOutput	CSelectedOutput.cpp	/^CSelectedOutput::~CSelectedOutput()$/;"	f	class:CSelectedOutput
~CVar	CVar.hxx	/^	~CVar(void) throw()$/;"	f	class:CVar
~ChartHandler	phreeqcpp/ChartHandler.cpp	/^ChartHandler::~ChartHandler()$/;"	f	class:ChartHandler
~ChartObject	phreeqcpp/ChartObject.cpp	/^ChartObject::~ChartObject()$/;"	f	class:ChartObject
~CurveObject	phreeqcpp/CurveObject.cpp	/^CurveObject::~CurveObject()$/;"	f	class:CurveObject
~Dictionary	phreeqcpp/Dictionary.cpp	/^Dictionary::~Dictionary(void)$/;"	f	class:Dictionary
~Form1	phreeqcpp/Form1.h	/^			 ~Form1() {$/;"	f	class:zdg_ui2::Form1
~IErrorReporter	ErrorReporter.hxx	/^IErrorReporter::~IErrorReporter(void)$/;"	f	class:IErrorReporter
~IPhreeqc	IPhreeqc.cpp	/^IPhreeqc::~IPhreeqc(void)$/;"	f	class:IPhreeqc
~Keywords	phreeqcpp/PhreeqcKeywords/Keywords.cpp	/^Keywords::~Keywords(void)$/;"	f	class:Keywords
~PBasic	phreeqcpp/PBasic.cpp	/^PBasic::~PBasic(void)$/;"	f	class:PBasic
~PHRQ_base	phreeqcpp/common/PHRQ_base.cxx	/^~PHRQ_base()$/;"	f	class:PHRQ_base
~PHRQ_io	phreeqcpp/common/PHRQ_io.cpp	/^~PHRQ_io()$/;"	f	class:PHRQ_io
~Phreeqc	phreeqcpp/Phreeqc.cpp	/^Phreeqc::~Phreeqc(void)$/;"	f	class:Phreeqc
~SelectedOutput	phreeqcpp/SelectedOutput.cpp	/^SelectedOutput::~SelectedOutput(void)$/;"	f	class:SelectedOutput
~Serializer	phreeqcpp/Serializer.cxx	/^Serializer::~Serializer(void)$/;"	f	class:Serializer
~StorageBinList	phreeqcpp/StorageBinList.cpp	/^StorageBinList::~StorageBinList(void)$/;"	f	class:StorageBinList
~StorageBinListItem	phreeqcpp/StorageBinList.cpp	/^StorageBinListItem::~StorageBinListItem(void)$/;"	f	class:StorageBinListItem
~UserPunch	phreeqcpp/UserPunch.cpp	/^UserPunch::~UserPunch(void)$/;"	f	class:UserPunch
~cxxChemRxn	phreeqcpp/global_structures.h	/^	~cxxChemRxn(void) {}$/;"	f	class:cxxChemRxn
~cxxExchComp	phreeqcpp/ExchComp.cxx	/^cxxExchComp::~cxxExchComp()$/;"	f	class:cxxExchComp
~cxxExchange	phreeqcpp/Exchange.cxx	/^cxxExchange::~cxxExchange()$/;"	f	class:cxxExchange
~cxxGasComp	phreeqcpp/GasComp.cxx	/^cxxGasComp::~cxxGasComp()$/;"	f	class:cxxGasComp
~cxxGasPhase	phreeqcpp/GasPhase.cxx	/^cxxGasPhase::~cxxGasPhase()$/;"	f	class:cxxGasPhase
~cxxISolution	phreeqcpp/ISolution.cxx	/^cxxISolution::~cxxISolution()$/;"	f	class:cxxISolution
~cxxISolutionComp	phreeqcpp/ISolutionComp.cxx	/^cxxISolutionComp::~cxxISolutionComp(void)$/;"	f	class:cxxISolutionComp
~cxxKinetics	phreeqcpp/cxxKinetics.cxx	/^cxxKinetics::~cxxKinetics()$/;"	f	class:cxxKinetics
~cxxKineticsComp	phreeqcpp/KineticsComp.cxx	/^cxxKineticsComp::~cxxKineticsComp()$/;"	f	class:cxxKineticsComp
~cxxMix	phreeqcpp/cxxMix.cxx	/^cxxMix::~cxxMix()$/;"	f	class:cxxMix
~cxxNameDouble	phreeqcpp/NameDouble.cxx	/^cxxNameDouble::~cxxNameDouble()$/;"	f	class:cxxNameDouble
~cxxNumKeyword	phreeqcpp/NumKeyword.cxx	/^cxxNumKeyword::~cxxNumKeyword()$/;"	f	class:cxxNumKeyword
~cxxPPassemblage	phreeqcpp/PPassemblage.cxx	/^cxxPPassemblage::~cxxPPassemblage()$/;"	f	class:cxxPPassemblage
~cxxPPassemblageComp	phreeqcpp/PPassemblageComp.cxx	/^cxxPPassemblageComp::~cxxPPassemblageComp()$/;"	f	class:cxxPPassemblageComp
~cxxPressure	phreeqcpp/Pressure.cxx	/^cxxPressure::~cxxPressure()$/;"	f	class:cxxPressure
~cxxReaction	phreeqcpp/Reaction.cxx	/^cxxReaction::~cxxReaction()$/;"	f	class:cxxReaction
~cxxSS	phreeqcpp/SS.cxx	/^cxxSS::~cxxSS()$/;"	f	class:cxxSS
~cxxSSassemblage	phreeqcpp/SSassemblage.cxx	/^cxxSSassemblage::~cxxSSassemblage()$/;"	f	class:cxxSSassemblage
~cxxSScomp	phreeqcpp/SScomp.cxx	/^cxxSScomp::~cxxSScomp()$/;"	f	class:cxxSScomp
~cxxSolution	phreeqcpp/Solution.cxx	/^cxxSolution::~cxxSolution()$/;"	f	class:cxxSolution
~cxxSolutionIsotope	phreeqcpp/SolutionIsotope.cxx	/^cxxSolutionIsotope::~cxxSolutionIsotope(void)$/;"	f	class:cxxSolutionIsotope
~cxxStorageBin	phreeqcpp/StorageBin.cxx	/^cxxStorageBin::~cxxStorageBin()$/;"	f	class:cxxStorageBin
~cxxSurface	phreeqcpp/Surface.cxx	/^cxxSurface::~cxxSurface()$/;"	f	class:cxxSurface
~cxxSurfaceCharge	phreeqcpp/SurfaceCharge.cxx	/^cxxSurfaceCharge::~cxxSurfaceCharge()$/;"	f	class:cxxSurfaceCharge
~cxxSurfaceComp	phreeqcpp/SurfaceComp.cxx	/^cxxSurfaceComp::~cxxSurfaceComp()$/;"	f	class:cxxSurfaceComp
~cxxSystem	phreeqcpp/System.cxx	/^cxxSystem::~cxxSystem(void) $/;"	f	class:cxxSystem
~cxxTemperature	phreeqcpp/Temperature.cxx	/^cxxTemperature::~cxxTemperature()$/;"	f	class:cxxTemperature
~cxxUse	phreeqcpp/Use.cpp	/^cxxUse::~cxxUse(void)$/;"	f	class:cxxUse
~dumper	phreeqcpp/dumper.cpp	/^dumper::~dumper(void)$/;"	f	class:dumper
~runner	phreeqcpp/runner.cpp	/^runner::~runner(void)$/;"	f	class:runner
~valrec	phreeqcpp/PBasic.h	/^	~valrec() {}$/;"	f	class:valrec
